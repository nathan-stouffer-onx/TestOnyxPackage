precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord5;
in vec4 v_texcoord6;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_ScaleOffsetTex2;
void main ()
{
  float d_1;
  vec4 color_2;
  vec4 tmpvar_3;
  tmpvar_3 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_2.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_3.xyz, tmpvar_3.w);
  color_2.w = tmpvar_3.w;
  vec4 tmpvar_4;
  tmpvar_4 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_2.xyz = mix (color_2.xyz, tmpvar_4.xyz, tmpvar_4.w);
  color_2.w = (tmpvar_3.w + tmpvar_4.w);
  vec4 tmpvar_5;
  tmpvar_5 = texture (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_2.xyz = mix (color_2.xyz, tmpvar_5.xyz, tmpvar_5.w);
  color_2.w = (color_2.w + tmpvar_5.w);
  bgfx_FragData[0] = color_2;
  float tmpvar_6;
  tmpvar_6 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_7;
  tmpvar_7 = floor(tmpvar_6);
  d_1 = ((tmpvar_6 - tmpvar_7) * 256.0);
  float tmpvar_8;
  tmpvar_8 = floor(d_1);
  d_1 = ((d_1 - tmpvar_8) * 256.0);
  mediump vec4 tmpvar_9;
  tmpvar_9.w = 1.0;
  tmpvar_9.x = (tmpvar_7 / 256.0);
  tmpvar_9.y = (tmpvar_8 / 256.0);
  tmpvar_9.z = (floor(d_1) / 256.0);
  bgfx_FragData[1] = tmpvar_9;
}

