precision highp int;
precision highp float;
in highp vec4 a_color0;
in highp vec4 a_color1;
in highp vec4 a_color2;
in highp vec4 a_color3;
in highp vec4 a_normal;
in highp vec3 a_position;
in highp vec4 a_texcoord0;
out highp vec4 v_color0;
out highp vec4 v_color1;
out highp vec4 v_color2;
out highp vec4 v_color3;
out highp vec3 v_normal;
out highp vec3 v_position;
out highp vec4 v_texcoord0;
uniform highp mat4 u_view;
uniform highp mat4 u_viewProj;
uniform highp vec4 u_bbOffset;
uniform highp vec4 u_billboardSize;
uniform highp vec4 u_quatRotation;
uniform highp vec4 u_camRight;
uniform highp vec4 u_camUp;
void main ()
{
  highp vec2 size_1;
  highp vec3 pivot_2;
  highp vec4 tmpvar_3;
  tmpvar_3.w = 0.0;
  tmpvar_3.xyz = (((
    ((u_quatRotation.w * u_quatRotation.w) - (((u_quatRotation.x * u_quatRotation.x) + (u_quatRotation.y * u_quatRotation.y)) + (u_quatRotation.z * u_quatRotation.z)))
   * a_normal.xyz) + (
    (2.0 * dot (a_normal.xyz, u_quatRotation.xyz))
   * u_quatRotation.xyz)) + ((2.0 * u_quatRotation.w) * (
    (u_quatRotation.yzx * a_normal.zxy)
   - 
    (u_quatRotation.zxy * a_normal.yzx)
  )));
  highp vec3 tmpvar_4;
  tmpvar_4 = a_normal.xyz;
  pivot_2.xy = tmpvar_4.xy;
  highp vec4 tmpvar_5;
  tmpvar_5.w = 1.0;
  tmpvar_5.xyz = tmpvar_4;
  highp vec3 x_6;
  x_6 = (u_view * tmpvar_5).xyz;
  size_1 = (u_billboardSize.xy * sqrt(dot (x_6, x_6)));
  pivot_2.z = (a_normal.z + u_bbOffset.x);
  highp vec2 tmpvar_7;
  tmpvar_7.x = (size_1.x * (a_position.x - 0.5));
  tmpvar_7.y = (size_1.y * a_position.y);
  highp vec4 tmpvar_8;
  tmpvar_8.w = 1.0;
  tmpvar_8.xyz = ((pivot_2 + (u_camRight.xyz * tmpvar_7.x)) + (u_camUp.xyz * tmpvar_7.y));
  gl_Position = (u_viewProj * tmpvar_8);
  v_color3 = a_color3;
  v_normal = tmpvar_3.xyz;
  v_color1 = a_color1;
  v_color0 = a_color0;
  v_texcoord0 = a_texcoord0;
  v_color2 = a_color2;
  v_position = a_position;
}

