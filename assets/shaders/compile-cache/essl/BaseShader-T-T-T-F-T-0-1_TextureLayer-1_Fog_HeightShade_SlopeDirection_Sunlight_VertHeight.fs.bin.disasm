precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTextureFrag;
uniform vec4 s_heightTextureFrag_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeDirTexture;
uniform sampler2D s_HeightBandTexture;
uniform sampler2D s_texture0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_HeightExtents;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  vec2 tmpvar_6;
  tmpvar_6 = (s_heightTextureFrag_Res.zw / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6.x;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6.y;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  float tmpvar_15;
  tmpvar_15 = (texture (s_heightTextureFrag, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_16;
  tmpvar_16 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = -(tmpvar_16.x);
  tmpvar_17.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - tmpvar_15);
  vec3 tmpvar_18;
  tmpvar_18.y = 0.0;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)) - tmpvar_15);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = -(tmpvar_16.y);
  tmpvar_19.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - tmpvar_15);
  vec3 tmpvar_20;
  tmpvar_20.x = 0.0;
  tmpvar_20.y = tmpvar_16.y;
  tmpvar_20.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)) - tmpvar_15);
  normal_5 = normalize(((
    (((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx)) + ((tmpvar_19.yzx * tmpvar_18.zxy) - (tmpvar_19.zxy * tmpvar_18.yzx)))
   + 
    ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx))
  ) + (
    (tmpvar_20.yzx * tmpvar_17.zxy)
   - 
    (tmpvar_20.zxy * tmpvar_17.yzx)
  )));
  vec4 color_21;
  vec4 tmpvar_22;
  tmpvar_22 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_21.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_22.xyz, tmpvar_22.w);
  color_21.w = tmpvar_22.w;
  fragColor_4 = color_21;
  float rad_23;
  float vec_y_24;
  vec_y_24 = -(normal_5.y);
  float tmpvar_25;
  float tmpvar_26;
  tmpvar_26 = (min (abs(
    (vec_y_24 / normal_5.x)
  ), 1.0) / max (abs(
    (vec_y_24 / normal_5.x)
  ), 1.0));
  float tmpvar_27;
  tmpvar_27 = (tmpvar_26 * tmpvar_26);
  tmpvar_27 = (((
    ((((
      ((((-0.01213232 * tmpvar_27) + 0.05368138) * tmpvar_27) - 0.1173503)
     * tmpvar_27) + 0.1938925) * tmpvar_27) - 0.3326756)
   * tmpvar_27) + 0.9999793) * tmpvar_26);
  tmpvar_27 = (tmpvar_27 + (float(
    (abs((vec_y_24 / normal_5.x)) > 1.0)
  ) * (
    (tmpvar_27 * -2.0)
   + 1.570796)));
  tmpvar_25 = (tmpvar_27 * sign((vec_y_24 / normal_5.x)));
  if ((abs(normal_5.x) > (1e-08 * abs(vec_y_24)))) {
    if ((normal_5.x < 0.0)) {
      if ((vec_y_24 >= 0.0)) {
        tmpvar_25 += 3.141593;
      } else {
        tmpvar_25 = (tmpvar_25 - 3.141593);
      };
    };
  } else {
    tmpvar_25 = (sign(vec_y_24) * 1.570796);
  };
  rad_23 = (tmpvar_25 - 1.570796);
  rad_23 = (rad_23 + (float(
    (rad_23 < 0.0)
  ) * 6.283185));
  rad_23 = (6.283185 - rad_23);
  vec2 tmpvar_28;
  tmpvar_28.y = 0.0;
  tmpvar_28.x = (rad_23 / 6.283185);
  vec4 tmpvar_29;
  tmpvar_29 = texture (s_SlopeDirTexture, tmpvar_28);
  fragColor_4.xyz = mix (color_21.xyz, tmpvar_29.xyz, (0.5 * tmpvar_29.w));
  vec3 tangentSun_30;
  vec3 planetNormal_31;
  float tmpvar_32;
  tmpvar_32 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_33;
  tmpvar_33 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_31.x = (cos(tmpvar_33) * cos(tmpvar_32));
  planetNormal_31.y = (cos(tmpvar_33) * sin(tmpvar_32));
  planetNormal_31.z = sin(tmpvar_33);
  vec3 tmpvar_34;
  tmpvar_34 = normalize(((planetNormal_31.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_31.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_30.x = -(dot (tmpvar_34, v_texcoord3.xyz));
  tangentSun_30.y = -(dot (normalize(
    ((planetNormal_31.yzx * tmpvar_34.zxy) - (planetNormal_31.zxy * tmpvar_34.yzx))
  ), v_texcoord3.xyz));
  tangentSun_30.z = dot (planetNormal_31, v_texcoord3.xyz);
  vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = mix (vec3(clamp (dot (tangentSun_30, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622504))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_36;
  tmpvar_36 = mix (fragColor_4, tmpvar_35, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_36.w;
  float tmpvar_37;
  tmpvar_37 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_38;
  tmpvar_38 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_39;
  tmpvar_39 = max ((tmpvar_38.y - (tmpvar_38.x * tmpvar_38.x)), u_sunShadowVSMParams.x);
  float tmpvar_40;
  tmpvar_40 = (tmpvar_37 - tmpvar_38.x);
  fragColor_4.xyz = mix (tmpvar_36.xyz, vec3(min (max (
    float((tmpvar_37 <= tmpvar_38.x))
  , 
    clamp ((((tmpvar_39 / 
      (tmpvar_39 + (tmpvar_40 * tmpvar_40))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_41;
  tmpvar_41 = float((u_HeightExtents.x != u_HeightExtents.y));
  vec2 tmpvar_42;
  tmpvar_42.y = 0.0;
  tmpvar_42.x = (tmpvar_41 * ((
    (v_texcoord7.w + u_eyePos.z)
   - u_HeightExtents.x) / (
    (tmpvar_41 * (u_HeightExtents.y - u_HeightExtents.x))
   + 
    (1.0 - tmpvar_41)
  )));
  vec4 tmpvar_43;
  tmpvar_43 = texture (s_HeightBandTexture, tmpvar_42);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_43.xyz, (0.5 * tmpvar_43.w));
  float tmpvar_44;
  tmpvar_44 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_fogColor.xyz, (tmpvar_44 * (tmpvar_44 * 
    (3.0 - (2.0 * tmpvar_44))
  )));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_45;
  tmpvar_45 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_46;
  tmpvar_46 = floor(tmpvar_45);
  d_2 = ((tmpvar_45 - tmpvar_46) * 256.0);
  float tmpvar_47;
  tmpvar_47 = floor(d_2);
  d_2 = ((d_2 - tmpvar_47) * 256.0);
  mediump vec4 tmpvar_48;
  tmpvar_48.w = 1.0;
  tmpvar_48.x = (tmpvar_46 / 256.0);
  tmpvar_48.y = (tmpvar_47 / 256.0);
  tmpvar_48.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_48;
  vec3 tmpvar_49;
  tmpvar_49 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_50;
  tmpvar_50.x = (tmpvar_49.y * 0.5);
  tmpvar_50.y = (-(tmpvar_49.x) * 0.5);
  tmpvar_50.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_49.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_51;
  tmpvar_51 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_50)
    ) - tmpvar_50)), tmpvar_49)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_51 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

