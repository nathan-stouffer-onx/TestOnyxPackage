precision highp int;
precision highp float;
in highp vec3 a_position;
in highp vec4 a_texcoord0;
out highp vec4 v_color0;
out highp vec4 v_color1;
out vec3 v_position;
out highp vec4 v_texcoord0;
uniform highp mat4 u_view;
uniform highp mat4 u_proj;
uniform sampler2D s_heightTextureVert;
uniform highp vec4 u_tileSize;
uniform highp vec4 u_ScaleOffsetHeight;
uniform highp vec4 u_tileDistortion;
uniform highp vec4 u_MeshResolution;
uniform highp vec4 u_depthModifier;
uniform highp vec4 u_camRight;
uniform highp vec4 u_camUp;
uniform highp vec4 u_tileMin;
uniform highp vec4 u_tileMax;
uniform highp vec4 u_scale;
uniform highp vec4 color1;
uniform highp vec4 color0;
uniform highp vec4 pixelSize;
uniform highp vec4 iconPos;
void main ()
{
  float tileZ_1;
  vec3 midpoint_2;
  vec3 position_3;
  position_3 = a_position;
  midpoint_2 = iconPos.xyz;
  tileZ_1 = 0.0;
  vec2 tmpvar_4;
  tmpvar_4 = floor((u_MeshResolution.x * clamp (iconPos.xy, vec2(0.00390625, 0.00390625), vec2(0.9960938, 0.9960938))));
  vec2 tmpvar_5;
  tmpvar_5.x = (tmpvar_4.x + 1.0);
  tmpvar_5.y = tmpvar_4.y;
  vec2 tmpvar_6;
  tmpvar_6 = (tmpvar_5 / u_MeshResolution.x);
  vec2 tmpvar_7;
  tmpvar_7.x = tmpvar_4.x;
  tmpvar_7.y = (tmpvar_4.y + 1.0);
  vec2 tmpvar_8;
  tmpvar_8 = (tmpvar_7 / u_MeshResolution.x);
  vec2 tmpvar_9;
  tmpvar_9.x = tmpvar_8.x;
  tmpvar_9.y = tmpvar_6.y;
  vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_6.x;
  tmpvar_10.y = tmpvar_8.y;
  float tmpvar_11;
  vec2 x_12;
  x_12 = (tmpvar_9 - iconPos.xy);
  tmpvar_11 = sqrt(dot (x_12, x_12));
  float tmpvar_13;
  vec2 x_14;
  x_14 = (tmpvar_10 - iconPos.xy);
  tmpvar_13 = sqrt(dot (x_14, x_14));
  vec2 tmpvar_15;
  if ((tmpvar_11 <= tmpvar_13)) {
    tmpvar_15 = tmpvar_9;
  } else {
    tmpvar_15 = tmpvar_10;
  };
  vec3 tmpvar_16;
  tmpvar_16.xy = mix (u_tileMin.xy, u_tileMax.xy, tmpvar_6);
  tmpvar_16.z = (textureLod (s_heightTextureVert, ((u_ScaleOffsetHeight.zw * tmpvar_6) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_6.y));
  vec3 tmpvar_17;
  tmpvar_17.xy = mix (u_tileMin.xy, u_tileMax.xy, tmpvar_8);
  tmpvar_17.z = (textureLod (s_heightTextureVert, ((u_ScaleOffsetHeight.zw * tmpvar_8) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_8.y));
  vec3 tmpvar_18;
  tmpvar_18.xy = mix (u_tileMin.xy, u_tileMax.xy, tmpvar_15);
  tmpvar_18.z = (textureLod (s_heightTextureVert, ((u_ScaleOffsetHeight.zw * tmpvar_15) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_15.y));
  vec3 tmpvar_19;
  vec3 a_20;
  a_20 = (tmpvar_17 - tmpvar_16);
  vec3 b_21;
  b_21 = (tmpvar_18 - tmpvar_16);
  tmpvar_19 = ((a_20.yzx * b_21.zxy) - (a_20.zxy * b_21.yzx));
  tileZ_1 = (((
    dot (tmpvar_19, tmpvar_16)
   - 
    dot (tmpvar_19.xy, mix (u_tileMin.xy, u_tileMax.xy, iconPos.xy))
  ) / tmpvar_19.z) * u_tileSize.z);
  midpoint_2.z = ((tileZ_1 - -10.0) / 19.0);
  vec3 tmpvar_22;
  tmpvar_22 = mix (u_tileMin.xyz, u_tileMax.xyz, midpoint_2);
  midpoint_2 = tmpvar_22;
  vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = tmpvar_22;
  vec3 x_24;
  x_24 = (u_view * tmpvar_23).xyz;
  position_3 = (sqrt(dot (x_24, x_24)) * a_position);
  vec2 tmpvar_25;
  tmpvar_25 = ((pixelSize.xy * u_scale.x) * position_3.xy);
  position_3 = ((tmpvar_22 + (u_camRight.xyz * tmpvar_25.x)) - (u_camUp.xyz * tmpvar_25.y));
  vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = position_3;
  gl_Position = (u_proj * (u_view * tmpvar_26));
  gl_Position.z = (gl_Position.z - (gl_Position.w * u_depthModifier.x));
  v_color1 = color1;
  v_color0 = color0;
  v_texcoord0 = a_texcoord0;
  v_position = position_3;
}

