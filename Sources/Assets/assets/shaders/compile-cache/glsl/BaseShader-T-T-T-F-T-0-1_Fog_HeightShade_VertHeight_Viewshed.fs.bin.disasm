varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_HeightBandTexture;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_HeightExtents;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  vec2 tmpvar_4;
  tmpvar_4 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4.x;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4.y;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  float tmpvar_13;
  tmpvar_13 = (texture2D (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_14;
  tmpvar_14 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_15;
  tmpvar_15.y = 0.0;
  tmpvar_15.x = -(tmpvar_14.x);
  tmpvar_15.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - tmpvar_13);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = tmpvar_14.x;
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)) - tmpvar_13);
  vec3 tmpvar_17;
  tmpvar_17.x = 0.0;
  tmpvar_17.y = -(tmpvar_14.y);
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - tmpvar_13);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = tmpvar_14.y;
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)) - tmpvar_13);
  normal_3 = normalize(((
    (((tmpvar_15.yzx * tmpvar_17.zxy) - (tmpvar_15.zxy * tmpvar_17.yzx)) + ((tmpvar_17.yzx * tmpvar_16.zxy) - (tmpvar_17.zxy * tmpvar_16.yzx)))
   + 
    ((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx))
  ) + (
    (tmpvar_18.yzx * tmpvar_15.zxy)
   - 
    (tmpvar_18.zxy * tmpvar_15.yzx)
  )));
  fragColor_2.w = 0.0;
  float tmpvar_19;
  tmpvar_19 = float((u_HeightExtents.x != u_HeightExtents.y));
  vec2 tmpvar_20;
  tmpvar_20.y = 0.0;
  tmpvar_20.x = (tmpvar_19 * ((
    (v_texcoord7.w + u_eyePos.z)
   - u_HeightExtents.x) / (
    (tmpvar_19 * (u_HeightExtents.y - u_HeightExtents.x))
   + 
    (1.0 - tmpvar_19)
  )));
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_HeightBandTexture, tmpvar_20);
  fragColor_2.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_21.xyz, (0.5 * tmpvar_21.w));
  float tmpvar_22;
  tmpvar_22 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_fogColor.xyz, (tmpvar_22 * (tmpvar_22 * 
    (3.0 - (2.0 * tmpvar_22))
  )));
  float tmpvar_23;
  vec3 tmpvar_24;
  tmpvar_24 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_23 = sqrt(dot (tmpvar_24, tmpvar_24));
  vec3 rayDir_25;
  rayDir_25.xz = tmpvar_24.xz;
  rayDir_25.y = -(tmpvar_24.y);
  fragColor_2.xyz = mix (fragColor_2.xyz, ((
    ((fragColor_2.x + fragColor_2.y) + fragColor_2.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_23 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_23 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_25).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  vec4 lineColor_26;
  float tmpvar_27;
  tmpvar_27 = sqrt(dot (tmpvar_24, tmpvar_24));
  float period_28;
  period_28 = (u_viewshedRange0.x / 4.0);
  float tmpvar_29;
  tmpvar_29 = ((1.0/(period_28)) * tmpvar_27);
  float tmpvar_30;
  tmpvar_30 = (0.5 * period_28);
  float tmpvar_31;
  tmpvar_31 = (50.0 * tmpvar_27);
  vec4 tmpvar_32;
  tmpvar_32.xyz = (vec3(1.0, 1.0, 1.0) - u_viewshedTint0.xyz);
  tmpvar_32.w = u_viewshedTint0.w;
  lineColor_26.w = tmpvar_32.w;
  lineColor_26.xyz = mix (fragColor_2.xyz, tmpvar_32.xyz, u_viewshedTint0.w);
  fragColor_2.xyz = mix (fragColor_2.xyz, lineColor_26.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_29 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_29))
     + 
      abs(dFdy(tmpvar_29))
    )), 1.0))
   * 
    (float((-(tmpvar_30) <= tmpvar_27)) * float((tmpvar_27 <= (u_viewshedRange0.x + tmpvar_30))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_31 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_31))
     + 
      abs(dFdy(tmpvar_31))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_27)) * float((tmpvar_27 <= 0.09)))
  )));
  gl_FragData[0] = fragColor_2;
  float tmpvar_33;
  tmpvar_33 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_34;
  tmpvar_34 = floor(tmpvar_33);
  d_1 = ((tmpvar_33 - tmpvar_34) * 256.0);
  float tmpvar_35;
  tmpvar_35 = floor(d_1);
  d_1 = ((d_1 - tmpvar_35) * 256.0);
  vec4 tmpvar_36;
  tmpvar_36.w = 1.0;
  tmpvar_36.x = (tmpvar_34 / 256.0);
  tmpvar_36.y = (tmpvar_35 / 256.0);
  tmpvar_36.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_36;
  vec3 tmpvar_37;
  tmpvar_37 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_38;
  tmpvar_38.x = (tmpvar_37.y * 0.5);
  tmpvar_38.y = (-(tmpvar_37.x) * 0.5);
  tmpvar_38.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_37.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_38)
      ) - tmpvar_38)), tmpvar_37)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

