varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_SlopeAspectMaxNormalZ;
uniform vec4 u_ElevationExtents;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  float tmpvar_5;
  tmpvar_5 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14.x = ((texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - (texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)));
  tmpvar_14.y = ((texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - (texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)));
  tmpvar_14.z = (2.0 * (tmpvar_5 * u_tileSize.x));
  normal_4 = normalize(tmpvar_14);
  fragColor_3 = u_BackgroundColor;
  float rad_15;
  float vec_y_16;
  vec_y_16 = -(normal_4.y);
  float tmpvar_17;
  float tmpvar_18;
  tmpvar_18 = (min (abs(
    (vec_y_16 / normal_4.x)
  ), 1.0) / max (abs(
    (vec_y_16 / normal_4.x)
  ), 1.0));
  float tmpvar_19;
  tmpvar_19 = (tmpvar_18 * tmpvar_18);
  tmpvar_19 = (((
    ((((
      ((((-0.01213232 * tmpvar_19) + 0.05368138) * tmpvar_19) - 0.1173503)
     * tmpvar_19) + 0.1938925) * tmpvar_19) - 0.3326756)
   * tmpvar_19) + 0.9999793) * tmpvar_18);
  tmpvar_19 = (tmpvar_19 + (float(
    (abs((vec_y_16 / normal_4.x)) > 1.0)
  ) * (
    (tmpvar_19 * -2.0)
   + 1.570796)));
  tmpvar_17 = (tmpvar_19 * sign((vec_y_16 / normal_4.x)));
  if ((abs(normal_4.x) > (1e-08 * abs(vec_y_16)))) {
    if ((normal_4.x < 0.0)) {
      if ((vec_y_16 >= 0.0)) {
        tmpvar_17 += 3.141593;
      } else {
        tmpvar_17 = (tmpvar_17 - 3.141593);
      };
    };
  } else {
    tmpvar_17 = (sign(vec_y_16) * 1.570796);
  };
  rad_15 = (tmpvar_17 - 1.570796);
  rad_15 = (rad_15 + (float(
    (rad_15 < 0.0)
  ) * 6.283185));
  rad_15 = (6.283185 - rad_15);
  vec2 tmpvar_20;
  tmpvar_20.y = 0.0;
  tmpvar_20.x = ((float(mod (rad_15, 6.282685))) / 6.283185);
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_SlopeAspectShadeTexture, tmpvar_20);
  fragColor_3.xyz = mix (u_BackgroundColor.xyz, tmpvar_21.xyz, (tmpvar_21.w * float(
    (abs(normal_4.z) <= u_SlopeAspectMaxNormalZ.x)
  )));
  vec3 tangentSun_22;
  vec3 planetNormal_23;
  float tmpvar_24;
  tmpvar_24 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_25;
  tmpvar_25 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_23.x = (cos(tmpvar_25) * cos(tmpvar_24));
  planetNormal_23.y = (cos(tmpvar_25) * sin(tmpvar_24));
  planetNormal_23.z = sin(tmpvar_25);
  vec3 tmpvar_26;
  tmpvar_26 = normalize(((planetNormal_23.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_23.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_22.x = -(dot (tmpvar_26, v_texcoord3.xyz));
  tangentSun_22.y = -(dot (normalize(
    ((planetNormal_23.yzx * tmpvar_26.zxy) - (planetNormal_23.zxy * tmpvar_26.yzx))
  ), v_texcoord3.xyz));
  tangentSun_22.z = dot (planetNormal_23, v_texcoord3.xyz);
  vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = mix (vec3(clamp (dot (tangentSun_22, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_28;
  tmpvar_28 = mix (fragColor_3, tmpvar_27, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_28.w;
  float tmpvar_29;
  tmpvar_29 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_30;
  tmpvar_30 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_31;
  tmpvar_31 = max ((tmpvar_30.y - (tmpvar_30.x * tmpvar_30.x)), u_sunShadowVSMParams.x);
  float tmpvar_32;
  tmpvar_32 = (tmpvar_29 - tmpvar_30.x);
  fragColor_3.xyz = mix (tmpvar_28.xyz, vec3(min (max (
    float((tmpvar_29 <= tmpvar_30.x))
  , 
    clamp ((((tmpvar_31 / 
      (tmpvar_31 + (tmpvar_32 * tmpvar_32))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float tmpvar_33;
  tmpvar_33 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_34;
  tmpvar_34 = (((tmpvar_33 * 
    ((v_texcoord7.w - u_ElevationExtents.x) / ((tmpvar_33 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_33)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_35;
  tmpvar_35.x = (float(mod (tmpvar_34, s_ElevationShadeTexture_Res.x)));
  tmpvar_35.y = floor((tmpvar_34 / s_ElevationShadeTexture_Res.y));
  vec4 tmpvar_36;
  tmpvar_36 = texture2D (s_ElevationShadeTexture, (tmpvar_35 / s_ElevationShadeTexture_Res.xy));
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_36.xyz, tmpvar_36.w);
  float tmpvar_37;
  tmpvar_37 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_38;
  tmpvar_38 = (1.0 - (tmpvar_37 * (tmpvar_37 * 
    (3.0 - (2.0 * tmpvar_37))
  )));
  float tmpvar_39;
  float tmpvar_40;
  tmpvar_40 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_41;
  tmpvar_41 = max (u_NearFarFocus.z, 1.5);
  tmpvar_39 = (u_ContourParams0.w * min (1.0, (tmpvar_41 / 
    sqrt(tmpvar_40)
  )));
  float tmpvar_42;
  tmpvar_42 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_43;
  tmpvar_43 = (0.5 * u_ContourParams0.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_39, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_39)))
       * 
        abs((fract((tmpvar_42 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_42))
       + 
        abs(dFdy(tmpvar_42))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_43) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_43))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_38));
  float tmpvar_44;
  tmpvar_44 = (u_ContourParams1.w * min (1.0, (tmpvar_41 / 
    sqrt(tmpvar_40)
  )));
  float tmpvar_45;
  tmpvar_45 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_46;
  tmpvar_46 = (0.5 * u_ContourParams1.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_44, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_44)))
       * 
        abs((fract((tmpvar_45 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_45))
       + 
        abs(dFdy(tmpvar_45))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_46) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_46))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_38));
  float tmpvar_47;
  vec3 tmpvar_48;
  tmpvar_48 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_47 = sqrt(dot (tmpvar_48, tmpvar_48));
  vec3 rayDir_49;
  rayDir_49.xz = tmpvar_48.xz;
  rayDir_49.y = -(tmpvar_48.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_47 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_47 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_49).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_50;
  tmpvar_50 = sqrt(dot (tmpvar_48, tmpvar_48));
  float period_51;
  period_51 = (u_viewshedRange0.x / 4.0);
  float tmpvar_52;
  tmpvar_52 = ((1.0/(period_51)) * tmpvar_50);
  float tmpvar_53;
  tmpvar_53 = (0.5 * period_51);
  float tmpvar_54;
  tmpvar_54 = (50.0 * tmpvar_50);
  vec4 tmpvar_55;
  tmpvar_55.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_55.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_55.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_52 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_52))
     + 
      abs(dFdy(tmpvar_52))
    )), 1.0))
   * 
    (float((-(tmpvar_53) <= tmpvar_50)) * float((tmpvar_50 <= (u_viewshedRange0.x + tmpvar_53))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_54 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_54))
     + 
      abs(dFdy(tmpvar_54))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_50)) * float((tmpvar_50 <= 0.09)))
  )));
  float tmpvar_56;
  tmpvar_56 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, ((tmpvar_56 * 
    (tmpvar_56 * (3.0 - (2.0 * tmpvar_56)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_3;
  float tmpvar_57;
  tmpvar_57 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_58;
  tmpvar_58 = floor(tmpvar_57);
  d_1 = ((tmpvar_57 - tmpvar_58) * 256.0);
  float tmpvar_59;
  tmpvar_59 = floor(d_1);
  d_1 = ((d_1 - tmpvar_59) * 256.0);
  vec4 tmpvar_60;
  tmpvar_60.w = 1.0;
  tmpvar_60.x = (tmpvar_58 / 256.0);
  tmpvar_60.y = (tmpvar_59 / 256.0);
  tmpvar_60.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_60;
  vec3 tmpvar_61;
  tmpvar_61 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_62;
  tmpvar_62.x = (tmpvar_61.y * 0.5);
  tmpvar_62.y = (-(tmpvar_61.x) * 0.5);
  tmpvar_62.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_61.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_62)
      ) - tmpvar_62)), tmpvar_61)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

