varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_BackgroundColor;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture2D (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  vec4 color_20;
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_20.xyz = mix (u_BackgroundColor.xyz, tmpvar_21.xyz, (tmpvar_21.w * u_OpacityTex0.x));
  color_20.w = max (u_BackgroundColor.w, tmpvar_21.w);
  vec3 tangentSun_22;
  vec3 planetNormal_23;
  float tmpvar_24;
  tmpvar_24 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_25;
  tmpvar_25 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_23.x = (cos(tmpvar_25) * cos(tmpvar_24));
  planetNormal_23.y = (cos(tmpvar_25) * sin(tmpvar_24));
  planetNormal_23.z = sin(tmpvar_25);
  vec3 tmpvar_26;
  tmpvar_26 = normalize(((planetNormal_23.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_23.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_22.x = -(dot (tmpvar_26, v_texcoord3.xyz));
  tangentSun_22.y = -(dot (normalize(
    ((planetNormal_23.yzx * tmpvar_26.zxy) - (planetNormal_23.zxy * tmpvar_26.yzx))
  ), v_texcoord3.xyz));
  tangentSun_22.z = dot (planetNormal_23, v_texcoord3.xyz);
  vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.xyz = mix (vec3(clamp (dot (tangentSun_22, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_28;
  tmpvar_28 = mix (color_20, tmpvar_27, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_28.w;
  float tmpvar_29;
  tmpvar_29 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_30;
  tmpvar_30 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_31;
  tmpvar_31 = max ((tmpvar_30.y - (tmpvar_30.x * tmpvar_30.x)), u_sunShadowVSMParams.x);
  float tmpvar_32;
  tmpvar_32 = (tmpvar_29 - tmpvar_30.x);
  fragColor_3.xyz = mix (tmpvar_28.xyz, vec3(min (max (
    float((tmpvar_29 <= tmpvar_30.x))
  , 
    clamp ((((tmpvar_31 / 
      (tmpvar_31 + (tmpvar_32 * tmpvar_32))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float tmpvar_33;
  tmpvar_33 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_34;
  tmpvar_34 = ((1.0/(u_ContourParams0.x)) * tmpvar_33);
  float tmpvar_35;
  tmpvar_35 = (0.5 * u_ContourParams0.x);
  float tmpvar_36;
  tmpvar_36 = (u_nearFarPlane.y / 3.0);
  float tmpvar_37;
  tmpvar_37 = dot (v_texcoord7.xy, v_texcoord7.xy);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor0.xyz, u_ContourColor0.w), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(u_ContourParams0.w))
       * 
        abs((fract((tmpvar_34 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_34))
       + 
        abs(dFdy(tmpvar_34))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_35) <= tmpvar_33)) * float((tmpvar_33 <= (u_ContourParams0.z + tmpvar_35))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * clamp (
    pow ((1.0 - (sqrt(tmpvar_37) / tmpvar_36)), 3.0)
  , 0.0, 1.0)));
  float tmpvar_38;
  tmpvar_38 = ((1.0/(u_ContourParams1.x)) * tmpvar_33);
  float tmpvar_39;
  tmpvar_39 = (0.5 * u_ContourParams1.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor1.xyz, u_ContourColor1.w), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(u_ContourParams1.w))
       * 
        abs((fract((tmpvar_38 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_38))
       + 
        abs(dFdy(tmpvar_38))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_39) <= tmpvar_33)) * float((tmpvar_33 <= (u_ContourParams1.z + tmpvar_39))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * clamp (
    pow ((1.0 - (sqrt(tmpvar_37) / tmpvar_36)), 3.0)
  , 0.0, 1.0)));
  float tmpvar_40;
  tmpvar_40 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_40 * (tmpvar_40 * 
    (3.0 - (2.0 * tmpvar_40))
  )));
  float tmpvar_41;
  vec3 tmpvar_42;
  tmpvar_42 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_41 = sqrt(dot (tmpvar_42, tmpvar_42));
  vec3 rayDir_43;
  rayDir_43.xz = tmpvar_42.xz;
  rayDir_43.y = -(tmpvar_42.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_41 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_41 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_43).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_44;
  tmpvar_44 = sqrt(dot (tmpvar_42, tmpvar_42));
  float period_45;
  period_45 = (u_viewshedRange0.x / 4.0);
  float tmpvar_46;
  tmpvar_46 = ((1.0/(period_45)) * tmpvar_44);
  float tmpvar_47;
  tmpvar_47 = (0.5 * period_45);
  float tmpvar_48;
  tmpvar_48 = (50.0 * tmpvar_44);
  vec4 tmpvar_49;
  tmpvar_49.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_49.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_49.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_46 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_46))
     + 
      abs(dFdy(tmpvar_46))
    )), 1.0))
   * 
    (float((-(tmpvar_47) <= tmpvar_44)) * float((tmpvar_44 <= (u_viewshedRange0.x + tmpvar_47))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_48 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_48))
     + 
      abs(dFdy(tmpvar_48))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_44)) * float((tmpvar_44 <= 0.09)))
  )));
  gl_FragData[0] = fragColor_3;
  float tmpvar_50;
  tmpvar_50 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_51;
  tmpvar_51 = floor(tmpvar_50);
  d_1 = ((tmpvar_50 - tmpvar_51) * 256.0);
  float tmpvar_52;
  tmpvar_52 = floor(d_1);
  d_1 = ((d_1 - tmpvar_52) * 256.0);
  vec4 tmpvar_53;
  tmpvar_53.w = 1.0;
  tmpvar_53.x = (tmpvar_51 / 256.0);
  tmpvar_53.y = (tmpvar_52 / 256.0);
  tmpvar_53.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_53;
  vec3 tmpvar_54;
  tmpvar_54 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_55;
  tmpvar_55.x = (tmpvar_54.y * 0.5);
  tmpvar_55.y = (-(tmpvar_54.x) * 0.5);
  tmpvar_55.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_54.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_55)
      ) - tmpvar_55)), tmpvar_54)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

