varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  float tmpvar_5;
  tmpvar_5 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14.x = ((texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - (texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)));
  tmpvar_14.y = ((texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - (texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)));
  tmpvar_14.z = (2.0 * (tmpvar_5 * u_tileSize.x));
  normal_4 = normalize(tmpvar_14);
  vec4 color_15;
  vec4 tmpvar_16;
  tmpvar_16 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_15.xyz = mix (u_BackgroundColor.xyz, tmpvar_16.xyz, (tmpvar_16.w * u_OpacityTex0.x));
  color_15.w = max (u_BackgroundColor.w, tmpvar_16.w);
  vec4 tmpvar_17;
  tmpvar_17 = texture2D (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_15.xyz = mix (color_15.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex1.x));
  color_15.w = max (color_15.w, tmpvar_17.w);
  vec4 tmpvar_18;
  tmpvar_18 = texture2D (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_15.xyz = mix (color_15.xyz, tmpvar_18.xyz, (tmpvar_18.w * u_OpacityTex2.x));
  color_15.w = max (color_15.w, tmpvar_18.w);
  vec3 tangentSun_19;
  vec3 planetNormal_20;
  float tmpvar_21;
  tmpvar_21 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_22;
  tmpvar_22 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_20.x = (cos(tmpvar_22) * cos(tmpvar_21));
  planetNormal_20.y = (cos(tmpvar_22) * sin(tmpvar_21));
  planetNormal_20.z = sin(tmpvar_22);
  vec3 tmpvar_23;
  tmpvar_23 = normalize(((planetNormal_20.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_20.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_19.x = -(dot (tmpvar_23, v_texcoord3.xyz));
  tangentSun_19.y = -(dot (normalize(
    ((planetNormal_20.yzx * tmpvar_23.zxy) - (planetNormal_20.zxy * tmpvar_23.yzx))
  ), v_texcoord3.xyz));
  tangentSun_19.z = dot (planetNormal_20, v_texcoord3.xyz);
  vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = mix (vec3(clamp (dot (tangentSun_19, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_25;
  tmpvar_25 = mix (color_15, tmpvar_24, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_25.w;
  float tmpvar_26;
  tmpvar_26 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_27;
  tmpvar_27 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_28;
  tmpvar_28 = max ((tmpvar_27.y - (tmpvar_27.x * tmpvar_27.x)), u_sunShadowVSMParams.x);
  float tmpvar_29;
  tmpvar_29 = (tmpvar_26 - tmpvar_27.x);
  fragColor_3.xyz = mix (tmpvar_25.xyz, vec3(min (max (
    float((tmpvar_26 <= tmpvar_27.x))
  , 
    clamp ((((tmpvar_28 / 
      (tmpvar_28 + (tmpvar_29 * tmpvar_29))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float tmpvar_30;
  tmpvar_30 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_31;
  tmpvar_31 = (1.0 - (tmpvar_30 * (tmpvar_30 * 
    (3.0 - (2.0 * tmpvar_30))
  )));
  float tmpvar_32;
  float tmpvar_33;
  tmpvar_33 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_34;
  tmpvar_34 = max (u_NearFarFocus.z, 1.5);
  tmpvar_32 = (u_ContourParams0.w * min (1.0, (tmpvar_34 / 
    sqrt(tmpvar_33)
  )));
  float tmpvar_35;
  tmpvar_35 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_36;
  tmpvar_36 = (0.5 * u_ContourParams0.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_32, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_32)))
       * 
        abs((fract((tmpvar_35 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_35))
       + 
        abs(dFdy(tmpvar_35))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_36) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_36))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_31));
  float tmpvar_37;
  tmpvar_37 = (u_ContourParams1.w * min (1.0, (tmpvar_34 / 
    sqrt(tmpvar_33)
  )));
  float tmpvar_38;
  tmpvar_38 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_39;
  tmpvar_39 = (0.5 * u_ContourParams1.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_37, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_37)))
       * 
        abs((fract((tmpvar_38 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_38))
       + 
        abs(dFdy(tmpvar_38))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_39) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_39))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_31));
  float tmpvar_40;
  tmpvar_40 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, ((tmpvar_40 * 
    (tmpvar_40 * (3.0 - (2.0 * tmpvar_40)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_3;
  float tmpvar_41;
  tmpvar_41 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_42;
  tmpvar_42 = floor(tmpvar_41);
  d_1 = ((tmpvar_41 - tmpvar_42) * 256.0);
  float tmpvar_43;
  tmpvar_43 = floor(d_1);
  d_1 = ((d_1 - tmpvar_43) * 256.0);
  vec4 tmpvar_44;
  tmpvar_44.w = 1.0;
  tmpvar_44.x = (tmpvar_42 / 256.0);
  tmpvar_44.y = (tmpvar_43 / 256.0);
  tmpvar_44.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_44;
  vec3 tmpvar_45;
  tmpvar_45 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_46;
  tmpvar_46.x = (tmpvar_45.y * 0.5);
  tmpvar_46.y = (-(tmpvar_45.x) * 0.5);
  tmpvar_46.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_45.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_46)
      ) - tmpvar_46)), tmpvar_45)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

