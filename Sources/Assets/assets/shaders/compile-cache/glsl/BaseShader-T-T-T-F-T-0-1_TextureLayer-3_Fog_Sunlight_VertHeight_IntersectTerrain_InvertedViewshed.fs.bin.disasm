varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_HeightBandTexture;
uniform sampler2D s_SlopeAngleTexture;
uniform sampler2D s_SlopeDirTexture;
uniform sampler2D s_heightTextureFrag;
uniform vec4 s_heightTextureFrag_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedColor0;
uniform vec4 u_viewshedRange;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane;
uniform vec4 u_viewshedBias;
uniform vec4 u_dimStrength;
uniform vec4 u_HeightExtents;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTextureFrag_Res.zw / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture2D (s_heightTextureFrag, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture2D (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture2D (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture2D (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture2D (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  vec4 color_20;
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_20.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_21.xyz, tmpvar_21.w);
  color_20.w = tmpvar_21.w;
  vec4 tmpvar_22;
  tmpvar_22 = texture2D (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_20.xyz = mix (color_20.xyz, tmpvar_22.xyz, tmpvar_22.w);
  color_20.w = (tmpvar_21.w + tmpvar_22.w);
  vec4 tmpvar_23;
  tmpvar_23 = texture2D (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_20.xyz = mix (color_20.xyz, tmpvar_23.xyz, tmpvar_23.w);
  color_20.w = (color_20.w + tmpvar_23.w);
  vec3 tangentSun_24;
  vec3 planetNormal_25;
  float tmpvar_26;
  tmpvar_26 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_27;
  tmpvar_27 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_25.x = (cos(tmpvar_27) * cos(tmpvar_26));
  planetNormal_25.y = (cos(tmpvar_27) * sin(tmpvar_26));
  planetNormal_25.z = sin(tmpvar_27);
  vec3 tmpvar_28;
  tmpvar_28 = normalize(((planetNormal_25.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_25.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_24.x = -(dot (tmpvar_28, v_texcoord3.xyz));
  tangentSun_24.y = -(dot (normalize(
    ((planetNormal_25.yzx * tmpvar_28.zxy) - (planetNormal_25.zxy * tmpvar_28.yzx))
  ), v_texcoord3.xyz));
  tangentSun_24.z = dot (planetNormal_25, v_texcoord3.xyz);
  vec4 tmpvar_29;
  tmpvar_29.w = 1.0;
  tmpvar_29.xyz = mix (vec3(clamp (dot (tangentSun_24, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_30;
  tmpvar_30 = mix (color_20, tmpvar_29, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_30.w;
  float tmpvar_31;
  tmpvar_31 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_32;
  tmpvar_32 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_33;
  tmpvar_33 = max ((tmpvar_32.y - (tmpvar_32.x * tmpvar_32.x)), u_sunShadowVSMParams.x);
  float tmpvar_34;
  tmpvar_34 = (tmpvar_31 - tmpvar_32.x);
  fragColor_3.xyz = mix (tmpvar_30.xyz, vec3(min (max (
    float((tmpvar_31 <= tmpvar_32.x))
  , 
    clamp ((((tmpvar_33 / 
      (tmpvar_33 + (tmpvar_34 * tmpvar_34))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float tmpvar_35;
  tmpvar_35 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_36;
  tmpvar_36 = (1.570796 - (sign(normal_4.z) * (1.570796 - 
    (sqrt((1.0 - abs(normal_4.z))) * (1.570796 + (abs(normal_4.z) * (-0.2146018 + 
      (abs(normal_4.z) * (0.08656672 + (abs(normal_4.z) * -0.03102955)))
    ))))
  )));
  float rad_37;
  float vec_y_38;
  vec_y_38 = -(normal_4.y);
  float tmpvar_39;
  float tmpvar_40;
  tmpvar_40 = (min (abs(
    (vec_y_38 / normal_4.x)
  ), 1.0) / max (abs(
    (vec_y_38 / normal_4.x)
  ), 1.0));
  float tmpvar_41;
  tmpvar_41 = (tmpvar_40 * tmpvar_40);
  tmpvar_41 = (((
    ((((
      ((((-0.01213232 * tmpvar_41) + 0.05368138) * tmpvar_41) - 0.1173503)
     * tmpvar_41) + 0.1938925) * tmpvar_41) - 0.3326756)
   * tmpvar_41) + 0.9999793) * tmpvar_40);
  tmpvar_41 = (tmpvar_41 + (float(
    (abs((vec_y_38 / normal_4.x)) > 1.0)
  ) * (
    (tmpvar_41 * -2.0)
   + 1.570796)));
  tmpvar_39 = (tmpvar_41 * sign((vec_y_38 / normal_4.x)));
  if ((abs(normal_4.x) > (1e-08 * abs(vec_y_38)))) {
    if ((normal_4.x < 0.0)) {
      if ((vec_y_38 >= 0.0)) {
        tmpvar_39 += 3.141593;
      } else {
        tmpvar_39 = (tmpvar_39 - 3.141593);
      };
    };
  } else {
    tmpvar_39 = (sign(vec_y_38) * 1.570796);
  };
  rad_37 = (tmpvar_39 - 1.570796);
  rad_37 = (rad_37 + (float(
    (rad_37 < 0.0)
  ) * 6.283185));
  rad_37 = (6.283185 - rad_37);
  float tmpvar_42;
  tmpvar_42 = float((u_HeightExtents.x != u_HeightExtents.y));
  vec2 tmpvar_43;
  tmpvar_43.y = 0.0;
  tmpvar_43.x = (tmpvar_42 * ((tmpvar_35 - u_HeightExtents.x) / (
    (tmpvar_42 * (u_HeightExtents.y - u_HeightExtents.x))
   + 
    (1.0 - tmpvar_42)
  )));
  vec2 tmpvar_44;
  tmpvar_44.y = 0.0;
  tmpvar_44.x = (tmpvar_36 / 1.570796);
  vec2 tmpvar_45;
  tmpvar_45.y = 0.0;
  tmpvar_45.x = (rad_37 / 6.283185);
  float tmpvar_46;
  tmpvar_46 = ((texture2D (s_HeightBandTexture, tmpvar_43).w * texture2D (s_SlopeAngleTexture, tmpvar_44).w) * texture2D (s_SlopeDirTexture, tmpvar_45).w);
  fragColor_3.xyz = ((tmpvar_46 * fragColor_3.xyz) + ((1.0 - tmpvar_46) * vec3((
    ((1.0 - u_dimStrength.x) * ((fragColor_3.x + fragColor_3.y) + fragColor_3.z))
   / 3.0))));
  float tmpvar_47;
  tmpvar_47 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_47 * (tmpvar_47 * 
    (3.0 - (2.0 * tmpvar_47))
  )));
  float tmpvar_48;
  vec3 tmpvar_49;
  tmpvar_49 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_48 = sqrt(dot (tmpvar_49, tmpvar_49));
  vec3 rayDir_50;
  rayDir_50.xz = tmpvar_49.xz;
  rayDir_50.y = -(tmpvar_49.y);
  float tmpvar_51;
  tmpvar_51 = (float((
    (tmpvar_48 - u_viewshedBias.x)
   < 
    (textureCube (s_cubeDepth0, rayDir_50).x * u_viewshedFarPlane.x)
  )) * float((tmpvar_48 < u_viewshedRange.x)));
  fragColor_3.xyz = ((tmpvar_51 * fragColor_3.xyz) + ((1.0 - tmpvar_51) * vec3((
    (0.7 * ((fragColor_3.x + fragColor_3.y) + fragColor_3.z))
   / 3.0))));
  float lineStrength_52;
  float tmpvar_53;
  tmpvar_53 = sqrt(dot (tmpvar_49, tmpvar_49));
  float period_54;
  period_54 = (u_viewshedRange.x / 4.0);
  float tmpvar_55;
  tmpvar_55 = ((1.0/(period_54)) * tmpvar_53);
  float tmpvar_56;
  tmpvar_56 = (0.5 * period_54);
  float tmpvar_57;
  tmpvar_57 = (50.0 * tmpvar_53);
  lineStrength_52 = (((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_55 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_55)
    ) + abs(
      dFdy(tmpvar_55)
    ))), 1.0)
  ) * (
    float((-(tmpvar_56) <= tmpvar_53))
   * 
    float((tmpvar_53 <= (u_viewshedRange.x + tmpvar_56)))
  )) + ((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_57 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_57)
    ) + abs(
      dFdy(tmpvar_57)
    ))), 1.0)
  ) * (
    float((-0.01 <= tmpvar_53))
   * 
    float((tmpvar_53 <= 0.09))
  )));
  fragColor_3.xyz = (((1.0 - lineStrength_52) * fragColor_3.xyz) + (lineStrength_52 * (vec3(1.0, 1.0, 1.0) - u_viewshedColor0.xyz)));
  gl_FragData[0] = fragColor_3;
  float tmpvar_58;
  tmpvar_58 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_59;
  tmpvar_59 = floor(tmpvar_58);
  d_1 = ((tmpvar_58 - tmpvar_59) * 256.0);
  float tmpvar_60;
  tmpvar_60 = floor(d_1);
  d_1 = ((d_1 - tmpvar_60) * 256.0);
  vec4 tmpvar_61;
  tmpvar_61.w = 1.0;
  tmpvar_61.x = (tmpvar_59 / 256.0);
  tmpvar_61.y = (tmpvar_60 / 256.0);
  tmpvar_61.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_61;
  vec3 tmpvar_62;
  tmpvar_62 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_63;
  tmpvar_63.x = (tmpvar_62.y * 0.5);
  tmpvar_63.y = (-(tmpvar_62.x) * 0.5);
  tmpvar_63.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_62.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_63)
      ) - tmpvar_63)), tmpvar_62)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

