varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_HeightBandTexture;
uniform sampler2D s_SlopeAngleTexture;
uniform sampler2D s_SlopeDirTexture;
uniform sampler2D s_heightTextureFrag;
uniform vec4 s_heightTextureFrag_Res;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_dimStrength;
uniform vec4 u_HeightExtents;
uniform vec4 u_viewshedColor0;
uniform vec4 u_viewshedRange;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane;
uniform vec4 u_viewshedStrength;
uniform vec4 u_viewshedBias;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  vec2 tmpvar_4;
  tmpvar_4 = (s_heightTextureFrag_Res.zw / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4.x;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4.y;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  float tmpvar_13;
  tmpvar_13 = (texture2D (s_heightTextureFrag, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_14;
  tmpvar_14 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_15;
  tmpvar_15.y = 0.0;
  tmpvar_15.x = -(tmpvar_14.x);
  tmpvar_15.z = ((texture2D (s_heightTextureFrag, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - tmpvar_13);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = tmpvar_14.x;
  tmpvar_16.z = ((texture2D (s_heightTextureFrag, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)) - tmpvar_13);
  vec3 tmpvar_17;
  tmpvar_17.x = 0.0;
  tmpvar_17.y = -(tmpvar_14.y);
  tmpvar_17.z = ((texture2D (s_heightTextureFrag, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - tmpvar_13);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = tmpvar_14.y;
  tmpvar_18.z = ((texture2D (s_heightTextureFrag, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)) - tmpvar_13);
  normal_3 = normalize(((
    (((tmpvar_15.yzx * tmpvar_17.zxy) - (tmpvar_15.zxy * tmpvar_17.yzx)) + ((tmpvar_17.yzx * tmpvar_16.zxy) - (tmpvar_17.zxy * tmpvar_16.yzx)))
   + 
    ((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx))
  ) + (
    (tmpvar_18.yzx * tmpvar_15.zxy)
   - 
    (tmpvar_18.zxy * tmpvar_15.yzx)
  )));
  vec4 color_19;
  vec4 tmpvar_20;
  tmpvar_20 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_19.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_20.xyz, tmpvar_20.w);
  color_19.w = tmpvar_20.w;
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_19.xyz = mix (color_19.xyz, tmpvar_21.xyz, tmpvar_21.w);
  color_19.w = (tmpvar_20.w + tmpvar_21.w);
  fragColor_2 = color_19;
  float tmpvar_22;
  tmpvar_22 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_23;
  tmpvar_23 = (1.570796 - (sign(normal_3.z) * (1.570796 - 
    (sqrt((1.0 - abs(normal_3.z))) * (1.570796 + (abs(normal_3.z) * (-0.2146018 + 
      (abs(normal_3.z) * (0.08656672 + (abs(normal_3.z) * -0.03102955)))
    ))))
  )));
  float rad_24;
  float vec_y_25;
  vec_y_25 = -(normal_3.y);
  float tmpvar_26;
  float tmpvar_27;
  tmpvar_27 = (min (abs(
    (vec_y_25 / normal_3.x)
  ), 1.0) / max (abs(
    (vec_y_25 / normal_3.x)
  ), 1.0));
  float tmpvar_28;
  tmpvar_28 = (tmpvar_27 * tmpvar_27);
  tmpvar_28 = (((
    ((((
      ((((-0.01213232 * tmpvar_28) + 0.05368138) * tmpvar_28) - 0.1173503)
     * tmpvar_28) + 0.1938925) * tmpvar_28) - 0.3326756)
   * tmpvar_28) + 0.9999793) * tmpvar_27);
  tmpvar_28 = (tmpvar_28 + (float(
    (abs((vec_y_25 / normal_3.x)) > 1.0)
  ) * (
    (tmpvar_28 * -2.0)
   + 1.570796)));
  tmpvar_26 = (tmpvar_28 * sign((vec_y_25 / normal_3.x)));
  if ((abs(normal_3.x) > (1e-08 * abs(vec_y_25)))) {
    if ((normal_3.x < 0.0)) {
      if ((vec_y_25 >= 0.0)) {
        tmpvar_26 += 3.141593;
      } else {
        tmpvar_26 = (tmpvar_26 - 3.141593);
      };
    };
  } else {
    tmpvar_26 = (sign(vec_y_25) * 1.570796);
  };
  rad_24 = (tmpvar_26 - 1.570796);
  rad_24 = (rad_24 + (float(
    (rad_24 < 0.0)
  ) * 6.283185));
  rad_24 = (6.283185 - rad_24);
  float tmpvar_29;
  tmpvar_29 = float((u_HeightExtents.x != u_HeightExtents.y));
  vec2 tmpvar_30;
  tmpvar_30.y = 0.0;
  tmpvar_30.x = (tmpvar_29 * ((tmpvar_22 - u_HeightExtents.x) / (
    (tmpvar_29 * (u_HeightExtents.y - u_HeightExtents.x))
   + 
    (1.0 - tmpvar_29)
  )));
  vec2 tmpvar_31;
  tmpvar_31.y = 0.0;
  tmpvar_31.x = (tmpvar_23 / 1.570796);
  vec2 tmpvar_32;
  tmpvar_32.y = 0.0;
  tmpvar_32.x = (rad_24 / 6.283185);
  float tmpvar_33;
  tmpvar_33 = ((texture2D (s_HeightBandTexture, tmpvar_30).w * texture2D (s_SlopeAngleTexture, tmpvar_31).w) * texture2D (s_SlopeDirTexture, tmpvar_32).w);
  fragColor_2.xyz = ((tmpvar_33 * color_19.xyz) + ((1.0 - tmpvar_33) * vec3((
    ((1.0 - u_dimStrength.x) * ((color_19.x + color_19.y) + color_19.z))
   / 3.0))));
  float tmpvar_34;
  tmpvar_34 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_fogColor.xyz, (tmpvar_34 * (tmpvar_34 * 
    (3.0 - (2.0 * tmpvar_34))
  )));
  float tmpvar_35;
  vec3 tmpvar_36;
  tmpvar_36 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_35 = sqrt(dot (tmpvar_36, tmpvar_36));
  vec3 rayDir_37;
  rayDir_37.xz = tmpvar_36.xz;
  rayDir_37.y = -(tmpvar_36.y);
  fragColor_2.xyz = (fragColor_2.xyz + ((
    ((float((tmpvar_35 < u_viewshedRange.x)) * float((
      (tmpvar_35 - u_viewshedBias.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_37).x * u_viewshedFarPlane.x)
    ))) * u_viewshedStrength.x)
   * 
    mix (0.45, 0.15, (tmpvar_35 / u_viewshedRange.x))
  ) * u_viewshedColor0.xyz));
  float lineStrength_38;
  float tmpvar_39;
  tmpvar_39 = sqrt(dot (tmpvar_36, tmpvar_36));
  float period_40;
  period_40 = (u_viewshedRange.x / 4.0);
  float tmpvar_41;
  tmpvar_41 = ((1.0/(period_40)) * tmpvar_39);
  float tmpvar_42;
  tmpvar_42 = (0.5 * period_40);
  float tmpvar_43;
  tmpvar_43 = (50.0 * tmpvar_39);
  lineStrength_38 = (((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_41 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_41)
    ) + abs(
      dFdy(tmpvar_41)
    ))), 1.0)
  ) * (
    float((-(tmpvar_42) <= tmpvar_39))
   * 
    float((tmpvar_39 <= (u_viewshedRange.x + tmpvar_42)))
  )) + ((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_43 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_43)
    ) + abs(
      dFdy(tmpvar_43)
    ))), 1.0)
  ) * (
    float((-0.01 <= tmpvar_39))
   * 
    float((tmpvar_39 <= 0.09))
  )));
  fragColor_2.xyz = (((1.0 - lineStrength_38) * fragColor_2.xyz) + (lineStrength_38 * (vec3(1.0, 1.0, 1.0) - u_viewshedColor0.xyz)));
  gl_FragData[0] = fragColor_2;
  float tmpvar_44;
  tmpvar_44 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_45;
  tmpvar_45 = floor(tmpvar_44);
  d_1 = ((tmpvar_44 - tmpvar_45) * 256.0);
  float tmpvar_46;
  tmpvar_46 = floor(d_1);
  d_1 = ((d_1 - tmpvar_46) * 256.0);
  vec4 tmpvar_47;
  tmpvar_47.w = 1.0;
  tmpvar_47.x = (tmpvar_45 / 256.0);
  tmpvar_47.y = (tmpvar_46 / 256.0);
  tmpvar_47.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_47;
  vec3 tmpvar_48;
  tmpvar_48 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_49;
  tmpvar_49.x = (tmpvar_48.y * 0.5);
  tmpvar_49.y = (-(tmpvar_48.x) * 0.5);
  tmpvar_49.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_48.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_49)
      ) - tmpvar_49)), tmpvar_48)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

