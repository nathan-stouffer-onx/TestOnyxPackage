varying vec4 v_color1;
varying vec4 v_color2;
varying vec4 v_color3;
varying vec4 v_color4;
varying float v_depth;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_DashSampler;
uniform vec4 s_DashSampler_Res;
uniform vec4 u_TileFragClip;
uniform vec4 u_PackedParams;
void main ()
{
  vec4 casingColor_1;
  vec4 lineColor_2;
  lineColor_2 = v_texcoord5;
  casingColor_1 = v_texcoord4;
  float tmpvar_3;
  tmpvar_3 = (float((u_TileFragClip.x <= v_texcoord7.x)) * float((v_texcoord7.x <= u_TileFragClip.z)));
  float tmpvar_4;
  tmpvar_4 = (float((u_TileFragClip.y <= v_texcoord7.y)) * float((v_texcoord7.y <= u_TileFragClip.w)));
  if (((tmpvar_3 * tmpvar_4) == 0.0)) {
    discard;
  };
  bool tmpvar_5;
  tmpvar_5 = (dot ((v_texcoord3.xy - v_color4.xy), v_texcoord1.xy) < 0.0);
  bool tmpvar_6;
  tmpvar_6 = (dot ((v_texcoord3.xy - v_color4.zw), v_texcoord1.zw) < 0.0);
  bool tmpvar_7;
  tmpvar_7 = (v_color2.x > -999999.0);
  bool tmpvar_8;
  tmpvar_8 = (v_color2.y > -999999.0);
  if (((tmpvar_5 && tmpvar_7) || (tmpvar_6 && tmpvar_8))) {
    discard;
  };
  float v_9;
  v_9 = (v_depth + (0.5 * (1.0/(s_DashSampler_Res.xy)).y));
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = v_9;
  vec2 tmpvar_11;
  tmpvar_11.x = (((float(mod (
    ((mix (v_color3.x, v_color3.y, v_texcoord6.y) * 256.0) / max (1.0, floor(v_color3.z)))
  , 
    floor(((texture2D (s_DashSampler, tmpvar_10).x * (s_DashSampler_Res.x - 1.0)) + 0.5))
  ))) + 1.0) / s_DashSampler_Res.x);
  tmpvar_11.y = v_9;
  vec4 tmpvar_12;
  tmpvar_12 = texture2D (s_DashSampler, tmpvar_11);
  float s_13;
  float tmpvar_14;
  tmpvar_14 = (0.5 * (v_texcoord0.x + 1.0));
  vec2 tmpvar_15;
  tmpvar_15 = (v_color4.zw - v_color4.xy);
  float tmpvar_16;
  vec2 x_17;
  x_17 = (v_texcoord3.xy - (v_color4.xy + (
    clamp ((dot ((v_texcoord3.xy - v_color4.xy), tmpvar_15) / dot (tmpvar_15, tmpvar_15)), 0.0, 1.0)
   * tmpvar_15)));
  tmpvar_16 = sqrt(dot (x_17, x_17));
  s_13 = 1.0;
  if ((v_texcoord0.x < 1.0)) {
    s_13 = (v_texcoord0.x - max (0.0, (tmpvar_16 + 
      (0.5 * (v_texcoord0.x - 1.0))
    )));
  } else {
    float tmpvar_18;
    tmpvar_18 = max (0.0, (tmpvar_14 - 2.0));
    float tmpvar_19;
    tmpvar_19 = float((tmpvar_14 != tmpvar_18));
    s_13 = (tmpvar_19 * ((tmpvar_16 - tmpvar_14) / (
      (tmpvar_19 * (tmpvar_18 - tmpvar_14))
     + 
      (1.0 - tmpvar_19)
    )));
  };
  lineColor_2.w = (v_texcoord5.w * (clamp (s_13, 0.0, 1.0) * tmpvar_12.x));
  float s_20;
  float tmpvar_21;
  tmpvar_21 = (0.5 * (v_texcoord0.y + 1.0));
  vec2 tmpvar_22;
  tmpvar_22 = (v_color4.zw - v_color4.xy);
  float tmpvar_23;
  vec2 x_24;
  x_24 = (v_texcoord3.xy - (v_color4.xy + (
    clamp ((dot ((v_texcoord3.xy - v_color4.xy), tmpvar_22) / dot (tmpvar_22, tmpvar_22)), 0.0, 1.0)
   * tmpvar_22)));
  tmpvar_23 = sqrt(dot (x_24, x_24));
  s_20 = 1.0;
  if ((v_texcoord0.y < 1.0)) {
    s_20 = (v_texcoord0.y - max (0.0, (tmpvar_23 + 
      (0.5 * (v_texcoord0.y - 1.0))
    )));
  } else {
    float tmpvar_25;
    tmpvar_25 = max (0.0, (tmpvar_21 - 2.0));
    float tmpvar_26;
    tmpvar_26 = float((tmpvar_21 != tmpvar_25));
    s_20 = (tmpvar_26 * ((tmpvar_23 - tmpvar_21) / (
      (tmpvar_26 * (tmpvar_25 - tmpvar_21))
     + 
      (1.0 - tmpvar_26)
    )));
  };
  casingColor_1.w = (v_texcoord4.w * clamp (s_20, 0.0, 1.0));
  vec4 tmpvar_27;
  if ((casingColor_1.w == 0.0)) {
    tmpvar_27 = lineColor_2;
  } else {
    vec4 tmpvar_28;
    tmpvar_28.xyz = mix (v_texcoord4.xyz, v_texcoord5.xyz, lineColor_2.w);
    tmpvar_28.w = min (1.0, (casingColor_1.w + lineColor_2.w));
    tmpvar_27 = tmpvar_28;
  };
  vec4 tmpvar_29;
  tmpvar_29.xyz = tmpvar_27.xyz;
  tmpvar_29.w = ((tmpvar_27.w * u_PackedParams.y) * v_color1.x);
  gl_FragData[0] = tmpvar_29;
  gl_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
}

