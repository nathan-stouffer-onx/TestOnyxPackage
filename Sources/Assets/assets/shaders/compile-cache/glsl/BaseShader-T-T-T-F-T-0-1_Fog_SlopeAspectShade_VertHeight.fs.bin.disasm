varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SlopeAspectMaxNormalZ;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  float tmpvar_4;
  tmpvar_4 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13.x = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)));
  tmpvar_13.y = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)));
  tmpvar_13.z = (2.0 * (tmpvar_4 * u_tileSize.x));
  normal_3 = normalize(tmpvar_13);
  fragColor_2 = u_BackgroundColor;
  float rad_14;
  float vec_y_15;
  vec_y_15 = -(normal_3.y);
  float tmpvar_16;
  float tmpvar_17;
  tmpvar_17 = (min (abs(
    (vec_y_15 / normal_3.x)
  ), 1.0) / max (abs(
    (vec_y_15 / normal_3.x)
  ), 1.0));
  float tmpvar_18;
  tmpvar_18 = (tmpvar_17 * tmpvar_17);
  tmpvar_18 = (((
    ((((
      ((((-0.01213232 * tmpvar_18) + 0.05368138) * tmpvar_18) - 0.1173503)
     * tmpvar_18) + 0.1938925) * tmpvar_18) - 0.3326756)
   * tmpvar_18) + 0.9999793) * tmpvar_17);
  tmpvar_18 = (tmpvar_18 + (float(
    (abs((vec_y_15 / normal_3.x)) > 1.0)
  ) * (
    (tmpvar_18 * -2.0)
   + 1.570796)));
  tmpvar_16 = (tmpvar_18 * sign((vec_y_15 / normal_3.x)));
  if ((abs(normal_3.x) > (1e-08 * abs(vec_y_15)))) {
    if ((normal_3.x < 0.0)) {
      if ((vec_y_15 >= 0.0)) {
        tmpvar_16 += 3.141593;
      } else {
        tmpvar_16 = (tmpvar_16 - 3.141593);
      };
    };
  } else {
    tmpvar_16 = (sign(vec_y_15) * 1.570796);
  };
  rad_14 = (tmpvar_16 - 1.570796);
  rad_14 = (rad_14 + (float(
    (rad_14 < 0.0)
  ) * 6.283185));
  rad_14 = (6.283185 - rad_14);
  vec2 tmpvar_19;
  tmpvar_19.y = 0.0;
  tmpvar_19.x = ((float(mod (rad_14, 6.282685))) / 6.283185);
  vec4 tmpvar_20;
  tmpvar_20 = texture2D (s_SlopeAspectShadeTexture, tmpvar_19);
  fragColor_2.xyz = mix (u_BackgroundColor.xyz, tmpvar_20.xyz, (tmpvar_20.w * float(
    (abs(normal_3.z) <= u_SlopeAspectMaxNormalZ.x)
  )));
  float tmpvar_21;
  tmpvar_21 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, ((tmpvar_21 * 
    (tmpvar_21 * (3.0 - (2.0 * tmpvar_21)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_2;
  float tmpvar_22;
  tmpvar_22 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_23;
  tmpvar_23 = floor(tmpvar_22);
  d_1 = ((tmpvar_22 - tmpvar_23) * 256.0);
  float tmpvar_24;
  tmpvar_24 = floor(d_1);
  d_1 = ((d_1 - tmpvar_24) * 256.0);
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.x = (tmpvar_23 / 256.0);
  tmpvar_25.y = (tmpvar_24 / 256.0);
  tmpvar_25.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_25;
  vec3 tmpvar_26;
  tmpvar_26 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_27;
  tmpvar_27.x = (tmpvar_26.y * 0.5);
  tmpvar_27.y = (-(tmpvar_26.x) * 0.5);
  tmpvar_27.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_26.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_27)
      ) - tmpvar_27)), tmpvar_26)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

