varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeDirTexture;
uniform sampler2D s_texture0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_TopoParams;
uniform vec4 u_minorTopoColor;
uniform vec4 u_majorTopoColor;
uniform vec4 u_TopoFade;
uniform vec4 u_TopoHeightFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture2D (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  vec4 color_20;
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_20.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_21.xyz, tmpvar_21.w);
  color_20.w = tmpvar_21.w;
  fragColor_3 = color_20;
  float rad_22;
  float vec_y_23;
  vec_y_23 = -(normal_4.y);
  float tmpvar_24;
  float tmpvar_25;
  tmpvar_25 = (min (abs(
    (vec_y_23 / normal_4.x)
  ), 1.0) / max (abs(
    (vec_y_23 / normal_4.x)
  ), 1.0));
  float tmpvar_26;
  tmpvar_26 = (tmpvar_25 * tmpvar_25);
  tmpvar_26 = (((
    ((((
      ((((-0.01213232 * tmpvar_26) + 0.05368138) * tmpvar_26) - 0.1173503)
     * tmpvar_26) + 0.1938925) * tmpvar_26) - 0.3326756)
   * tmpvar_26) + 0.9999793) * tmpvar_25);
  tmpvar_26 = (tmpvar_26 + (float(
    (abs((vec_y_23 / normal_4.x)) > 1.0)
  ) * (
    (tmpvar_26 * -2.0)
   + 1.570796)));
  tmpvar_24 = (tmpvar_26 * sign((vec_y_23 / normal_4.x)));
  if ((abs(normal_4.x) > (1e-08 * abs(vec_y_23)))) {
    if ((normal_4.x < 0.0)) {
      if ((vec_y_23 >= 0.0)) {
        tmpvar_24 += 3.141593;
      } else {
        tmpvar_24 = (tmpvar_24 - 3.141593);
      };
    };
  } else {
    tmpvar_24 = (sign(vec_y_23) * 1.570796);
  };
  rad_22 = (tmpvar_24 - 1.570796);
  rad_22 = (rad_22 + (float(
    (rad_22 < 0.0)
  ) * 6.283185));
  rad_22 = (6.283185 - rad_22);
  vec2 tmpvar_27;
  tmpvar_27.y = 0.0;
  tmpvar_27.x = (rad_22 / 6.283185);
  vec4 tmpvar_28;
  tmpvar_28 = texture2D (s_SlopeDirTexture, tmpvar_27);
  fragColor_3.xyz = mix (color_20.xyz, tmpvar_28.xyz, (0.5 * tmpvar_28.w));
  vec3 tangentSun_29;
  vec3 planetNormal_30;
  float tmpvar_31;
  tmpvar_31 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_32;
  tmpvar_32 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_30.x = (cos(tmpvar_32) * cos(tmpvar_31));
  planetNormal_30.y = (cos(tmpvar_32) * sin(tmpvar_31));
  planetNormal_30.z = sin(tmpvar_32);
  vec3 tmpvar_33;
  tmpvar_33 = normalize(((planetNormal_30.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_30.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_29.x = -(dot (tmpvar_33, v_texcoord3.xyz));
  tangentSun_29.y = -(dot (normalize(
    ((planetNormal_30.yzx * tmpvar_33.zxy) - (planetNormal_30.zxy * tmpvar_33.yzx))
  ), v_texcoord3.xyz));
  tangentSun_29.z = dot (planetNormal_30, v_texcoord3.xyz);
  vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = mix (vec3(clamp (dot (tangentSun_29, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_35;
  tmpvar_35 = mix (fragColor_3, tmpvar_34, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_35.w;
  float tmpvar_36;
  tmpvar_36 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_37;
  tmpvar_37 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_38;
  tmpvar_38 = max ((tmpvar_37.y - (tmpvar_37.x * tmpvar_37.x)), u_sunShadowVSMParams.x);
  float tmpvar_39;
  tmpvar_39 = (tmpvar_36 - tmpvar_37.x);
  fragColor_3.xyz = mix (tmpvar_35.xyz, vec3(min (max (
    float((tmpvar_36 <= tmpvar_37.x))
  , 
    clamp ((((tmpvar_38 / 
      (tmpvar_38 + (tmpvar_39 * tmpvar_39))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float height_40;
  height_40 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_41;
  tmpvar_41 = pow ((1.0 - (
    sqrt(dot (v_texcoord7.xy, v_texcoord7.xy))
   / 
    (u_nearFarPlane.y / 3.0)
  )), 3.0);
  float strength_42;
  float tmpvar_43;
  tmpvar_43 = ((1.0/(u_TopoParams.x)) * height_40);
  float tmpvar_44;
  tmpvar_44 = (0.5 * u_TopoParams.x);
  strength_42 = ((1.0 - min (
    (abs((fract(
      (tmpvar_43 - 0.5)
    ) - 0.5)) / (abs(dFdx(tmpvar_43)) + abs(dFdy(tmpvar_43))))
  , 1.0)) * (float(
    ((-10.0 - tmpvar_44) <= height_40)
  ) * float(
    (height_40 <= (10.0 + tmpvar_44))
  )));
  float tmpvar_45;
  tmpvar_45 = ((1.0/(u_TopoParams.y)) * height_40);
  float tmpvar_46;
  tmpvar_46 = (0.5 * u_TopoParams.y);
  float tmpvar_47;
  tmpvar_47 = clamp ((pow (
    (((1.0 - min (
      (((1.0/((2.0 + 
        (u_TopoHeightFade.y * tmpvar_41)
      ))) * abs((
        fract((tmpvar_45 - 0.5))
       - 0.5))) / (abs(dFdx(tmpvar_45)) + abs(dFdy(tmpvar_45))))
    , 1.0)) * (float(
      ((-10.0 - tmpvar_46) <= height_40)
    ) * float(
      (height_40 <= (10.0 + tmpvar_46))
    ))) + 0.5)
  , 3.0) - 0.5), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((u_majorTopoColor.xyz * tmpvar_47) + (u_minorTopoColor.xyz * 
    clamp ((strength_42 - tmpvar_47), 0.0, 1.0)
  )), clamp ((
    mix (u_TopoFade.y, u_TopoFade.x, tmpvar_41)
   * 
    max ((strength_42 * u_TopoHeightFade.x), (tmpvar_47 * u_TopoHeightFade.y))
  ), 0.0, 1.0));
  float tmpvar_48;
  tmpvar_48 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_48 * (tmpvar_48 * 
    (3.0 - (2.0 * tmpvar_48))
  )));
  gl_FragData[0] = fragColor_3;
  float tmpvar_49;
  tmpvar_49 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_50;
  tmpvar_50 = floor(tmpvar_49);
  d_1 = ((tmpvar_49 - tmpvar_50) * 256.0);
  float tmpvar_51;
  tmpvar_51 = floor(d_1);
  d_1 = ((d_1 - tmpvar_51) * 256.0);
  vec4 tmpvar_52;
  tmpvar_52.w = 1.0;
  tmpvar_52.x = (tmpvar_50 / 256.0);
  tmpvar_52.y = (tmpvar_51 / 256.0);
  tmpvar_52.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_52;
  vec3 tmpvar_53;
  tmpvar_53 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_54;
  tmpvar_54.x = (tmpvar_53.y * 0.5);
  tmpvar_54.y = (-(tmpvar_53.x) * 0.5);
  tmpvar_54.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_53.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_54)
      ) - tmpvar_54)), tmpvar_53)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

