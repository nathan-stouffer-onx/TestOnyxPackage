varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeAngleTexture;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedColor0;
uniform vec4 u_viewshedRange;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane;
uniform vec4 u_viewshedBias;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_ScaleOffsetTex1;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture2D (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  vec4 color_20;
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_20.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_21.xyz, tmpvar_21.w);
  color_20.w = tmpvar_21.w;
  vec4 tmpvar_22;
  tmpvar_22 = texture2D (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_20.xyz = mix (color_20.xyz, tmpvar_22.xyz, tmpvar_22.w);
  color_20.w = (tmpvar_21.w + tmpvar_22.w);
  vec3 tangentSun_23;
  vec3 planetNormal_24;
  float tmpvar_25;
  tmpvar_25 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_26;
  tmpvar_26 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_24.x = (cos(tmpvar_26) * cos(tmpvar_25));
  planetNormal_24.y = (cos(tmpvar_26) * sin(tmpvar_25));
  planetNormal_24.z = sin(tmpvar_26);
  vec3 tmpvar_27;
  tmpvar_27 = normalize(((planetNormal_24.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_24.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_23.x = -(dot (tmpvar_27, v_texcoord3.xyz));
  tangentSun_23.y = -(dot (normalize(
    ((planetNormal_24.yzx * tmpvar_27.zxy) - (planetNormal_24.zxy * tmpvar_27.yzx))
  ), v_texcoord3.xyz));
  tangentSun_23.z = dot (planetNormal_24, v_texcoord3.xyz);
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = mix (vec3(clamp (dot (tangentSun_23, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_29;
  tmpvar_29 = mix (color_20, tmpvar_28, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_29.w;
  float tmpvar_30;
  tmpvar_30 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_31;
  tmpvar_31 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_32;
  tmpvar_32 = max ((tmpvar_31.y - (tmpvar_31.x * tmpvar_31.x)), u_sunShadowVSMParams.x);
  float tmpvar_33;
  tmpvar_33 = (tmpvar_30 - tmpvar_31.x);
  fragColor_3.xyz = mix (tmpvar_29.xyz, vec3(min (max (
    float((tmpvar_30 <= tmpvar_31.x))
  , 
    clamp ((((tmpvar_32 / 
      (tmpvar_32 + (tmpvar_33 * tmpvar_33))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  vec2 tmpvar_34;
  tmpvar_34.y = 0.0;
  tmpvar_34.x = ((1.570796 - (
    sign(normal_4.z)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(normal_4.z)
    )) * (1.570796 + (
      abs(normal_4.z)
     * 
      (-0.2146018 + (abs(normal_4.z) * (0.08656672 + (
        abs(normal_4.z)
       * -0.03102955))))
    ))))
  )) / 1.570796);
  vec4 tmpvar_35;
  tmpvar_35 = texture2D (s_SlopeAngleTexture, tmpvar_34);
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_35.xyz, (0.5 * tmpvar_35.w));
  float tmpvar_36;
  tmpvar_36 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_36 * (tmpvar_36 * 
    (3.0 - (2.0 * tmpvar_36))
  )));
  float tmpvar_37;
  vec3 tmpvar_38;
  tmpvar_38 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_37 = sqrt(dot (tmpvar_38, tmpvar_38));
  vec3 rayDir_39;
  rayDir_39.xz = tmpvar_38.xz;
  rayDir_39.y = -(tmpvar_38.y);
  float tmpvar_40;
  tmpvar_40 = (float((
    (tmpvar_37 - u_viewshedBias.x)
   < 
    (textureCube (s_cubeDepth0, rayDir_39).x * u_viewshedFarPlane.x)
  )) * float((tmpvar_37 < u_viewshedRange.x)));
  fragColor_3.xyz = ((tmpvar_40 * fragColor_3.xyz) + ((1.0 - tmpvar_40) * vec3((
    (0.7 * ((fragColor_3.x + fragColor_3.y) + fragColor_3.z))
   / 3.0))));
  float lineStrength_41;
  float tmpvar_42;
  tmpvar_42 = sqrt(dot (tmpvar_38, tmpvar_38));
  float period_43;
  period_43 = (u_viewshedRange.x / 4.0);
  float tmpvar_44;
  tmpvar_44 = ((1.0/(period_43)) * tmpvar_42);
  float tmpvar_45;
  tmpvar_45 = (0.5 * period_43);
  float tmpvar_46;
  tmpvar_46 = (50.0 * tmpvar_42);
  lineStrength_41 = (((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_44 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_44)
    ) + abs(
      dFdy(tmpvar_44)
    ))), 1.0)
  ) * (
    float((-(tmpvar_45) <= tmpvar_42))
   * 
    float((tmpvar_42 <= (u_viewshedRange.x + tmpvar_45)))
  )) + ((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_46 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_46)
    ) + abs(
      dFdy(tmpvar_46)
    ))), 1.0)
  ) * (
    float((-0.01 <= tmpvar_42))
   * 
    float((tmpvar_42 <= 0.09))
  )));
  fragColor_3.xyz = (((1.0 - lineStrength_41) * fragColor_3.xyz) + (lineStrength_41 * (vec3(1.0, 1.0, 1.0) - u_viewshedColor0.xyz)));
  gl_FragData[0] = fragColor_3;
  float tmpvar_47;
  tmpvar_47 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_48;
  tmpvar_48 = floor(tmpvar_47);
  d_1 = ((tmpvar_47 - tmpvar_48) * 256.0);
  float tmpvar_49;
  tmpvar_49 = floor(d_1);
  d_1 = ((d_1 - tmpvar_49) * 256.0);
  vec4 tmpvar_50;
  tmpvar_50.w = 1.0;
  tmpvar_50.x = (tmpvar_48 / 256.0);
  tmpvar_50.y = (tmpvar_49 / 256.0);
  tmpvar_50.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_50;
  vec3 tmpvar_51;
  tmpvar_51 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_52;
  tmpvar_52.x = (tmpvar_51.y * 0.5);
  tmpvar_52.y = (-(tmpvar_51.x) * 0.5);
  tmpvar_52.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_51.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_52)
      ) - tmpvar_52)), tmpvar_51)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

