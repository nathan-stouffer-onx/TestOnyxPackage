varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_IntersectTint;
uniform vec4 u_IntersectInverted;
uniform vec4 u_ElevationExtents;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_HillshadeLightDir;
uniform vec4 u_HillshadeAlbedo;
uniform vec4 u_HillshadeParams;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  vec2 tmpvar_4;
  tmpvar_4 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4.x;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4.y;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  float tmpvar_13;
  tmpvar_13 = (texture2D (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_14;
  tmpvar_14 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_15;
  tmpvar_15.y = 0.0;
  tmpvar_15.x = -(tmpvar_14.x);
  tmpvar_15.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - tmpvar_13);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = tmpvar_14.x;
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)) - tmpvar_13);
  vec3 tmpvar_17;
  tmpvar_17.x = 0.0;
  tmpvar_17.y = -(tmpvar_14.y);
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - tmpvar_13);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = tmpvar_14.y;
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)) - tmpvar_13);
  normal_3 = normalize(((
    (((tmpvar_15.yzx * tmpvar_17.zxy) - (tmpvar_15.zxy * tmpvar_17.yzx)) + ((tmpvar_17.yzx * tmpvar_16.zxy) - (tmpvar_17.zxy * tmpvar_16.yzx)))
   + 
    ((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx))
  ) + (
    (tmpvar_18.yzx * tmpvar_15.zxy)
   - 
    (tmpvar_18.zxy * tmpvar_15.yzx)
  )));
  vec4 color_19;
  vec4 tmpvar_20;
  tmpvar_20 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_19.xyz = mix (u_BackgroundColor.xyz, tmpvar_20.xyz, (tmpvar_20.w * u_OpacityTex0.x));
  color_19.w = max (u_BackgroundColor.w, tmpvar_20.w);
  vec4 tmpvar_21;
  tmpvar_21 = texture2D (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_19.xyz = mix (color_19.xyz, tmpvar_21.xyz, (tmpvar_21.w * u_OpacityTex1.x));
  color_19.w = max (color_19.w, tmpvar_21.w);
  vec4 tmpvar_22;
  tmpvar_22 = texture2D (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_19.xyz = mix (color_19.xyz, tmpvar_22.xyz, (tmpvar_22.w * u_OpacityTex2.x));
  color_19.w = max (color_19.w, tmpvar_22.w);
  fragColor_2.w = color_19.w;
  vec3 tmpvar_23;
  tmpvar_23.xy = (u_HillshadeParams.y * normal_3.xy);
  tmpvar_23.z = normal_3.z;
  fragColor_2.xyz = mix (color_19.xyz, ((u_HillshadeParams.x + 
    ((1.0 - u_HillshadeParams.x) * (0.5 * (1.0 + dot (
      normalize(tmpvar_23)
    , 
      -(u_HillshadeLightDir.xyz)
    ))))
  ) * u_HillshadeAlbedo.xyz), u_HillshadeAlbedo.w);
  float tmpvar_24;
  tmpvar_24 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_25;
  tmpvar_25 = (1.570796 - (sign(normal_3.z) * (1.570796 - 
    (sqrt((1.0 - abs(normal_3.z))) * (1.570796 + (abs(normal_3.z) * (-0.2146018 + 
      (abs(normal_3.z) * (0.08656672 + (abs(normal_3.z) * -0.03102955)))
    ))))
  )));
  float rad_26;
  float vec_y_27;
  vec_y_27 = -(normal_3.y);
  float tmpvar_28;
  float tmpvar_29;
  tmpvar_29 = (min (abs(
    (vec_y_27 / normal_3.x)
  ), 1.0) / max (abs(
    (vec_y_27 / normal_3.x)
  ), 1.0));
  float tmpvar_30;
  tmpvar_30 = (tmpvar_29 * tmpvar_29);
  tmpvar_30 = (((
    ((((
      ((((-0.01213232 * tmpvar_30) + 0.05368138) * tmpvar_30) - 0.1173503)
     * tmpvar_30) + 0.1938925) * tmpvar_30) - 0.3326756)
   * tmpvar_30) + 0.9999793) * tmpvar_29);
  tmpvar_30 = (tmpvar_30 + (float(
    (abs((vec_y_27 / normal_3.x)) > 1.0)
  ) * (
    (tmpvar_30 * -2.0)
   + 1.570796)));
  tmpvar_28 = (tmpvar_30 * sign((vec_y_27 / normal_3.x)));
  if ((abs(normal_3.x) > (1e-08 * abs(vec_y_27)))) {
    if ((normal_3.x < 0.0)) {
      if ((vec_y_27 >= 0.0)) {
        tmpvar_28 += 3.141593;
      } else {
        tmpvar_28 = (tmpvar_28 - 3.141593);
      };
    };
  } else {
    tmpvar_28 = (sign(vec_y_27) * 1.570796);
  };
  rad_26 = (tmpvar_28 - 1.570796);
  rad_26 = (rad_26 + (float(
    (rad_26 < 0.0)
  ) * 6.283185));
  rad_26 = (6.283185 - rad_26);
  float tmpvar_31;
  tmpvar_31 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_32;
  tmpvar_32 = (((tmpvar_31 * 
    ((tmpvar_24 - u_ElevationExtents.x) / ((tmpvar_31 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_31)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_33;
  tmpvar_33.x = (float(mod (tmpvar_32, s_ElevationShadeTexture_Res.x)));
  tmpvar_33.y = floor((tmpvar_32 / s_ElevationShadeTexture_Res.y));
  vec2 tmpvar_34;
  tmpvar_34.y = 0.0;
  tmpvar_34.x = (tmpvar_25 / 1.570796);
  vec2 tmpvar_35;
  tmpvar_35.y = 0.0;
  tmpvar_35.x = (rad_26 / 6.283185);
  fragColor_2.xyz = mix (fragColor_2.xyz, ((
    ((fragColor_2.x + fragColor_2.y) + fragColor_2.z)
   / 3.0) * u_IntersectTint.xyz), (abs(
    (u_IntersectInverted.x - ((texture2D (s_ElevationShadeTexture, (tmpvar_33 / s_ElevationShadeTexture_Res.xy)).x * texture2D (s_SlopeAngleShadeTexture, tmpvar_34).x) * texture2D (s_SlopeAspectShadeTexture, tmpvar_35).x))
  ) * u_IntersectTint.w));
  float tmpvar_36;
  vec3 tmpvar_37;
  tmpvar_37 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_36 = sqrt(dot (tmpvar_37, tmpvar_37));
  vec3 rayDir_38;
  rayDir_38.xz = tmpvar_37.xz;
  rayDir_38.y = -(tmpvar_37.y);
  fragColor_2.xyz = mix (fragColor_2.xyz, ((
    ((fragColor_2.x + fragColor_2.y) + fragColor_2.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_36 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_36 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_38).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_39;
  tmpvar_39 = sqrt(dot (tmpvar_37, tmpvar_37));
  float period_40;
  period_40 = (u_viewshedRange0.x / 4.0);
  float tmpvar_41;
  tmpvar_41 = ((1.0/(period_40)) * tmpvar_39);
  float tmpvar_42;
  tmpvar_42 = (0.5 * period_40);
  float tmpvar_43;
  tmpvar_43 = (50.0 * tmpvar_39);
  vec4 tmpvar_44;
  tmpvar_44.xyz = mix (fragColor_2.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_44.w = u_viewshedRingTint0.w;
  fragColor_2.xyz = mix (fragColor_2.xyz, tmpvar_44.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_41 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_41))
     + 
      abs(dFdy(tmpvar_41))
    )), 1.0))
   * 
    (float((-(tmpvar_42) <= tmpvar_39)) * float((tmpvar_39 <= (u_viewshedRange0.x + tmpvar_42))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_43 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_43))
     + 
      abs(dFdy(tmpvar_43))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_39)) * float((tmpvar_39 <= 0.09)))
  )));
  float tmpvar_45;
  tmpvar_45 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, (tmpvar_45 * (tmpvar_45 * 
    (3.0 - (2.0 * tmpvar_45))
  )));
  gl_FragData[0] = fragColor_2;
  float tmpvar_46;
  tmpvar_46 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_47;
  tmpvar_47 = floor(tmpvar_46);
  d_1 = ((tmpvar_46 - tmpvar_47) * 256.0);
  float tmpvar_48;
  tmpvar_48 = floor(d_1);
  d_1 = ((d_1 - tmpvar_48) * 256.0);
  vec4 tmpvar_49;
  tmpvar_49.w = 1.0;
  tmpvar_49.x = (tmpvar_47 / 256.0);
  tmpvar_49.y = (tmpvar_48 / 256.0);
  tmpvar_49.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_49;
  vec3 tmpvar_50;
  tmpvar_50 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_51;
  tmpvar_51.x = (tmpvar_50.y * 0.5);
  tmpvar_51.y = (-(tmpvar_50.x) * 0.5);
  tmpvar_51.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_50.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_51)
      ) - tmpvar_51)), tmpvar_50)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

