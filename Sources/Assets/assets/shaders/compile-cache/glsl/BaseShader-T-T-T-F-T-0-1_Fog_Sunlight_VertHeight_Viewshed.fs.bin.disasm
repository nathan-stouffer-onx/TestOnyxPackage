varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  float tmpvar_5;
  tmpvar_5 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14.x = ((texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - (texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)));
  tmpvar_14.y = ((texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - (texture2DLod (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)));
  tmpvar_14.z = (2.0 * (tmpvar_5 * u_tileSize.x));
  normal_4 = normalize(tmpvar_14);
  vec3 tangentSun_15;
  vec3 planetNormal_16;
  float tmpvar_17;
  tmpvar_17 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_18;
  tmpvar_18 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_16.x = (cos(tmpvar_18) * cos(tmpvar_17));
  planetNormal_16.y = (cos(tmpvar_18) * sin(tmpvar_17));
  planetNormal_16.z = sin(tmpvar_18);
  vec3 tmpvar_19;
  tmpvar_19 = normalize(((planetNormal_16.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_16.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_15.x = -(dot (tmpvar_19, v_texcoord3.xyz));
  tangentSun_15.y = -(dot (normalize(
    ((planetNormal_16.yzx * tmpvar_19.zxy) - (planetNormal_16.zxy * tmpvar_19.yzx))
  ), v_texcoord3.xyz));
  tangentSun_15.z = dot (planetNormal_16, v_texcoord3.xyz);
  vec4 tmpvar_20;
  tmpvar_20.w = 1.0;
  tmpvar_20.xyz = mix (vec3(clamp (dot (tangentSun_15, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_21;
  tmpvar_21 = mix (u_BackgroundColor, tmpvar_20, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_21.w;
  float tmpvar_22;
  tmpvar_22 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_23;
  tmpvar_23 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_24;
  tmpvar_24 = max ((tmpvar_23.y - (tmpvar_23.x * tmpvar_23.x)), u_sunShadowVSMParams.x);
  float tmpvar_25;
  tmpvar_25 = (tmpvar_22 - tmpvar_23.x);
  fragColor_3.xyz = mix (tmpvar_21.xyz, vec3(min (max (
    float((tmpvar_22 <= tmpvar_23.x))
  , 
    clamp ((((tmpvar_24 / 
      (tmpvar_24 + (tmpvar_25 * tmpvar_25))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float tmpvar_26;
  vec3 tmpvar_27;
  tmpvar_27 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_26 = sqrt(dot (tmpvar_27, tmpvar_27));
  vec3 rayDir_28;
  rayDir_28.xz = tmpvar_27.xz;
  rayDir_28.y = -(tmpvar_27.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_26 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_26 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_28).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_29;
  tmpvar_29 = sqrt(dot (tmpvar_27, tmpvar_27));
  float period_30;
  period_30 = (u_viewshedRange0.x / 4.0);
  float tmpvar_31;
  tmpvar_31 = ((1.0/(period_30)) * tmpvar_29);
  float tmpvar_32;
  tmpvar_32 = (0.5 * period_30);
  float tmpvar_33;
  tmpvar_33 = (50.0 * tmpvar_29);
  vec4 tmpvar_34;
  tmpvar_34.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_34.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_34.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_31 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_31))
     + 
      abs(dFdy(tmpvar_31))
    )), 1.0))
   * 
    (float((-(tmpvar_32) <= tmpvar_29)) * float((tmpvar_29 <= (u_viewshedRange0.x + tmpvar_32))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_33 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_33))
     + 
      abs(dFdy(tmpvar_33))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_29)) * float((tmpvar_29 <= 0.09)))
  )));
  float tmpvar_35;
  tmpvar_35 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, ((tmpvar_35 * 
    (tmpvar_35 * (3.0 - (2.0 * tmpvar_35)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_3;
  float tmpvar_36;
  tmpvar_36 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_37;
  tmpvar_37 = floor(tmpvar_36);
  d_1 = ((tmpvar_36 - tmpvar_37) * 256.0);
  float tmpvar_38;
  tmpvar_38 = floor(d_1);
  d_1 = ((d_1 - tmpvar_38) * 256.0);
  vec4 tmpvar_39;
  tmpvar_39.w = 1.0;
  tmpvar_39.x = (tmpvar_37 / 256.0);
  tmpvar_39.y = (tmpvar_38 / 256.0);
  tmpvar_39.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_39;
  vec3 tmpvar_40;
  tmpvar_40 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_41;
  tmpvar_41.x = (tmpvar_40.y * 0.5);
  tmpvar_41.y = (-(tmpvar_40.x) * 0.5);
  tmpvar_41.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_40.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_41)
      ) - tmpvar_41)), tmpvar_40)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

