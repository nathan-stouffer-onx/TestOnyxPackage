varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_texture0;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_MaxNormalZ;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  float tmpvar_4;
  tmpvar_4 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13.x = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)));
  tmpvar_13.y = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)));
  tmpvar_13.z = (2.0 * (tmpvar_4 * u_tileSize.x));
  normal_3 = normalize(tmpvar_13);
  vec4 color_14;
  vec4 tmpvar_15;
  tmpvar_15 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_14.xyz = mix (u_BackgroundColor.xyz, tmpvar_15.xyz, (tmpvar_15.w * u_OpacityTex0.x));
  color_14.w = max (u_BackgroundColor.w, tmpvar_15.w);
  fragColor_2 = color_14;
  float rad_16;
  float vec_y_17;
  vec_y_17 = -(normal_3.y);
  float tmpvar_18;
  float tmpvar_19;
  tmpvar_19 = (min (abs(
    (vec_y_17 / normal_3.x)
  ), 1.0) / max (abs(
    (vec_y_17 / normal_3.x)
  ), 1.0));
  float tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_19);
  tmpvar_20 = (((
    ((((
      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)
     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)
   * tmpvar_20) + 0.9999793) * tmpvar_19);
  tmpvar_20 = (tmpvar_20 + (float(
    (abs((vec_y_17 / normal_3.x)) > 1.0)
  ) * (
    (tmpvar_20 * -2.0)
   + 1.570796)));
  tmpvar_18 = (tmpvar_20 * sign((vec_y_17 / normal_3.x)));
  if ((abs(normal_3.x) > (1e-08 * abs(vec_y_17)))) {
    if ((normal_3.x < 0.0)) {
      if ((vec_y_17 >= 0.0)) {
        tmpvar_18 += 3.141593;
      } else {
        tmpvar_18 = (tmpvar_18 - 3.141593);
      };
    };
  } else {
    tmpvar_18 = (sign(vec_y_17) * 1.570796);
  };
  rad_16 = (tmpvar_18 - 1.570796);
  rad_16 = (rad_16 + (float(
    (rad_16 < 0.0)
  ) * 6.283185));
  rad_16 = (6.283185 - rad_16);
  vec2 tmpvar_21;
  tmpvar_21.y = 0.0;
  tmpvar_21.x = (rad_16 / 6.283185);
  vec4 tmpvar_22;
  tmpvar_22 = texture2D (s_SlopeAspectShadeTexture, tmpvar_21);
  fragColor_2.xyz = mix (color_14.xyz, tmpvar_22.xyz, (tmpvar_22.w * float(
    (abs(normal_3.z) <= u_MaxNormalZ.x)
  )));
  float tmpvar_23;
  tmpvar_23 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_24;
  tmpvar_24 = (1.0 - (tmpvar_23 * (tmpvar_23 * 
    (3.0 - (2.0 * tmpvar_23))
  )));
  float tmpvar_25;
  float tmpvar_26;
  tmpvar_26 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_27;
  tmpvar_27 = max (u_NearFarFocus.z, 1.5);
  tmpvar_25 = (u_ContourParams0.w * min (1.0, (tmpvar_27 / 
    sqrt(tmpvar_26)
  )));
  float tmpvar_28;
  tmpvar_28 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_29;
  tmpvar_29 = (0.5 * u_ContourParams0.x);
  fragColor_2.xyz = mix (fragColor_2.xyz, mix (fragColor_2.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_25, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_25)))
       * 
        abs((fract((tmpvar_28 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_28))
       + 
        abs(dFdy(tmpvar_28))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_29) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_29))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_24));
  float tmpvar_30;
  tmpvar_30 = (u_ContourParams1.w * min (1.0, (tmpvar_27 / 
    sqrt(tmpvar_26)
  )));
  float tmpvar_31;
  tmpvar_31 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_32;
  tmpvar_32 = (0.5 * u_ContourParams1.x);
  fragColor_2.xyz = mix (fragColor_2.xyz, mix (fragColor_2.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_30, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_30)))
       * 
        abs((fract((tmpvar_31 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_31))
       + 
        abs(dFdy(tmpvar_31))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_32) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_32))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_24));
  float tmpvar_33;
  vec3 tmpvar_34;
  tmpvar_34 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_33 = sqrt(dot (tmpvar_34, tmpvar_34));
  vec3 rayDir_35;
  rayDir_35.xz = tmpvar_34.xz;
  rayDir_35.y = -(tmpvar_34.y);
  fragColor_2.xyz = mix (fragColor_2.xyz, ((
    ((fragColor_2.x + fragColor_2.y) + fragColor_2.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_33 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_33 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_35).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_36;
  tmpvar_36 = sqrt(dot (tmpvar_34, tmpvar_34));
  float period_37;
  period_37 = (u_viewshedRange0.x / 4.0);
  float tmpvar_38;
  tmpvar_38 = ((1.0/(period_37)) * tmpvar_36);
  float tmpvar_39;
  tmpvar_39 = (0.5 * period_37);
  float tmpvar_40;
  tmpvar_40 = (50.0 * tmpvar_36);
  vec4 tmpvar_41;
  tmpvar_41.xyz = mix (fragColor_2.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_41.w = u_viewshedRingTint0.w;
  fragColor_2.xyz = mix (fragColor_2.xyz, tmpvar_41.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_38 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_38))
     + 
      abs(dFdy(tmpvar_38))
    )), 1.0))
   * 
    (float((-(tmpvar_39) <= tmpvar_36)) * float((tmpvar_36 <= (u_viewshedRange0.x + tmpvar_39))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_40 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_40))
     + 
      abs(dFdy(tmpvar_40))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_36)) * float((tmpvar_36 <= 0.09)))
  )));
  float tmpvar_42;
  tmpvar_42 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, ((tmpvar_42 * 
    (tmpvar_42 * (3.0 - (2.0 * tmpvar_42)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_2;
  float tmpvar_43;
  tmpvar_43 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_44;
  tmpvar_44 = floor(tmpvar_43);
  d_1 = ((tmpvar_43 - tmpvar_44) * 256.0);
  float tmpvar_45;
  tmpvar_45 = floor(d_1);
  d_1 = ((d_1 - tmpvar_45) * 256.0);
  vec4 tmpvar_46;
  tmpvar_46.w = 1.0;
  tmpvar_46.x = (tmpvar_44 / 256.0);
  tmpvar_46.y = (tmpvar_45 / 256.0);
  tmpvar_46.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_46;
  vec3 tmpvar_47;
  tmpvar_47 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_48;
  tmpvar_48.x = (tmpvar_47.y * 0.5);
  tmpvar_48.y = (-(tmpvar_47.x) * 0.5);
  tmpvar_48.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_47.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_48)
      ) - tmpvar_48)), tmpvar_47)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

