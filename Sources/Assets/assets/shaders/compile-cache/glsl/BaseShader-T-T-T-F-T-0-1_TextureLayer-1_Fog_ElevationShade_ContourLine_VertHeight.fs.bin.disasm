varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform sampler2D s_texture0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_ElevationExtents;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  float tmpvar_4;
  tmpvar_4 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13.x = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)));
  tmpvar_13.y = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)));
  tmpvar_13.z = (2.0 * (tmpvar_4 * u_tileSize.x));
  normal_3 = normalize(tmpvar_13);
  vec4 color_14;
  vec4 tmpvar_15;
  tmpvar_15 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_14.xyz = mix (u_BackgroundColor.xyz, tmpvar_15.xyz, (tmpvar_15.w * u_OpacityTex0.x));
  color_14.w = max (u_BackgroundColor.w, tmpvar_15.w);
  fragColor_2.w = color_14.w;
  float tmpvar_16;
  tmpvar_16 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_17;
  tmpvar_17 = (((tmpvar_16 * 
    ((v_texcoord7.w - u_ElevationExtents.x) / ((tmpvar_16 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_16)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_18;
  tmpvar_18.x = (float(mod (tmpvar_17, s_ElevationShadeTexture_Res.x)));
  tmpvar_18.y = floor((tmpvar_17 / s_ElevationShadeTexture_Res.y));
  vec4 tmpvar_19;
  tmpvar_19 = texture2D (s_ElevationShadeTexture, (tmpvar_18 / s_ElevationShadeTexture_Res.xy));
  fragColor_2.xyz = mix (color_14.xyz, tmpvar_19.xyz, tmpvar_19.w);
  float tmpvar_20;
  tmpvar_20 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_21;
  tmpvar_21 = (1.0 - (tmpvar_20 * (tmpvar_20 * 
    (3.0 - (2.0 * tmpvar_20))
  )));
  float tmpvar_22;
  float tmpvar_23;
  tmpvar_23 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_24;
  tmpvar_24 = max (u_NearFarFocus.z, 1.5);
  tmpvar_22 = (u_ContourParams0.w * min (1.0, (tmpvar_24 / 
    sqrt(tmpvar_23)
  )));
  float tmpvar_25;
  tmpvar_25 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_26;
  tmpvar_26 = (0.5 * u_ContourParams0.x);
  fragColor_2.xyz = mix (fragColor_2.xyz, mix (fragColor_2.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_22, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_22)))
       * 
        abs((fract((tmpvar_25 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_25))
       + 
        abs(dFdy(tmpvar_25))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_26) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_26))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_21));
  float tmpvar_27;
  tmpvar_27 = (u_ContourParams1.w * min (1.0, (tmpvar_24 / 
    sqrt(tmpvar_23)
  )));
  float tmpvar_28;
  tmpvar_28 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_29;
  tmpvar_29 = (0.5 * u_ContourParams1.x);
  fragColor_2.xyz = mix (fragColor_2.xyz, mix (fragColor_2.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_27, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_27)))
       * 
        abs((fract((tmpvar_28 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_28))
       + 
        abs(dFdy(tmpvar_28))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_29) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_29))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_21));
  float tmpvar_30;
  tmpvar_30 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, ((tmpvar_30 * 
    (tmpvar_30 * (3.0 - (2.0 * tmpvar_30)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_2;
  float tmpvar_31;
  tmpvar_31 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_32;
  tmpvar_32 = floor(tmpvar_31);
  d_1 = ((tmpvar_31 - tmpvar_32) * 256.0);
  float tmpvar_33;
  tmpvar_33 = floor(d_1);
  d_1 = ((d_1 - tmpvar_33) * 256.0);
  vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.x = (tmpvar_32 / 256.0);
  tmpvar_34.y = (tmpvar_33 / 256.0);
  tmpvar_34.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_34;
  vec3 tmpvar_35;
  tmpvar_35 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_36;
  tmpvar_36.x = (tmpvar_35.y * 0.5);
  tmpvar_36.y = (-(tmpvar_35.x) * 0.5);
  tmpvar_36.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_35.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_36)
      ) - tmpvar_36)), tmpvar_35)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

