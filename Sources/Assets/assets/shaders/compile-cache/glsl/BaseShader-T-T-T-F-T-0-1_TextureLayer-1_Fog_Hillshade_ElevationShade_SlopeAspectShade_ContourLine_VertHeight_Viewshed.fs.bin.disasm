varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform sampler2D s_texture0;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_SlopeAspectMaxNormalZ;
uniform vec4 u_ElevationExtents;
uniform vec4 u_HillshadeLightDir;
uniform vec4 u_HillshadeAlbedo;
uniform vec4 u_HillshadeParams;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  float tmpvar_4;
  tmpvar_4 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13.x = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)));
  tmpvar_13.y = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)));
  tmpvar_13.z = (2.0 * (tmpvar_4 * u_tileSize.x));
  normal_3 = normalize(tmpvar_13);
  vec4 color_14;
  vec4 tmpvar_15;
  tmpvar_15 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_14.xyz = mix (u_BackgroundColor.xyz, tmpvar_15.xyz, (tmpvar_15.w * u_OpacityTex0.x));
  color_14.w = max (u_BackgroundColor.w, tmpvar_15.w);
  fragColor_2.w = color_14.w;
  vec3 tmpvar_16;
  tmpvar_16.xy = (u_HillshadeParams.y * normal_3.xy);
  tmpvar_16.z = normal_3.z;
  fragColor_2.xyz = mix (color_14.xyz, ((u_HillshadeParams.x + 
    ((1.0 - u_HillshadeParams.x) * (0.5 * (1.0 + dot (
      normalize(tmpvar_16)
    , 
      -(u_HillshadeLightDir.xyz)
    ))))
  ) * u_HillshadeAlbedo.xyz), u_HillshadeAlbedo.w);
  float rad_17;
  float vec_y_18;
  vec_y_18 = -(normal_3.y);
  float tmpvar_19;
  float tmpvar_20;
  tmpvar_20 = (min (abs(
    (vec_y_18 / normal_3.x)
  ), 1.0) / max (abs(
    (vec_y_18 / normal_3.x)
  ), 1.0));
  float tmpvar_21;
  tmpvar_21 = (tmpvar_20 * tmpvar_20);
  tmpvar_21 = (((
    ((((
      ((((-0.01213232 * tmpvar_21) + 0.05368138) * tmpvar_21) - 0.1173503)
     * tmpvar_21) + 0.1938925) * tmpvar_21) - 0.3326756)
   * tmpvar_21) + 0.9999793) * tmpvar_20);
  tmpvar_21 = (tmpvar_21 + (float(
    (abs((vec_y_18 / normal_3.x)) > 1.0)
  ) * (
    (tmpvar_21 * -2.0)
   + 1.570796)));
  tmpvar_19 = (tmpvar_21 * sign((vec_y_18 / normal_3.x)));
  if ((abs(normal_3.x) > (1e-08 * abs(vec_y_18)))) {
    if ((normal_3.x < 0.0)) {
      if ((vec_y_18 >= 0.0)) {
        tmpvar_19 += 3.141593;
      } else {
        tmpvar_19 = (tmpvar_19 - 3.141593);
      };
    };
  } else {
    tmpvar_19 = (sign(vec_y_18) * 1.570796);
  };
  rad_17 = (tmpvar_19 - 1.570796);
  rad_17 = (rad_17 + (float(
    (rad_17 < 0.0)
  ) * 6.283185));
  rad_17 = (6.283185 - rad_17);
  vec2 tmpvar_22;
  tmpvar_22.y = 0.0;
  tmpvar_22.x = ((float(mod (rad_17, 6.282685))) / 6.283185);
  vec4 tmpvar_23;
  tmpvar_23 = texture2D (s_SlopeAspectShadeTexture, tmpvar_22);
  fragColor_2.xyz = mix (fragColor_2.xyz, tmpvar_23.xyz, (tmpvar_23.w * float(
    (abs(normal_3.z) <= u_SlopeAspectMaxNormalZ.x)
  )));
  float tmpvar_24;
  tmpvar_24 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_25;
  tmpvar_25 = (((tmpvar_24 * 
    ((v_texcoord7.w - u_ElevationExtents.x) / ((tmpvar_24 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_24)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_26;
  tmpvar_26.x = (float(mod (tmpvar_25, s_ElevationShadeTexture_Res.x)));
  tmpvar_26.y = floor((tmpvar_25 / s_ElevationShadeTexture_Res.y));
  vec4 tmpvar_27;
  tmpvar_27 = texture2D (s_ElevationShadeTexture, (tmpvar_26 / s_ElevationShadeTexture_Res.xy));
  fragColor_2.xyz = mix (fragColor_2.xyz, tmpvar_27.xyz, tmpvar_27.w);
  float tmpvar_28;
  tmpvar_28 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_29;
  tmpvar_29 = (1.0 - (tmpvar_28 * (tmpvar_28 * 
    (3.0 - (2.0 * tmpvar_28))
  )));
  float tmpvar_30;
  float tmpvar_31;
  tmpvar_31 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_32;
  tmpvar_32 = max (u_NearFarFocus.z, 1.5);
  tmpvar_30 = (u_ContourParams0.w * min (1.0, (tmpvar_32 / 
    sqrt(tmpvar_31)
  )));
  float tmpvar_33;
  tmpvar_33 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_34;
  tmpvar_34 = (0.5 * u_ContourParams0.x);
  fragColor_2.xyz = mix (fragColor_2.xyz, mix (fragColor_2.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_30, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_30)))
       * 
        abs((fract((tmpvar_33 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_33))
       + 
        abs(dFdy(tmpvar_33))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_34) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_34))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_29));
  float tmpvar_35;
  tmpvar_35 = (u_ContourParams1.w * min (1.0, (tmpvar_32 / 
    sqrt(tmpvar_31)
  )));
  float tmpvar_36;
  tmpvar_36 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_37;
  tmpvar_37 = (0.5 * u_ContourParams1.x);
  fragColor_2.xyz = mix (fragColor_2.xyz, mix (fragColor_2.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_35, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_35)))
       * 
        abs((fract((tmpvar_36 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_36))
       + 
        abs(dFdy(tmpvar_36))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_37) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_37))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_29));
  float tmpvar_38;
  vec3 tmpvar_39;
  tmpvar_39 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_38 = sqrt(dot (tmpvar_39, tmpvar_39));
  vec3 rayDir_40;
  rayDir_40.xz = tmpvar_39.xz;
  rayDir_40.y = -(tmpvar_39.y);
  fragColor_2.xyz = mix (fragColor_2.xyz, ((
    ((fragColor_2.x + fragColor_2.y) + fragColor_2.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_38 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_38 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_40).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_41;
  tmpvar_41 = sqrt(dot (tmpvar_39, tmpvar_39));
  float period_42;
  period_42 = (u_viewshedRange0.x / 4.0);
  float tmpvar_43;
  tmpvar_43 = ((1.0/(period_42)) * tmpvar_41);
  float tmpvar_44;
  tmpvar_44 = (0.5 * period_42);
  float tmpvar_45;
  tmpvar_45 = (50.0 * tmpvar_41);
  vec4 tmpvar_46;
  tmpvar_46.xyz = mix (fragColor_2.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_46.w = u_viewshedRingTint0.w;
  fragColor_2.xyz = mix (fragColor_2.xyz, tmpvar_46.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_43 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_43))
     + 
      abs(dFdy(tmpvar_43))
    )), 1.0))
   * 
    (float((-(tmpvar_44) <= tmpvar_41)) * float((tmpvar_41 <= (u_viewshedRange0.x + tmpvar_44))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_45 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_45))
     + 
      abs(dFdy(tmpvar_45))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_41)) * float((tmpvar_41 <= 0.09)))
  )));
  float tmpvar_47;
  tmpvar_47 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, ((tmpvar_47 * 
    (tmpvar_47 * (3.0 - (2.0 * tmpvar_47)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_2;
  float tmpvar_48;
  tmpvar_48 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_49;
  tmpvar_49 = floor(tmpvar_48);
  d_1 = ((tmpvar_48 - tmpvar_49) * 256.0);
  float tmpvar_50;
  tmpvar_50 = floor(d_1);
  d_1 = ((d_1 - tmpvar_50) * 256.0);
  vec4 tmpvar_51;
  tmpvar_51.w = 1.0;
  tmpvar_51.x = (tmpvar_49 / 256.0);
  tmpvar_51.y = (tmpvar_50 / 256.0);
  tmpvar_51.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_51;
  vec3 tmpvar_52;
  tmpvar_52 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_53;
  tmpvar_53.x = (tmpvar_52.y * 0.5);
  tmpvar_53.y = (-(tmpvar_52.x) * 0.5);
  tmpvar_53.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_52.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_53)
      ) - tmpvar_53)), tmpvar_52)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

