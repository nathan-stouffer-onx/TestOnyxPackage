varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ElevationExtents;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  vec2 tmpvar_4;
  tmpvar_4 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4.x;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4.y;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  float tmpvar_13;
  tmpvar_13 = (texture2D (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_14;
  tmpvar_14 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_15;
  tmpvar_15.y = 0.0;
  tmpvar_15.x = -(tmpvar_14.x);
  tmpvar_15.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - tmpvar_13);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = tmpvar_14.x;
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)) - tmpvar_13);
  vec3 tmpvar_17;
  tmpvar_17.x = 0.0;
  tmpvar_17.y = -(tmpvar_14.y);
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - tmpvar_13);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = tmpvar_14.y;
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)) - tmpvar_13);
  normal_3 = normalize(((
    (((tmpvar_15.yzx * tmpvar_17.zxy) - (tmpvar_15.zxy * tmpvar_17.yzx)) + ((tmpvar_17.yzx * tmpvar_16.zxy) - (tmpvar_17.zxy * tmpvar_16.yzx)))
   + 
    ((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx))
  ) + (
    (tmpvar_18.yzx * tmpvar_15.zxy)
   - 
    (tmpvar_18.zxy * tmpvar_15.yzx)
  )));
  fragColor_2.w = u_BackgroundColor.w;
  float tmpvar_19;
  tmpvar_19 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_20;
  tmpvar_20 = (((tmpvar_19 * 
    (((v_texcoord7.w + u_eyePos.z) - u_ElevationExtents.x) / ((tmpvar_19 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_19)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_21;
  tmpvar_21.x = (float(mod (tmpvar_20, s_ElevationShadeTexture_Res.x)));
  tmpvar_21.y = floor((tmpvar_20 / s_ElevationShadeTexture_Res.y));
  vec4 tmpvar_22;
  tmpvar_22 = texture2D (s_ElevationShadeTexture, (tmpvar_21 / s_ElevationShadeTexture_Res.xy));
  fragColor_2.xyz = mix (u_BackgroundColor.xyz, tmpvar_22.xyz, tmpvar_22.w);
  float tmpvar_23;
  tmpvar_23 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, (tmpvar_23 * (tmpvar_23 * 
    (3.0 - (2.0 * tmpvar_23))
  )));
  gl_FragData[0] = fragColor_2;
  float tmpvar_24;
  tmpvar_24 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_25;
  tmpvar_25 = floor(tmpvar_24);
  d_1 = ((tmpvar_24 - tmpvar_25) * 256.0);
  float tmpvar_26;
  tmpvar_26 = floor(d_1);
  d_1 = ((d_1 - tmpvar_26) * 256.0);
  vec4 tmpvar_27;
  tmpvar_27.w = 1.0;
  tmpvar_27.x = (tmpvar_25 / 256.0);
  tmpvar_27.y = (tmpvar_26 / 256.0);
  tmpvar_27.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_27;
  vec3 tmpvar_28;
  tmpvar_28 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_29;
  tmpvar_29.x = (tmpvar_28.y * 0.5);
  tmpvar_29.y = (-(tmpvar_28.x) * 0.5);
  tmpvar_29.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_28.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_29)
      ) - tmpvar_29)), tmpvar_28)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

