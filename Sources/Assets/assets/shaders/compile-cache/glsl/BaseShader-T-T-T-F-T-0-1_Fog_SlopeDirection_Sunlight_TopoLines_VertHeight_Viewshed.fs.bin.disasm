varying vec4 v_color4;
varying vec4 v_texcoord0;
varying vec4 v_texcoord1;
varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeDirTexture;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedColor0;
uniform vec4 u_viewshedRange;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane;
uniform vec4 u_viewshedStrength;
uniform vec4 u_viewshedBias;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_TopoParams;
uniform vec4 u_minorTopoColor;
uniform vec4 u_majorTopoColor;
uniform vec4 u_TopoFade;
uniform vec4 u_TopoHeightFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float d_1;
  vec2 projectedUV_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture2D (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_7)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_9)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_11)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture2D (s_heightTexture, (
    (v_color4.zw * tmpvar_13)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  fragColor_3 = vec4(1.0, 1.0, 1.0, 0.0);
  float rad_20;
  float vec_y_21;
  vec_y_21 = -(normal_4.y);
  float tmpvar_22;
  float tmpvar_23;
  tmpvar_23 = (min (abs(
    (vec_y_21 / normal_4.x)
  ), 1.0) / max (abs(
    (vec_y_21 / normal_4.x)
  ), 1.0));
  float tmpvar_24;
  tmpvar_24 = (tmpvar_23 * tmpvar_23);
  tmpvar_24 = (((
    ((((
      ((((-0.01213232 * tmpvar_24) + 0.05368138) * tmpvar_24) - 0.1173503)
     * tmpvar_24) + 0.1938925) * tmpvar_24) - 0.3326756)
   * tmpvar_24) + 0.9999793) * tmpvar_23);
  tmpvar_24 = (tmpvar_24 + (float(
    (abs((vec_y_21 / normal_4.x)) > 1.0)
  ) * (
    (tmpvar_24 * -2.0)
   + 1.570796)));
  tmpvar_22 = (tmpvar_24 * sign((vec_y_21 / normal_4.x)));
  if ((abs(normal_4.x) > (1e-08 * abs(vec_y_21)))) {
    if ((normal_4.x < 0.0)) {
      if ((vec_y_21 >= 0.0)) {
        tmpvar_22 += 3.141593;
      } else {
        tmpvar_22 = (tmpvar_22 - 3.141593);
      };
    };
  } else {
    tmpvar_22 = (sign(vec_y_21) * 1.570796);
  };
  rad_20 = (tmpvar_22 - 1.570796);
  rad_20 = (rad_20 + (float(
    (rad_20 < 0.0)
  ) * 6.283185));
  rad_20 = (6.283185 - rad_20);
  vec2 tmpvar_25;
  tmpvar_25.y = 0.0;
  tmpvar_25.x = (rad_20 / 6.283185);
  vec4 tmpvar_26;
  tmpvar_26 = texture2D (s_SlopeDirTexture, tmpvar_25);
  fragColor_3.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_26.xyz, (0.5 * tmpvar_26.w));
  vec3 tangentSun_27;
  vec3 planetNormal_28;
  float tmpvar_29;
  tmpvar_29 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_30;
  tmpvar_30 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_28.x = (cos(tmpvar_30) * cos(tmpvar_29));
  planetNormal_28.y = (cos(tmpvar_30) * sin(tmpvar_29));
  planetNormal_28.z = sin(tmpvar_30);
  vec3 tmpvar_31;
  tmpvar_31 = normalize(((planetNormal_28.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_28.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_27.x = -(dot (tmpvar_31, v_texcoord3.xyz));
  tangentSun_27.y = -(dot (normalize(
    ((planetNormal_28.yzx * tmpvar_31.zxy) - (planetNormal_28.zxy * tmpvar_31.yzx))
  ), v_texcoord3.xyz));
  tangentSun_27.z = dot (planetNormal_28, v_texcoord3.xyz);
  vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.xyz = mix (vec3(clamp (dot (tangentSun_27, normal_4), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_4 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_33;
  tmpvar_33 = mix (fragColor_3, tmpvar_32, u_SunMinStrength.x);
  fragColor_3.w = tmpvar_33.w;
  float tmpvar_34;
  tmpvar_34 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_2 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_2 = ((projectedUV_2 * 0.5) + 0.5);
  vec4 tmpvar_35;
  tmpvar_35 = texture2D (s_sunShadowDepth, projectedUV_2);
  float tmpvar_36;
  tmpvar_36 = max ((tmpvar_35.y - (tmpvar_35.x * tmpvar_35.x)), u_sunShadowVSMParams.x);
  float tmpvar_37;
  tmpvar_37 = (tmpvar_34 - tmpvar_35.x);
  fragColor_3.xyz = mix (tmpvar_33.xyz, vec3(min (max (
    float((tmpvar_34 <= tmpvar_35.x))
  , 
    clamp ((((tmpvar_36 / 
      (tmpvar_36 + (tmpvar_37 * tmpvar_37))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_3.xyz = texture2D (s_sunShadowDepth, projectedUV_2).xyz;
  };
  float height_38;
  height_38 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_39;
  tmpvar_39 = pow ((1.0 - (
    sqrt(dot (v_texcoord7.xy, v_texcoord7.xy))
   / 
    (u_nearFarPlane.y / 3.0)
  )), 3.0);
  float strength_40;
  float tmpvar_41;
  tmpvar_41 = ((1.0/(u_TopoParams.x)) * height_38);
  float tmpvar_42;
  tmpvar_42 = (0.5 * u_TopoParams.x);
  strength_40 = ((1.0 - min (
    (abs((fract(
      (tmpvar_41 - 0.5)
    ) - 0.5)) / (abs(dFdx(tmpvar_41)) + abs(dFdy(tmpvar_41))))
  , 1.0)) * (float(
    ((-10.0 - tmpvar_42) <= height_38)
  ) * float(
    (height_38 <= (10.0 + tmpvar_42))
  )));
  float tmpvar_43;
  tmpvar_43 = ((1.0/(u_TopoParams.y)) * height_38);
  float tmpvar_44;
  tmpvar_44 = (0.5 * u_TopoParams.y);
  float tmpvar_45;
  tmpvar_45 = clamp ((pow (
    (((1.0 - min (
      (((1.0/((2.0 + 
        (u_TopoHeightFade.y * tmpvar_39)
      ))) * abs((
        fract((tmpvar_43 - 0.5))
       - 0.5))) / (abs(dFdx(tmpvar_43)) + abs(dFdy(tmpvar_43))))
    , 1.0)) * (float(
      ((-10.0 - tmpvar_44) <= height_38)
    ) * float(
      (height_38 <= (10.0 + tmpvar_44))
    ))) + 0.5)
  , 3.0) - 0.5), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((u_majorTopoColor.xyz * tmpvar_45) + (u_minorTopoColor.xyz * 
    clamp ((strength_40 - tmpvar_45), 0.0, 1.0)
  )), clamp ((
    mix (u_TopoFade.y, u_TopoFade.x, tmpvar_39)
   * 
    max ((strength_40 * u_TopoHeightFade.x), (tmpvar_45 * u_TopoHeightFade.y))
  ), 0.0, 1.0));
  float tmpvar_46;
  tmpvar_46 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_46 * (tmpvar_46 * 
    (3.0 - (2.0 * tmpvar_46))
  )));
  float tmpvar_47;
  vec3 tmpvar_48;
  tmpvar_48 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_47 = sqrt(dot (tmpvar_48, tmpvar_48));
  vec3 rayDir_49;
  rayDir_49.xz = tmpvar_48.xz;
  rayDir_49.y = -(tmpvar_48.y);
  fragColor_3.xyz = (fragColor_3.xyz + ((
    ((float((tmpvar_47 < u_viewshedRange.x)) * float((
      (tmpvar_47 - u_viewshedBias.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_49).x * u_viewshedFarPlane.x)
    ))) * u_viewshedStrength.x)
   * 
    mix (0.45, 0.15, (tmpvar_47 / u_viewshedRange.x))
  ) * u_viewshedColor0.xyz));
  float lineStrength_50;
  float tmpvar_51;
  tmpvar_51 = sqrt(dot (tmpvar_48, tmpvar_48));
  float period_52;
  period_52 = (u_viewshedRange.x / 4.0);
  float tmpvar_53;
  tmpvar_53 = ((1.0/(period_52)) * tmpvar_51);
  float tmpvar_54;
  tmpvar_54 = (0.5 * period_52);
  float tmpvar_55;
  tmpvar_55 = (50.0 * tmpvar_51);
  lineStrength_50 = (((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_53 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_53)
    ) + abs(
      dFdy(tmpvar_53)
    ))), 1.0)
  ) * (
    float((-(tmpvar_54) <= tmpvar_51))
   * 
    float((tmpvar_51 <= (u_viewshedRange.x + tmpvar_54)))
  )) + ((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_55 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_55)
    ) + abs(
      dFdy(tmpvar_55)
    ))), 1.0)
  ) * (
    float((-0.01 <= tmpvar_51))
   * 
    float((tmpvar_51 <= 0.09))
  )));
  fragColor_3.xyz = (((1.0 - lineStrength_50) * fragColor_3.xyz) + (lineStrength_50 * (vec3(1.0, 1.0, 1.0) - u_viewshedColor0.xyz)));
  gl_FragData[0] = fragColor_3;
  float tmpvar_56;
  tmpvar_56 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_57;
  tmpvar_57 = floor(tmpvar_56);
  d_1 = ((tmpvar_56 - tmpvar_57) * 256.0);
  float tmpvar_58;
  tmpvar_58 = floor(d_1);
  d_1 = ((d_1 - tmpvar_58) * 256.0);
  vec4 tmpvar_59;
  tmpvar_59.w = 1.0;
  tmpvar_59.x = (tmpvar_57 / 256.0);
  tmpvar_59.y = (tmpvar_58 / 256.0);
  tmpvar_59.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_59;
  vec3 tmpvar_60;
  tmpvar_60 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_61;
  tmpvar_61.x = (tmpvar_60.y * 0.5);
  tmpvar_61.y = (-(tmpvar_60.x) * 0.5);
  tmpvar_61.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_60.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_4)
       * 
        dot (normal_4, tmpvar_61)
      ) - tmpvar_61)), tmpvar_60)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_4.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

