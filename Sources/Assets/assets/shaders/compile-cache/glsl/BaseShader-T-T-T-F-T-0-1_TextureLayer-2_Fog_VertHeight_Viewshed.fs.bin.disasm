varying vec4 v_texcoord2;
varying vec4 v_texcoord3;
varying vec4 v_texcoord4;
varying vec4 v_texcoord5;
varying vec4 v_texcoord6;
varying vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_BackgroundColor;
void main ()
{
  float d_1;
  vec4 fragColor_2;
  vec3 normal_3;
  float tmpvar_4;
  tmpvar_4 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_5;
  tmpvar_5.y = 0.0;
  tmpvar_5.x = tmpvar_4;
  vec2 tmpvar_6;
  tmpvar_6 = (v_texcoord5.xy - tmpvar_5);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_4;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy + tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.x = 0.0;
  tmpvar_9.y = tmpvar_4;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy - tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_4;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy + tmpvar_11);
  vec3 tmpvar_13;
  tmpvar_13.x = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_6)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_6.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_8)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_8.y)));
  tmpvar_13.y = ((texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_10)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_10.y)) - (texture2DLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_12)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_12.y)));
  tmpvar_13.z = (2.0 * (tmpvar_4 * u_tileSize.x));
  normal_3 = normalize(tmpvar_13);
  vec4 color_14;
  vec4 tmpvar_15;
  tmpvar_15 = texture2D (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_14.xyz = mix (u_BackgroundColor.xyz, tmpvar_15.xyz, (tmpvar_15.w * u_OpacityTex0.x));
  color_14.w = max (u_BackgroundColor.w, tmpvar_15.w);
  vec4 tmpvar_16;
  tmpvar_16 = texture2D (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_14.xyz = mix (color_14.xyz, tmpvar_16.xyz, (tmpvar_16.w * u_OpacityTex1.x));
  color_14.w = max (color_14.w, tmpvar_16.w);
  fragColor_2.w = color_14.w;
  float tmpvar_17;
  vec3 tmpvar_18;
  tmpvar_18 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_17 = sqrt(dot (tmpvar_18, tmpvar_18));
  vec3 rayDir_19;
  rayDir_19.xz = tmpvar_18.xz;
  rayDir_19.y = -(tmpvar_18.y);
  fragColor_2.xyz = mix (color_14.xyz, ((
    ((color_14.x + color_14.y) + color_14.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_17 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_17 - u_viewshedBias0.x)
     < 
      (textureCube (s_cubeDepth0, rayDir_19).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_20;
  tmpvar_20 = sqrt(dot (tmpvar_18, tmpvar_18));
  float period_21;
  period_21 = (u_viewshedRange0.x / 4.0);
  float tmpvar_22;
  tmpvar_22 = ((1.0/(period_21)) * tmpvar_20);
  float tmpvar_23;
  tmpvar_23 = (0.5 * period_21);
  float tmpvar_24;
  tmpvar_24 = (50.0 * tmpvar_20);
  vec4 tmpvar_25;
  tmpvar_25.xyz = mix (fragColor_2.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_25.w = u_viewshedRingTint0.w;
  fragColor_2.xyz = mix (fragColor_2.xyz, tmpvar_25.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_22 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_22))
     + 
      abs(dFdy(tmpvar_22))
    )), 1.0))
   * 
    (float((-(tmpvar_23) <= tmpvar_20)) * float((tmpvar_20 <= (u_viewshedRange0.x + tmpvar_23))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_24 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_24))
     + 
      abs(dFdy(tmpvar_24))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_20)) * float((tmpvar_20 <= 0.09)))
  )));
  float tmpvar_26;
  tmpvar_26 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_2.xyz = mix (fragColor_2.xyz, u_FogColor.xyz, ((tmpvar_26 * 
    (tmpvar_26 * (3.0 - (2.0 * tmpvar_26)))
  ) * u_FogColor.w));
  gl_FragData[0] = fragColor_2;
  float tmpvar_27;
  tmpvar_27 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_28;
  tmpvar_28 = floor(tmpvar_27);
  d_1 = ((tmpvar_27 - tmpvar_28) * 256.0);
  float tmpvar_29;
  tmpvar_29 = floor(d_1);
  d_1 = ((d_1 - tmpvar_29) * 256.0);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.x = (tmpvar_28 / 256.0);
  tmpvar_30.y = (tmpvar_29 / 256.0);
  tmpvar_30.z = (floor(d_1) / 256.0);
  gl_FragData[1] = tmpvar_30;
  vec3 tmpvar_31;
  tmpvar_31 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_32;
  tmpvar_32.x = (tmpvar_31.y * 0.5);
  tmpvar_32.y = (-(tmpvar_31.x) * 0.5);
  tmpvar_32.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_31.z)
  )), 0.2);
  gl_FragData[0].xyz = (gl_FragData[0].xyz + ((
    (pow (min (max (
      dot (normalize(((
        (2.0 * normal_3)
       * 
        dot (normal_3, tmpvar_32)
      ) - tmpvar_32)), tmpvar_31)
    , 0.0), 1.0), u_lightStrengthPow.y) * u_lightStrengthPow.x)
   * 
    ((1.8 * (1.0 - max (0.0, normal_3.z))) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

