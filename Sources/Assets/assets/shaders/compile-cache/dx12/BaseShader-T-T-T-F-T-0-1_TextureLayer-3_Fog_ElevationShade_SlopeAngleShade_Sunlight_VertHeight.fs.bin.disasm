//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    4   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xy  
// TEXCOORD                 3   xyzw        6     NONE   float   xyz 
// TEXCOORD                 4   xyzw        7     NONE   float   x   
// TEXCOORD                 5   xyzw        8     NONE   float   xy  
// TEXCOORD                 6   xyzw        9     NONE   float     zw
// TEXCOORD                 7   xyzw       10     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[20], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.x
dcl_input_ps linear v8.xy
dcl_input_ps linear v9.zw
dcl_input_ps linear v10.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
mul r0.x, cb0[0].z, l(0.500000)
div r0.y, r0.x, v1.z
mov r0.xw, l(0,0,0,0)
add r1.xyzw, -r0.yxxy, v8.xyxy
add r2.xyzw, r0.yxxy, v8.xyxy
mad r3.xyzw, v1.zwzw, r1.xyzw, v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r3.xyxx, t2.xyzw, s2, l(0.000000)
add r1.x, -v3.x, v3.y
mad r1.yz, r1.yywy, r1.xxxx, v3.xxxx
mad r4.xyzw, v1.zwzw, r2.xyzw, v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s2, l(0.000000)
mad r2.xy, r2.ywyy, r1.xxxx, v3.xxxx
mul r1.x, r1.w, r2.x
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.zwzz, t2.yzwx, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r4.zwzz, t2.xyzw, s2, l(0.000000)
mul r2.x, r2.y, r2.x
mad r3.x, r0.x, r1.y, -r1.x
mad r3.y, r1.w, r1.z, -r2.x
dp2 r3.z, r0.yyyy, cb0[2].xxxx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r3.xyzx
mad r0.xy, v8.xyxx, cb0[13].zwzz, cb0[13].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyxx, t4.xyzw, s4
mul r0.x, r2.w, cb0[14].x
add r2.xyz, r2.xyzx, -cb0[19].xyzx
mad r2.xyz, r0.xxxx, r2.xyzx, cb0[19].xyzx
max r0.x, r2.w, cb0[19].w
mad r3.xy, v8.xyxx, cb0[15].zwzz, cb0[15].xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t5.xyzw, s5
mul r0.y, r3.w, cb0[16].x
add r3.xyz, -r2.xyzx, r3.xyzx
mad r2.xyz, r0.yyyy, r3.xyzx, r2.xyzx
max r0.x, r0.x, r3.w
mad r3.xy, v8.xyxx, cb0[17].zwzz, cb0[17].xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t6.xyzw, s6
mul r0.y, r3.w, cb0[18].x
add r3.xyz, -r2.xyzx, r3.xyzx
mad r2.xyz, r0.yyyy, r3.xyzx, r2.xyzx
max r2.w, r0.x, r3.w
add r0.x, v5.x, l(-0.500000)
add r0.y, -v5.y, l(0.500000)
mul r0.xy, r0.xyxx, l(6.283185, 3.141593, 0.000000, 0.000000)
sincos r3.x, r4.x, r0.y
sincos r0.x, r5.x, r0.x
mul r5.x, r4.x, r5.x
mul r5.y, r0.x, r4.x
mov r5.z, r3.x
mul r3.xyz, r5.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r3.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r3.xyzx
dp2 r0.x, r3.xyxx, r3.xyxx
rsq r0.x, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
mul r4.xyz, r3.xyzx, r5.zxyz
mad r4.xyz, r5.yzxy, r3.yzxy, -r4.xyzx
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
dp2 r0.x, r3.xyxx, v6.yzyy
mov r3.x, -r0.x
dp3 r0.x, r4.xyzx, v6.xyzx
mov r3.y, -r0.x
dp3 r3.z, r5.xyzx, v6.xyzx
dp3_sat r0.x, r3.xyzx, r1.xyzx
add r3.xyz, r1.xyzx, r1.xyzx
mad r4.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.y, r4.xyzx, l(0.192450, 0.192450, 0.962250, 0.000000)
mul r1.w, cb0[5].x, l(0.500000)
mad r4.xyz, r0.yyyy, l(0.750000, 0.790000, 1.000000, 0.000000), -r0.xxxx
mad r4.xyz, r1.wwww, r4.xyzx, r0.xxxx
mov r4.w, l(1.000000)
add r4.xyzw, -r2.xyzw, r4.xyzw
mad r2.xyzw, cb0[4].xxxx, r4.xyzw, r2.xyzw
div r0.xy, v4.xyxx, v4.wwww
mad r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r0.xyxx, t3.xyzw, s3
lt r0.x, l(0.500000), cb0[9].x
if_z r0.x
  add r0.x, v4.z, -cb0[6].x
  ge r0.y, r4.x, r0.x
  and r0.y, r0.y, l(0x3f800000)
  mad r1.w, -r4.x, r4.x, r4.y
  max r1.w, r1.w, cb0[8].x
  add r0.x, -r4.x, r0.x
  mad r0.x, r0.x, r0.x, r1.w
  div r0.x, r1.w, r0.x
  add r0.x, r0.x, -cb0[8].y
  add r1.w, -cb0[8].y, l(1.000000)
  div_sat r0.x, r0.x, r1.w
  max r0.x, r0.x, r0.y
  add r5.xyz, -r2.xyzx, r0.xxxx
  mad r4.xyz, cb0[7].xxxx, r5.xyzx, r2.xyzx
endif 
ne r0.x, cb0[10].y, cb0[10].x
and r0.y, r0.x, l(0x3f800000)
add r1.w, -cb0[10].x, cb0[10].y
movc r0.x, r0.x, l(-1.000000), l(-0.000000)
mad r0.x, r0.y, r1.w, r0.x
add r0.x, r0.x, l(1.000000)
add r1.w, v10.w, -cb0[10].x
div r0.x, r1.w, r0.x
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, cb0[1].x
mul r0.x, r0.x, cb0[1].y
div r2.xy, r0.xxxx, cb0[1].xyxx
round_ni r2.yz, r2.xxyx
mad r2.x, -cb0[1].x, r2.y, r0.x
div r0.xy, r2.xzxx, cb0[1].xyxx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r0.xyxx, t0.xyzw, s0
add r2.xyz, -r4.xyzx, r5.xyzx
mad r2.xyz, r5.wwww, r2.xyzx, r4.xyzx
add r0.x, -|r1.z|, l(1.000000)
sqrt r0.x, r0.x
mad r0.y, |r1.z|, l(-0.018729), l(0.074261)
mad r0.y, r0.y, |r1.z|, l(-0.212114)
mad r0.y, r0.y, |r1.z|, l(1.570729)
mul r1.w, r0.x, r0.y
mad r1.w, r1.w, l(-2.000000), l(3.141593)
lt r3.w, r1.z, -r1.z
and r1.w, r1.w, r3.w
mad r0.x, r0.y, r0.x, r1.w
mul r0.z, r0.x, l(0.636620)
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.zwzz, t1.xyzw, s1
add r0.xyz, -r2.xyzx, r0.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
add r0.w, -cb0[11].x, cb0[11].y
add r1.w, v7.x, -cb0[11].x
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul_sat r0.w, r0.w, r1.w
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, cb0[12].w
add r2.xyz, -r0.xyzx, cb0[12].xyzx
mad r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
div r0.w, v9.z, v9.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r1.w, r0.w, l(256.000000)
round_ni r1.w, r1.w
mad r0.w, r0.w, l(256.000000), -r1.w
mul r2.x, r0.w, l(256.000000)
round_ni r2.x, r2.x
mad r0.w, r0.w, l(256.000000), -r2.x
mul r0.w, r0.w, l(256.000000)
round_ni r0.w, r0.w
mul o1.x, r1.w, l(0.003906)
mul o1.y, r2.x, l(0.003906)
mul o1.z, r0.w, l(0.003906)
dp3 r0.w, -v10.xyzx, -v10.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -v10.xyzx
max r0.w, r2.z, l(0.000000)
mul r4.xy, r2.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r4.z, r0.w, l(0.200000)
dp3 r0.w, r1.xyzx, r4.xyzx
mad r1.xyw, r3.xyxz, r0.wwww, -r4.xyxz
dp3 r0.w, r1.xywx, r1.xywx
rsq r0.w, r0.w
mul r1.xyw, r0.wwww, r1.xyxw
dp3_sat r0.w, r1.xywx, r2.xyzx
max r1.x, r1.z, l(0.000000)
add r1.x, -r1.x, l(1.000000)
add r1.y, -v10.z, l(-5.000000)
mul_sat r1.y, r1.y, l(0.010000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[3].y
exp r0.w, r0.w
mul r0.w, r0.w, cb0[3].x
mad r1.x, r1.x, l(1.800000), l(0.100000)
mul r0.w, r0.w, r1.x
mad o0.xyz, r0.wwww, r1.yyyy, r0.xyzx
mov o0.w, r2.w
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 