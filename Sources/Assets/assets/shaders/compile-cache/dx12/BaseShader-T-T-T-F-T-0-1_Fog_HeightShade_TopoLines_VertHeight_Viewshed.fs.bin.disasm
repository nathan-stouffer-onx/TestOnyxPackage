//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float     zw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.zw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 7
dp2 r0.x, v7.xyxx, v7.xyxx
sqrt r0.x, r0.x
mul r0.y, cb0[17].y, l(0.333333)
div r0.x, r0.x, r0.y
add r0.x, -r0.x, l(1.000000)
mul r0.y, r0.x, r0.x
mul r0.x, r0.y, r0.x
mad r0.y, cb0[13].y, r0.x, l(2.000000)
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
div r0.zw, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[9].xxxy
add r1.x, v7.w, cb0[18].z
mad r1.yz, r0.zzwz, r1.xxxx, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r0.zw, r0.zzzw, r1.xxxx
frc r1.yz, r1.yyzy
add r1.yz, r1.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r0.y, r0.y, |r1.z|
mov r1.zw, -r0.zzzw
deriv_rtx_coarse r0.zw, r0.zzzw
deriv_rty_coarse r1.zw, r1.zzzw
add r0.zw, |r0.zzzw|, |r1.zzzw|
div r0.y, r0.y, r0.w
div r0.z, |r1.y|, r0.z
min r0.yz, r0.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
add r0.yz, -r0.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
mad r1.yz, -cb0[9].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, -10.000000, -10.000000, 0.000000)
ge r1.yz, r1.xxxx, r1.yyzy
and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mad r2.xy, cb0[9].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(10.000000, 10.000000, 0.000000, 0.000000)
ge r2.xy, r2.xyxx, r1.xxxx
add r0.w, r1.x, -cb0[14].x
and r1.xw, r2.xxxy, l(0x3f800000, 0, 0, 0x3f800000)
mul r1.xy, r1.xwxx, r1.yzyy
mad r0.y, r0.y, r1.y, l(0.500000)
mul r1.y, r0.y, r0.y
mad_sat r0.y, r0.y, r1.y, l(-0.500000)
mad r1.y, r0.z, r1.x, -r0.y
mul r0.z, r0.z, r1.x
mul r0.z, r0.z, cb0[13].x
max r1.x, r1.y, l(0.000000)
mul r1.xyz, r1.xxxx, cb0[10].xyzx
mad r1.xyz, cb0[11].xyzx, r0.yyyy, r1.xyzx
mul r0.y, r0.y, cb0[13].y
max r0.y, r0.y, r0.z
add r0.z, -cb0[14].x, cb0[14].y
ne r1.w, cb0[14].y, cb0[14].x
movc r2.x, r1.w, l(-1.000000), l(-0.000000)
and r1.w, r1.w, l(0x3f800000)
mad r0.z, r1.w, r0.z, r2.x
add r0.z, r0.z, l(1.000000)
div r0.z, r0.w, r0.z
mul r2.x, r0.z, r1.w
mov r2.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t0.xyzw, s0
mul r0.z, r2.w, l(0.500000)
add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r0.zzzz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, r1.xyzx, -r2.xyzx
add r0.z, -cb0[12].y, cb0[12].x
mad r0.x, r0.x, r0.z, cb0[12].y
mul_sat r0.x, r0.y, r0.x
mad r0.xyz, r0.xxxx, r1.xyzx, r2.xyzx
add r1.xyz, -r0.xyzx, cb0[16].xyzx
add r0.w, -cb0[15].x, l(1.000000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r1.w, v4.x, -cb0[15].x
mul_sat r0.w, r0.w, r1.w
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r1.xyz, v7.xyzx, -cb0[3].xyzx
mov r1.w, -r1.y
sample_indexable(texturecube)(float,float,float,float) r0.w, r1.xwzx, t1.yzwx, s1
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
mul r0.w, r0.w, cb0[4].x
add r1.y, r1.x, -cb0[6].x
lt r0.w, r1.y, r0.w
and r0.w, r0.w, l(0x3f800000)
lt r1.y, r1.x, cb0[2].x
and r1.y, r1.y, l(0x3f800000)
mul r0.w, r0.w, r1.y
mul r0.w, r0.w, cb0[5].x
div r1.y, r1.x, cb0[2].x
mad r1.y, r1.y, l(-0.300000), l(0.450000)
mul r0.w, r0.w, r1.y
mad r0.xyz, r0.wwww, cb0[1].xyzx, r0.xyzx
mul r0.w, r1.x, l(50.000000)
mov r1.y, -r0.w
deriv_rtx_coarse r0.w, r0.w
deriv_rty_coarse r1.y, r1.y
add r0.w, |r0.w|, |r1.y|
mad r1.y, r1.x, l(50.000000), l(-0.500000)
frc r1.y, r1.y
add r1.y, r1.y, l(-0.500000)
mul r1.y, |r1.y|, l(0.666667)
div r0.w, r1.y, r0.w
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
ge r1.y, r1.x, l(-0.010000)
ge r1.z, l(0.090000), r1.x
and r1.yz, r1.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r1.y, r1.z, r1.y
mul r0.w, r0.w, r1.y
mul r1.yzw, cb0[2].xxxx, l(0.000000, 0.250000, 0.125000, 1.125000)
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul r2.x, r1.x, r1.y
mad r1.y, r1.y, r1.x, l(-0.500000)
frc r1.y, r1.y
add r1.y, r1.y, l(-0.500000)
mul r1.y, |r1.y|, l(0.666667)
mov r2.y, -r2.x
deriv_rtx_coarse r2.x, r2.x
deriv_rty_coarse r2.y, r2.y
add r2.x, |r2.y|, |r2.x|
div r1.y, r1.y, r2.x
min r1.y, r1.y, l(1.000000)
add r1.y, -r1.y, l(1.000000)
ge r1.z, r1.x, -r1.z
ge r1.x, r1.w, r1.x
and r1.xz, r1.xxzx, l(0x3f800000, 0, 0x3f800000, 0)
mul r1.x, r1.x, r1.z
mad r0.w, r1.y, r1.x, r0.w
add r1.xyz, -cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r0.wwww, r1.xyzx
add r0.w, -r0.w, l(1.000000)
mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
mov r1.xy, l(0,0,0,0)
mov r2.z, l(0)
div r3.xy, cb0[0].zwzz, v2.zzzz
mov r3.z, l(0)
add r4.xyzw, r3.xzzy, v5.xyxy
add r3.xyzw, -r3.xzzy, v5.xyxy
mad r5.xyzw, v2.zwzw, r4.xyzw, v2.xyxy
sample_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t2.yzwx, s2
sample_indexable(texture2d)(float,float,float,float) r1.w, r5.zwzz, t2.yzwx, s2
mad r4.xz, v2.zzwz, v5.xxyx, v2.xxyx
sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xzxx, t2.yzwx, s2
add r4.x, -v3.x, v3.y
mad r4.z, v5.y, r4.x, v3.x
mul r2.w, r2.w, r4.z
mad r4.yz, r4.yywy, r4.xxxx, v3.xxxx
mad r4.xw, r3.yyyw, r4.xxxx, v3.xxxx
mad r3.xyzw, v2.zwzw, r3.xyzw, v2.xyxy
mad r0.w, r0.w, r4.y, -r2.w
mad r1.w, r1.w, r4.z, -r2.w
mul r4.yz, cb0[7].xxyx, l(0.000000, 0.003906, 0.003906, 0.000000)
mul r2.x, r0.w, -r4.z
mul r5.x, r0.w, r4.z
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.zwzz, t2.yzwx, s2
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t2.xyzw, s2
mad r3.x, r3.x, r4.x, -r2.w
mad r0.w, r0.w, r4.w, -r2.w
mul r2.y, r4.y, r0.w
mul r6.y, r0.w, -r4.y
mul r1.z, r4.y, -r4.z
add r1.xyz, -r1.xyzx, r2.xyzx
mul r6.x, -r4.z, r3.x
mul r2.x, r3.x, r4.z
mov r3.xy, l(0,0,0,0)
mov r6.z, l(0)
mul r3.z, r4.z, r4.y
add r3.xyz, r3.xyzx, -r6.xyzx
add r1.xyz, r1.xyzx, r3.xyzx
mul r5.y, r1.w, r4.y
mul r2.y, r1.w, -r4.y
mov r3.xy, l(0,0,0,0)
mov r5.z, l(0)
mul r3.z, r4.z, r4.y
mul r4.z, -r4.y, r4.z
add r3.xyz, r3.xyzx, -r5.xyzx
add r1.xyz, r1.xyzx, r3.xyzx
mov r4.xy, l(0,0,0,0)
mov r2.z, l(0)
add r2.xyz, r2.xyzx, -r4.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, -v7.xyzx, -v7.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -v7.xyzx
max r0.w, r2.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r3.z, r0.w, l(0.200000)
mul r3.xy, r2.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
dp3 r0.w, r1.xyzx, r3.xyzx
mul r1.xyw, r1.xyxz, r0.wwww
max r0.w, r1.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mad r0.w, r0.w, l(1.800000), l(0.100000)
mad r1.xyz, r1.xywx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r1.x, r1.xyzx, r2.xyzx
log r1.x, r1.x
mul r1.x, r1.x, cb0[8].y
exp r1.x, r1.x
mul r1.x, r1.x, cb0[8].x
mul r0.w, r0.w, r1.x
add r1.x, -v7.z, l(-5.000000)
mul_sat r1.x, r1.x, l(0.010000)
mad o0.xyz, r0.wwww, r1.xxxx, r0.xyzx
mov o0.w, l(0)
div r0.x, v6.z, v6.w
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul o1.x, r0.y, l(0.003906)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul r0.x, r0.x, l(256.000000)
round_ni r0.x, r0.x
mul o1.yz, r0.yyxy, l(0.000000, 0.003906, 0.003906, 0.000000)
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 