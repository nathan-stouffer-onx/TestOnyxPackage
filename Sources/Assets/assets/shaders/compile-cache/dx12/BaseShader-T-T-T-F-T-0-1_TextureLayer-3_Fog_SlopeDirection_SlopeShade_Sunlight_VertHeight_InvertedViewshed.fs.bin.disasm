//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    4   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xy  
// TEXCOORD                 3   xyzw        6     NONE   float   xyz 
// TEXCOORD                 4   xyzw        7     NONE   float   x   
// TEXCOORD                 5   xyzw        8     NONE   float   xy  
// TEXCOORD                 6   xyzw        9     NONE   float     zw
// TEXCOORD                 7   xyzw       10     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texturecube (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.x
dcl_input_ps linear v8.xy
dcl_input_ps linear v9.zw
dcl_input_ps linear v10.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
div r0.xy, cb0[0].zwzz, v1.zzzz
mov r0.z, l(0)
add r1.xyzw, -r0.xzzy, v8.xyxy
add r0.xyzw, r0.xzzy, v8.xyxy
mad r2.xy, v1.zwzz, v8.xyxx, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t3.xyzw, s3
add r2.y, -v3.x, v3.y
mad r2.z, v8.y, r2.y, v3.x
mul r2.x, r2.z, r2.x
mad r3.xyzw, v1.zwzw, r1.xyzw, v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.x, r3.xyxx, t3.xyzw, s3
mad r1.yz, r1.yywy, r2.yyyy, v3.xxxx
mad r1.x, r1.x, r1.y, -r2.x
mad r4.xyzw, v1.zwzw, r0.xyzw, v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r0.x, r4.xyxx, t3.xyzw, s3
mad r0.yz, r0.yywy, r2.yyyy, v3.xxxx
mad r0.x, r0.x, r0.y, -r2.x
sample_indexable(texture2d)(float,float,float,float) r0.y, r3.zwzz, t3.yxzw, s3
mad r0.y, r0.y, r1.z, -r2.x
sample_indexable(texture2d)(float,float,float,float) r0.w, r4.zwzz, t3.yzwx, s3
mad r0.z, r0.w, r0.z, -r2.x
mul r1.yz, cb0[6].xxyx, l(0.000000, 0.003906, 0.003906, 0.000000)
mov r2.xy, l(0,0,0,0)
mul r2.z, r1.z, r1.y
mul r3.x, -r1.z, r1.x
mul r3.y, r0.y, -r1.y
mov r3.z, l(0)
add r2.xyz, r2.xyzx, -r3.xyzx
mul r3.x, r0.x, -r1.z
mul r3.y, r0.y, r1.y
mov r4.xy, l(0,0,0,0)
mul r4.z, r1.y, -r1.z
mov r3.z, l(0)
add r3.xyz, r3.xyzx, -r4.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mov r3.xy, l(0,0,0,0)
mul r3.z, r1.z, r1.y
mul r4.x, r0.x, r1.z
mul r4.y, r0.z, r1.y
mov r4.z, l(0)
add r0.xyw, r3.xyxz, -r4.xyxz
add r0.xyw, r0.xyxw, r2.xyxz
mul r2.x, r1.x, r1.z
mul r2.y, r0.z, -r1.y
mov r3.xy, l(0,0,0,0)
mul r3.z, -r1.y, r1.z
mov r2.z, l(0)
add r1.xyz, r2.xyzx, -r3.xyzx
add r0.xyz, r0.xywx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r1.xy, v8.xyxx, cb0[16].zwzz, cb0[16].xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t6.xyzw, s6
add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r1.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r2.xy, v8.xyxx, cb0[17].zwzz, cb0[17].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t7.xyzw, s7
add r2.xyz, -r1.xyzx, r2.xyzx
mad r1.xyz, r2.wwww, r2.xyzx, r1.xyzx
add r0.w, r1.w, r2.w
mad r2.xy, v8.xyxx, cb0[18].zwzz, cb0[18].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t8.xyzw, s8
add r2.xyz, -r1.xyzx, r2.xyzx
mad r1.xyz, r2.wwww, r2.xyzx, r1.xyzx
add r2.w, r0.w, r2.w
min r0.w, |r0.x|, |r0.y|
max r1.w, |r0.x|, |r0.y|
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, r0.w
mad r3.x, r1.w, l(0.020835), l(-0.085133)
mad r3.x, r1.w, r3.x, l(0.180141)
mad r3.x, r1.w, r3.x, l(-0.330299)
mad r1.w, r1.w, r3.x, l(0.999866)
mul r3.x, r0.w, r1.w
lt r3.y, |r0.x|, |r0.y|
mad r3.x, r3.x, l(-2.000000), l(1.570796)
and r3.x, r3.y, r3.x
mad r0.w, r0.w, r1.w, r3.x
lt r3.xy, r0.xzxx, -r0.xzxx
and r1.w, r3.x, l(0xc0490fdb)
add r0.w, r0.w, r1.w
min r1.w, r0.x, -r0.y
max r3.x, r0.x, -r0.y
lt r1.w, r1.w, -r1.w
ge r3.x, r3.x, -r3.x
and r1.w, r1.w, r3.x
movc r0.w, r1.w, -r0.w, r0.w
add r0.w, r0.w, l(-1.570796)
lt r1.w, r0.w, l(0.000000)
and r1.w, r1.w, l(0x40c90fdb)
add r0.w, r0.w, r1.w
add r0.w, -r0.w, l(6.283185)
mul r4.x, r0.w, l(0.159155)
mov r4.yw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t1.xyzw, s1
mul r0.w, r5.w, l(0.500000)
add r3.xzw, -r1.xxyz, r5.xxyz
mad r2.xyz, r0.wwww, r3.xzwx, r1.xyzx
add r0.w, v5.x, l(-0.500000)
mul r0.w, r0.w, l(6.283185)
add r1.x, -v5.y, l(0.500000)
mul r1.x, r1.x, l(3.141593)
sincos r1.x, r3.x, r1.x
sincos r4.x, r5.x, r0.w
mul r5.x, r3.x, r5.x
mul r5.y, r3.x, r4.x
mov r5.z, r1.x
mul r1.xyz, r5.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r1.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r1.xyzx
dp2 r0.w, r1.xyxx, r1.xyxx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mul r3.xzw, r1.xxyz, r5.zzxy
mad r3.xzw, r5.yyzx, r1.yyzx, -r3.xxzw
dp3 r0.w, r3.xzwx, r3.xzwx
rsq r0.w, r0.w
mul r3.xzw, r0.wwww, r3.xxzw
dp2 r0.w, r1.xyxx, v6.yzyy
mov r1.x, -r0.w
dp3 r0.w, r3.xzwx, v6.xyzx
mov r1.y, -r0.w
dp3 r1.z, r5.xyzx, v6.xyzx
dp3_sat r0.w, r1.xyzx, r0.xyzx
add r1.xyz, r0.xyzx, r0.xyzx
mad r3.xzw, r0.xxyz, l(2.000000, 0.000000, 2.000000, 2.000000), l(-1.000000, 0.000000, -1.000000, -1.000000)
dp3 r1.w, r3.xzwx, l(0.192450, 0.192450, 0.962250, 0.000000)
mul r3.x, cb0[9].x, l(0.500000)
mad r5.xyz, r1.wwww, l(0.750000, 0.790000, 1.000000, 0.000000), -r0.wwww
mad r5.xyz, r3.xxxx, r5.xyzx, r0.wwww
mov r5.w, l(1.000000)
add r5.xyzw, -r2.xyzw, r5.xyzw
mad r2.xyzw, cb0[8].xxxx, r5.xyzw, r2.xyzw
div r3.xz, v4.xxyx, v4.wwww
mad r3.xz, r3.xxzx, l(0.500000, 0.000000, 0.500000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xzw, r3.xzxx, t5.xwyz, s5
lt r0.w, l(0.500000), cb0[13].x
if_z r0.w
  add r0.w, v4.z, -cb0[10].x
  ge r1.w, r3.x, r0.w
  and r1.w, r1.w, l(0x3f800000)
  mad r4.x, -r3.x, r3.x, r3.z
  max r4.x, r4.x, cb0[12].x
  add r0.w, -r3.x, r0.w
  mad r0.w, r0.w, r0.w, r4.x
  div r0.w, r4.x, r0.w
  add r0.w, r0.w, -cb0[12].y
  add r4.x, -cb0[12].y, l(1.000000)
  div_sat r0.w, r0.w, r4.x
  max r0.w, r0.w, r1.w
  add r5.xyz, -r2.xyzx, r0.wwww
  mad r3.xzw, cb0[11].xxxx, r5.xxyz, r2.xxyz
endif 
add r0.w, -|r0.z|, l(1.000000)
sqrt r0.w, r0.w
mad r1.w, |r0.z|, l(-0.018729), l(0.074261)
mad r1.w, r1.w, |r0.z|, l(-0.212114)
mad r1.w, r1.w, |r0.z|, l(1.570729)
mul r2.x, r0.w, r1.w
mad r2.x, r2.x, l(-2.000000), l(3.141593)
and r2.x, r3.y, r2.x
mad r0.w, r1.w, r0.w, r2.x
mul r4.z, r0.w, l(0.636620)
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.zwzz, t0.xyzw, s0
mul r0.w, r4.w, l(0.500000)
add r2.xyz, -r3.xzwx, r4.xyzx
mad r2.xyz, r0.wwww, r2.xyzx, r3.xzwx
add r0.w, -cb0[14].x, l(1.000000)
add r1.w, v7.x, -cb0[14].x
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul_sat r0.w, r0.w, r1.w
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
add r3.xyz, -r2.xyzx, cb0[15].xyzx
mad r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
add r3.xyz, v10.xyzx, -cb0[3].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
sqrt r0.w, r0.w
add r1.w, r0.w, -cb0[5].x
mov r3.w, -r3.y
sample_indexable(texturecube)(float,float,float,float) r3.x, r3.xwzx, t2.xyzw, s2
mul r3.x, r3.x, cb0[4].x
lt r3.y, r0.w, cb0[2].x
and r3.y, r3.y, l(0x3f800000)
lt r1.w, r1.w, r3.x
and r1.w, r1.w, l(0x3f800000)
mul r3.x, r3.y, r1.w
add r3.z, r2.y, r2.x
add r3.z, r2.z, r3.z
mul r3.z, r3.z, l(0.233333)
mad r1.w, -r1.w, r3.y, l(1.000000)
mul r1.w, r3.z, r1.w
mad r2.xyz, r3.xxxx, r2.xyzx, r1.wwww
mul r3.xyz, cb0[2].xxxx, l(0.250000, 0.125000, 1.125000, 0.000000)
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mul r3.x, r0.w, r1.w
deriv_rtx_coarse r3.w, r3.x
mov r3.x, -r3.x
deriv_rty_coarse r3.x, r3.x
add r3.x, |r3.x|, |r3.w|
mad r1.w, r1.w, r0.w, l(-0.500000)
frc r1.w, r1.w
add r1.w, r1.w, l(-0.500000)
mul r1.w, |r1.w|, l(0.666667)
div r1.w, r1.w, r3.x
min r1.w, r1.w, l(1.000000)
add r1.w, -r1.w, l(1.000000)
ge r3.x, r0.w, -r3.y
ge r3.y, r3.z, r0.w
and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r3.x, r3.y, r3.x
mul r3.y, r0.w, l(50.000000)
deriv_rtx_coarse r3.z, r3.y
mov r3.y, -r3.y
deriv_rty_coarse r3.y, r3.y
add r3.y, |r3.y|, |r3.z|
mad r3.z, r0.w, l(50.000000), l(-0.500000)
frc r3.z, r3.z
add r3.z, r3.z, l(-0.500000)
mul r3.z, |r3.z|, l(0.666667)
div r3.y, r3.z, r3.y
min r3.y, r3.y, l(1.000000)
add r3.y, -r3.y, l(1.000000)
ge r3.z, r0.w, l(-0.010000)
and r3.z, r3.z, l(0x3f800000)
ge r0.w, l(0.090000), r0.w
and r0.w, r0.w, l(0x3f800000)
mul r0.w, r0.w, r3.z
mul r0.w, r0.w, r3.y
mad r0.w, r1.w, r3.x, r0.w
add r3.xyz, -cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.w, -r0.w, l(1.000000)
mul r3.xyz, r0.wwww, r3.xyzx
mad r2.xyz, r1.wwww, r2.xyzx, r3.xyzx
div r0.w, v9.z, v9.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r1.w, r0.w, l(256.000000)
round_ni r1.w, r1.w
mad r0.w, r0.w, l(256.000000), -r1.w
mul r3.x, r0.w, l(256.000000)
round_ni r3.x, r3.x
mad r0.w, r0.w, l(256.000000), -r3.x
mul r0.w, r0.w, l(256.000000)
round_ni r0.w, r0.w
mul o1.x, r1.w, l(0.003906)
mul o1.y, r3.x, l(0.003906)
mul o1.z, r0.w, l(0.003906)
dp3 r0.w, -v10.xyzx, -v10.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, -v10.xyzx
max r0.w, r3.z, l(0.000000)
mul r4.xy, r3.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r4.z, r0.w, l(0.200000)
dp3 r0.x, r0.xyzx, r4.xyzx
mad r0.xyw, r1.xyxz, r0.xxxx, -r4.xyxz
dp3 r1.x, r0.xywx, r0.xywx
rsq r1.x, r1.x
mul r0.xyw, r0.xyxw, r1.xxxx
dp3_sat r0.x, r0.xywx, r3.xyzx
max r0.y, r0.z, l(0.000000)
add r0.y, -r0.y, l(1.000000)
add r0.z, -v10.z, l(-5.000000)
mul_sat r0.z, r0.z, l(0.010000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[7].y
exp r0.x, r0.x
mul r0.x, r0.x, cb0[7].x
mad r0.y, r0.y, l(1.800000), l(0.100000)
mul r0.x, r0.y, r0.x
mad o0.xyz, r0.xxxx, r0.zzzz, r2.xyzx
mov o0.w, r2.w
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 