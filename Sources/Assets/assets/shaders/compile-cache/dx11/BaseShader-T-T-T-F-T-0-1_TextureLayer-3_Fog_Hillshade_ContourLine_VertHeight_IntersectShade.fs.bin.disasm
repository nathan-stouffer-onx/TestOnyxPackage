//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float     zw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[25], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.zw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
mul r0.x, cb0[1].z, l(0.500000)
div r0.y, r0.x, v2.z
mov r0.xw, l(0,0,0,0)
add r1.xyzw, r0.yxxy, v5.xyxy
mad r2.xyzw, v2.zwzw, r1.xyzw, v2.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r2.xyxx, t3.xyzw, s3, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r2.zwzz, t3.yzxw, s3, l(0.000000)
add r2.x, -v3.x, v3.y
mad r1.yw, r1.yyyw, r2.xxxx, v3.xxxx
mul r1.x, r1.y, r1.x
mul r1.y, r1.w, r1.z
add r3.xyzw, -r0.yxxy, v5.xyxy
dp2 r4.z, r0.yyyy, cb0[5].xxxx
mad r5.xyzw, v2.zwzw, r3.xyzw, v2.xyxy
mad r0.xy, r3.ywyy, r2.xxxx, v3.xxxx
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r5.xyxx, t3.yzxw, s3, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r5.zwzz, t3.yzwx, s3, l(0.000000)
mad r4.y, r1.w, r0.y, -r1.y
mad r4.x, r1.z, r0.x, -r1.x
dp3 r0.x, r4.xyzx, r4.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r4.xyzx
max r0.x, |r1.x|, |r1.y|
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min r0.y, |r1.x|, |r1.y|
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, r0.x
mad r1.w, r0.y, l(0.020835), l(-0.085133)
mad r1.w, r0.y, r1.w, l(0.180141)
mad r1.w, r0.y, r1.w, l(-0.330299)
mad r0.y, r0.y, r1.w, l(0.999866)
mul r1.w, r0.y, r0.x
mad r1.w, r1.w, l(-2.000000), l(1.570796)
lt r2.x, |r1.x|, |r1.y|
and r1.w, r1.w, r2.x
mad r0.x, r0.x, r0.y, r1.w
lt r2.xy, r1.zxzz, -r1.zxzz
and r0.y, r2.y, l(0xc0490fdb)
add r0.x, r0.y, r0.x
min r0.y, r1.x, -r1.y
lt r0.y, r0.y, -r0.y
max r1.w, r1.x, -r1.y
ge r1.w, r1.w, -r1.w
and r0.y, r0.y, r1.w
movc r0.x, r0.y, -r0.x, r0.x
add r0.x, r0.x, l(-1.570796)
lt r0.y, r0.x, l(0.000000)
and r0.y, r0.y, l(0x40c90fdb)
add r0.x, r0.y, r0.x
add r0.x, -r0.x, l(6.283185)
mul r0.x, r0.x, l(0.159155)
mov r0.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s2
mad r0.y, |r1.z|, l(-0.018729), l(0.074261)
mad r0.y, r0.y, |r1.z|, l(-0.212114)
mad r0.y, r0.y, |r1.z|, l(1.570729)
add r1.w, -|r1.z|, l(1.000000)
sqrt r1.w, r1.w
mul r2.y, r0.y, r1.w
mad r2.y, r2.y, l(-2.000000), l(3.141593)
and r2.x, r2.x, r2.y
mad r0.y, r0.y, r1.w, r2.x
mul r0.z, r0.y, l(0.636620)
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.zwzz, t1.yxzw, s1
add r0.z, -cb0[4].x, cb0[4].y
ne r0.w, cb0[4].y, cb0[4].x
movc r1.w, r0.w, l(-1.000000), l(-0.000000)
and r0.w, r0.w, l(0x3f800000)
mad r0.z, r0.w, r0.z, r1.w
add r0.z, r0.z, l(1.000000)
add r1.w, v7.w, -cb0[4].x
div r0.z, r1.w, r0.z
mul r0.z, r0.z, r0.w
mul r0.z, r0.z, cb0[0].x
mul r0.z, r0.z, cb0[0].y
div r2.xy, r0.zzzz, cb0[0].xyxx
round_ni r2.yz, r2.xxyx
mad r2.x, -cb0[0].x, r2.y, r0.z
div r0.zw, r2.xxxz, cb0[0].xxxy
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t0.yzxw, s0
mul r0.y, r0.y, r0.z
mad r0.x, -r0.y, r0.x, cb0[3].x
mul r0.x, |r0.x|, cb0[2].w
mad r0.y, -cb0[7].x, l(0.500000), cb0[7].y
ge r0.y, v7.w, r0.y
mad r0.z, cb0[7].x, l(0.500000), cb0[7].z
ge r0.z, r0.z, v7.w
and r0.yz, r0.yyzy, l(0, 0x3f800000, 0x3f800000, 0)
mul r0.y, r0.z, r0.y
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[7].x
mul r0.w, r0.z, v7.w
mad r0.z, r0.z, v7.w, l(-0.500000)
frc r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
mov r1.w, -r0.w
deriv_rtx_coarse r0.w, r0.w
deriv_rty_coarse r1.w, r1.w
add r0.w, |r0.w|, |r1.w|
dp4 r1.w, v7.xyzw, v7.xyzw
sqrt r1.w, r1.w
max r2.x, cb0[24].z, l(1.500000)
div r1.w, r2.x, r1.w
min r1.w, r1.w, l(1.000000)
mul r2.x, r1.w, cb0[7].w
mul r1.w, r1.w, cb0[9].w
max r2.y, r2.x, l(1.500000)
min r2.x, r2.x, l(1.000000)
mul r2.x, r2.x, cb0[8].w
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
mul r0.z, |r0.z|, r2.y
div r0.z, r0.z, r0.w
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mad r0.y, r0.z, r0.y, l(0.500000)
mul r0.z, r0.y, r0.y
mad_sat r0.y, r0.y, r0.z, l(-0.500000)
dp3 r0.z, v7.xyzx, v7.xyzx
sqrt r0.z, r0.z
add r0.z, r0.z, -cb0[11].x
add r0.w, -cb0[11].x, cb0[11].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul_sat r0.z, r0.w, r0.z
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mad r0.z, -r0.w, r0.z, l(1.000000)
mul r0.y, r0.z, r0.y
mul r3.xy, r1.xyxx, cb0[14].yyyy
mov r3.z, r1.z
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r3.xxyz
dp3 r0.w, r2.yzwy, -cb0[12].xyzx
add r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, l(0.500000)
add r2.y, -cb0[14].x, l(1.000000)
mad r0.w, r2.y, r0.w, cb0[14].x
mad r2.yz, v5.xxyx, cb0[17].zzwz, cb0[17].xxyx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.yzyy, t4.xyzw, s4
mul r2.y, r4.w, cb0[18].x
add r3.xyw, r4.xyxz, -cb0[23].xyxz
max r2.z, r4.w, cb0[23].w
mad r3.xyw, r2.yyyy, r3.xyxw, cb0[23].xyxz
mad r2.yw, v5.xxxy, cb0[19].zzzw, cb0[19].xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.ywyy, t5.xyzw, s5
add r4.xyz, -r3.xywx, r4.xyzx
mul r2.y, r4.w, cb0[20].x
max r2.z, r2.z, r4.w
mad r3.xyw, r2.yyyy, r4.xyxz, r3.xyxw
mad r2.yw, v5.xxxy, cb0[21].zzzw, cb0[21].xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r2.ywyy, t6.xyzw, s6
add r4.xyz, -r3.xywx, r4.xyzx
mul r2.y, r4.w, cb0[22].x
max o0.w, r2.z, r4.w
mad r2.yzw, r2.yyyy, r4.xxyz, r3.xxyw
mad r3.xyw, r0.wwww, cb0[13].xyxz, -r2.yzyw
mad r2.yzw, cb0[13].wwww, r3.xxyw, r2.yyzw
add r3.xyw, -r2.yzyw, cb0[8].xyxz
mul r3.xyw, r2.xxxx, r3.xyxw
mad r2.xyz, r0.yyyy, r3.xywx, r2.yzwy
add r3.xyw, -r2.xyxz, cb0[10].xyxz
min r0.y, r1.w, l(1.000000)
max r0.w, r1.w, l(1.500000)
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.y, r0.y, cb0[10].w
mul r3.xyw, r3.xyxw, r0.yyyy
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[9].x
mad r1.w, r0.y, v7.w, l(-0.500000)
mul r0.y, r0.y, v7.w
frc r1.w, r1.w
add r1.w, r1.w, l(-0.500000)
mul r0.w, r0.w, |r1.w|
mov r1.w, -r0.y
deriv_rtx_coarse r0.y, r0.y
deriv_rty_coarse r1.w, r1.w
add r0.y, |r0.y|, |r1.w|
div r0.y, r0.w, r0.y
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mad r0.w, -cb0[9].x, l(0.500000), cb0[9].y
ge r0.w, v7.w, r0.w
and r0.w, r0.w, l(0x3f800000)
mad r1.w, cb0[9].x, l(0.500000), cb0[9].z
ge r1.w, r1.w, v7.w
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
mad r0.y, r0.y, r0.w, l(0.500000)
mul r0.w, r0.y, r0.y
mad_sat r0.y, r0.y, r0.w, l(-0.500000)
mul r0.y, r0.z, r0.y
mad r0.yzw, r0.yyyy, r3.xxyw, r2.xxyz
add r1.w, r0.z, r0.y
add r1.w, r0.w, r1.w
mul r1.w, r1.w, l(0.333333)
mad r2.xyz, r1.wwww, cb0[2].xyzx, -r0.yzwy
mad r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
add r2.xyz, -r0.xyzx, cb0[16].xyzx
add r0.w, -cb0[15].x, cb0[15].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r1.w, v4.x, -cb0[15].x
mul_sat r0.w, r0.w, r1.w
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mul r0.w, r0.w, cb0[16].w
mad r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
dp3 r0.w, -v7.xyzx, -v7.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -v7.xyzx
max r0.w, r2.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r4.z, r0.w, l(0.200000)
mul r4.xy, r2.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
dp3 r0.w, r1.xyzx, r4.xyzx
mul r1.xyz, r1.xyzx, r0.wwww
max r0.w, r3.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mad r0.w, r0.w, l(1.800000), l(0.100000)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r1.x, r1.xyzx, r2.xyzx
log r1.x, r1.x
mul r1.x, r1.x, cb0[6].y
exp r1.x, r1.x
mul r1.x, r1.x, cb0[6].x
mul r0.w, r0.w, r1.x
add r1.x, -v7.z, l(-5.000000)
mul_sat r1.x, r1.x, l(0.010000)
mad o0.xyz, r0.wwww, r1.xxxx, r0.xyzx
div r0.x, v6.z, v6.w
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul o1.x, r0.y, l(0.003906)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul r0.x, r0.x, l(256.000000)
round_ni r0.x, r0.x
mul o1.yz, r0.yyxy, l(0.000000, 0.003906, 0.003906, 0.000000)
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 