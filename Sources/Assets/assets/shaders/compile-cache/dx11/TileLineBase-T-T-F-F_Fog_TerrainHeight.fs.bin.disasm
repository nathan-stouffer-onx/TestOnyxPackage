//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// BINORMAL                 0   xyz         1     NONE   float   xy  
// FOG                      0      w        1     NONE   float      w
// COLOR                    0   xyzw        2     NONE   float   xyzw
// COLOR                    1   xyzw        3     NONE   float   x   
// COLOR                    2   xyzw        4     NONE   float   x   
// COLOR                    3   xyzw        5     NONE   float   xy  
// COLOR                    4   xyzw        6     NONE   float   xy  
// TANGENT                  0   xyz         7     NONE   float       
// TEXCOORD                 0   xyzw        8     NONE   float   xyzw
// TEXCOORD                 1   xyzw        9     NONE   float   xyzw
// TEXCOORD                 2   xyzw       10     NONE   float   xyzw
// TEXCOORD                 3   xyzw       11     NONE   float   xyz 
// TEXCOORD                 4   xyzw       12     NONE   float       
// TEXCOORD                 5   xyzw       13     NONE   float   xy  
// TEXCOORD                 6   xyzw       14     NONE   float       
// TEXCOORD                 7   xyzw       15     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.x
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xy
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xyzw
dcl_input_ps linear v10.xyzw
dcl_input_ps linear v11.xyz
dcl_input_ps linear v13.xy
dcl_input_ps linear v15.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 7
ge r0.xy, v15.xyxx, cb0[4].xyxx
ge r0.zw, cb0[4].zzzw, v15.xxxy
and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r0.xy, r0.zwzz, r0.xyxx
mul r0.x, r0.y, r0.x
eq r0.x, r0.x, l(0.000000)
discard_nz r0.x
add r0.xyzw, -v8.xyzw, v13.xyxy
dp2 r1.x, r0.xyxx, r0.xyxx
rsq r1.x, r1.x
mul r0.xy, r0.xyxx, r1.xxxx
dp2 r1.x, r0.zwzz, r0.zwzz
rsq r1.x, r1.x
mul r0.zw, r0.zzzw, r1.xxxx
mul r1.xyzw, v10.yxwz, l(-1.000000, 1.000000, -1.000000, 1.000000)
dp2 r2.x, r1.xyxx, v1.xyxx
lt r2.y, l(0.000000), r2.x
lt r2.x, r2.x, l(0.000000)
iadd r2.x, -r2.y, r2.x
dp2 r2.y, r1.zwzz, -v1.xyxx
lt r2.z, l(0.000000), r2.y
lt r2.y, r2.y, l(0.000000)
iadd r2.y, -r2.z, r2.y
itof r2.xy, r2.xyxx
dp2 r0.x, r0.xyxx, r1.xyxx
mul r0.x, r0.x, -r2.x
dp2 r0.y, r0.zwzz, r1.zwzz
mul r0.y, r0.y, r2.y
mul r0.xy, r0.xyxx, |v10.xzxx|
lt r0.x, l(0.000000), r0.x
lt r0.zw, l(0.000000, 0.000000, -9999.000000, -9999.000000), v5.xxxy
lt r0.y, r0.y, l(0.000000)
and r0.xy, r0.zwzz, r0.xyxx
or r0.x, r0.y, r0.x
discard_nz r0.x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[0].y
mad r0.y, r0.x, l(0.500000), v1.w
max r0.w, v9.y, v9.x
add r0.w, r0.w, v9.z
add r0.w, r0.w, v9.w
add r1.x, r0.w, l(2.000000)
mul r1.x, r1.x, l(0.500000)
mul r1.yzw, v9.xxwy, l(0.000000, 0.500000, 0.500000, 0.500000)
div r1.yzw, r1.yyzw, r1.xxxx
min r2.xy, r1.ywyy, l(0.000000, 0.000000, 0.000000, 0.000000)
div r2.z, v11.z, |v11.z|
lt r2.w, |v11.z|, l(0.000100)
movc r2.z, r2.w, l(1.000000), r2.z
mad r2.w, -v11.z, l(0.500000), v11.y
mul r2.w, r2.w, r2.z
mul r2.z, r2.z, v11.x
add r3.xy, -r1.ywyy, |r2.zzzz|
add r3.xy, r2.xyxx, r3.xyxx
mad r3.z, -|v11.z|, l(0.500000), |r2.w|
add r4.xy, -r1.ywyy, r3.zzzz
add r4.xy, r2.xyxx, r4.xyxx
max r5.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
max r5.zw, r3.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
dp2 r3.w, r5.xzxx, r5.xzxx
sqrt r3.w, r3.w
add r2.x, -r2.x, r3.w
max r3.xy, r3.xyxx, r4.xyxx
min r2.x, r2.x, r3.x
add r3.xw, r1.yyyw, r1.yyyw
div r4.xy, r2.wwww, r3.xwxx
mad r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
frc r4.xy, r4.xyxx
add r4.xy, r4.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r4.xy, |r4.xyxx|, l(2.000000, 2.000000, 0.000000, 0.000000), l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r3.xw, r4.xxxy, r3.xxxw, l(-10000.000000, 0.000000, 0.000000, -10000.000000)
max r2.x, r2.x, r3.x
dp2 r3.x, -v11.xyxx, -v11.xyxx
sqrt r3.x, r3.x
add r4.xy, -r1.ywyy, r3.xxxx
mov r6.x, v11.z
mov r6.y, l(0)
add r4.zw, r6.xxxy, -v11.yyyx
dp2 r4.z, r4.zwzz, r4.zwzz
sqrt r4.z, r4.z
add r5.xz, -r1.yywy, r4.zzzz
lt r1.y, l(0.000000), v11.y
lt r4.w, v11.y, l(0.000000)
iadd r1.y, r1.y, -r4.w
itof r1.y, r1.y
max r1.y, r1.y, l(0.000000)
add r4.w, -v11.z, v11.y
lt r6.x, l(0.000000), r4.w
lt r4.w, r4.w, l(0.000000)
iadd r4.w, -r6.x, r4.w
itof r4.w, r4.w
max r4.w, r4.w, l(0.000000)
add r1.y, r1.y, r4.w
min r4.xy, r4.xyxx, r5.xzxx
add r4.x, -r2.x, r4.x
mad r2.x, r1.y, r4.x, r2.x
deriv_rtx_coarse r6.x, r2.x
mov r4.x, -r2.x
deriv_rty_coarse r6.y, r4.x
dp2 r4.x, r6.xyxx, r6.xyxx
sqrt r4.x, r4.x
div r2.x, r2.x, r4.x
add_sat r2.x, -r2.x, l(0.500000)
mul r0.w, r0.w, l(0.500000)
div r0.w, r0.w, r1.x
min r1.x, r0.w, l(0.000000)
add r2.z, -r0.w, |r2.z|
add r2.z, r1.x, r2.z
add r3.z, -r0.w, r3.z
add r3.z, r1.x, r3.z
max r6.x, r3.z, l(0.000000)
max r6.y, r2.z, l(0.000000)
dp2 r4.x, r6.xyxx, r6.xyxx
sqrt r4.x, r4.x
add r1.x, -r1.x, r4.x
max r2.z, r2.z, r3.z
min r1.x, r1.x, r2.z
add r2.z, r0.w, r0.w
div r2.w, r2.w, r2.z
mad r2.w, r2.w, l(0.500000), l(0.500000)
frc r2.w, r2.w
add r2.w, r2.w, l(-0.500000)
mad r2.w, |r2.w|, l(2.000000), l(-0.500000)
mad r2.z, r2.w, r2.z, l(-10000.000000)
max r1.x, r1.x, r2.z
add r2.z, -r0.w, r3.x
add r0.w, -r0.w, r4.z
min r0.w, r0.w, r2.z
add r0.w, -r1.x, r0.w
mad r0.w, r1.y, r0.w, r1.x
mad r0.w, r1.z, l(0.500000), r0.w
mad r0.w, -r1.z, l(0.500000), |r0.w|
deriv_rtx_coarse r6.x, r0.w
mov r1.x, -r0.w
deriv_rty_coarse r6.y, r1.x
dp2 r1.x, r6.xyxx, r6.xyxx
sqrt r1.x, r1.x
div r0.w, r0.w, r1.x
add_sat r0.w, -r0.w, l(0.500000)
lt r1.x, l(0.000000), r1.z
lt r1.z, r1.z, l(0.000000)
iadd r1.x, -r1.x, r1.z
imax r1.x, -r1.x, r1.x
itof r1.x, r1.x
mul r1.z, r0.w, r1.x
mov r0.z, l(0)
sample_indexable(texture2d)(float,float,float,float) r0.z, r0.zyzz, t1.yzxw, s1
add r2.z, cb0[0].x, l(-1.000000)
mad r0.z, r0.z, r2.z, l(0.500000)
round_ni r0.z, r0.z
add r2.z, -v6.x, v6.y
add r3.xz, -v8.zzwz, v8.xxyx
dp2 r2.w, r3.xzxx, r3.xzxx
sqrt r2.w, r2.w
div r2.z, r2.w, r2.z
mul r2.w, r1.w, v11.y
mad r2.z, v6.x, r2.z, r2.w
div r1.w, r2.z, r1.w
mad r1.w, cb0[3].x, l(0.002000), r1.w
div r2.z, r1.w, r0.z
round_ni r2.z, r2.z
mad r0.z, -r0.z, r2.z, r1.w
add r0.z, r0.z, l(1.000000)
div r0.x, r0.z, cb0[0].x
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t1.xyzw, s1
dp2 r0.y, r5.ywyy, r5.ywyy
sqrt r0.y, r0.y
add r0.y, -r2.y, r0.y
min r0.y, r3.y, r0.y
max r0.y, r3.w, r0.y
add r0.z, -r0.y, r4.y
mad r0.y, r1.y, r0.z, r0.y
mul r0.x, r0.x, r0.y
mul_sat r0.x, r0.x, l(-100.000000)
add r0.y, r2.x, r0.x
mad r0.y, r0.w, r1.x, r0.y
min r0.y, r0.y, l(1.000000)
mad r1.xyw, r0.xxxx, l(1.000000, 0.000000, 0.000000, 0.000000), -v2.xyxz
mad r0.xzw, r0.xxxx, r1.xxyw, v2.xxyz
add r1.xyw, -r0.xzxw, l(0.000000, 0.000000, 0.000000, 1.000000)
mad r0.xzw, r1.zzzz, r1.xxyw, r0.xxzw
add r1.x, -cb0[1].x, cb0[1].y
add r1.y, v3.x, -cb0[1].x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r1.x, r1.x, r1.y
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
add r1.yzw, -r0.xxzw, cb0[2].xxyz
mad o0.xyz, r1.xxxx, r1.yzwy, r0.xzwx
mul r0.x, r0.y, v2.w
mul r0.x, r0.x, cb0[5].x
mul o0.w, r0.x, v4.x
mov o1.xyzw, l(0,0,0,0)
ret 
// Approximately 0 instruction slots used
 