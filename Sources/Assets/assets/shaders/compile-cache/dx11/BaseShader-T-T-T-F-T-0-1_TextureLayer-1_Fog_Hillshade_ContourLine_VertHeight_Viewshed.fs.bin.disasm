//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float     zw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[24], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texturecube (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.zw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
mad r0.x, -cb0[10].x, l(0.500000), cb0[10].y
ge r0.x, v7.w, r0.x
mad r0.y, cb0[10].x, l(0.500000), cb0[10].z
ge r0.y, r0.y, v7.w
and r0.xy, r0.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r0.x, r0.y, r0.x
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[10].x
mul r0.z, r0.y, v7.w
mad r0.y, r0.y, v7.w, l(-0.500000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mov r0.w, -r0.z
deriv_rtx_coarse r0.z, r0.z
deriv_rty_coarse r0.w, r0.w
add r0.z, |r0.w|, |r0.z|
dp4 r0.w, v7.xyzw, v7.xyzw
sqrt r0.w, r0.w
max r1.x, cb0[23].z, l(1.500000)
div r0.w, r1.x, r0.w
min r0.w, r0.w, l(1.000000)
mul r1.x, r0.w, cb0[10].w
mul r0.w, r0.w, cb0[12].w
max r1.y, r1.x, l(1.500000)
min r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, cb0[11].w
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul r0.y, |r0.y|, r1.y
div r0.y, r0.y, r0.z
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mad r0.x, r0.y, r0.x, l(0.500000)
mul r0.y, r0.x, r0.x
mad_sat r0.x, r0.x, r0.y, l(-0.500000)
dp3 r0.y, v7.xyzx, v7.xyzx
sqrt r0.y, r0.y
add r0.y, r0.y, -cb0[14].x
add r0.z, -cb0[14].x, cb0[14].y
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul_sat r0.y, r0.z, r0.y
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mad r0.y, -r0.z, r0.y, l(1.000000)
mul r0.x, r0.y, r0.x
mul r0.z, cb0[0].z, l(0.500000)
div r2.y, r0.z, v2.z
mov r2.x, l(0)
add r3.xyzw, r2.yxxy, v5.xyxy
add r4.xyzw, -r2.yxxy, v5.xyxy
dp2 r2.z, r2.yyyy, cb0[8].xxxx
mad r5.xyzw, v2.zwzw, r3.xyzw, v2.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r5.xyxx, t1.yzxw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r5.zwzz, t1.yxzw, s1, l(0.000000)
add r1.z, -v3.x, v3.y
mad r3.xy, r3.ywyy, r1.zzzz, v3.xxxx
mad r1.zw, r4.yyyw, r1.zzzz, v3.xxxx
mad r4.xyzw, v2.zwzw, r4.xyzw, v2.xyxy
mul r0.z, r0.z, r3.x
mul r1.y, r1.y, r3.y
sample_l_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.yzwx, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.x, r4.zwzz, t1.xyzw, s1, l(0.000000)
mad r2.y, r3.x, r1.w, -r1.y
mad r2.x, r2.w, r1.z, -r0.z
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r1.yzw, r0.zzzz, r2.xxyz
mul r2.xy, r1.yzyy, cb0[17].yyyy
mov r2.z, r1.w
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyw, r0.zzzz, r2.xyxz
dp3 r0.z, r2.xywx, -cb0[15].xyzx
add r0.z, r0.z, l(1.000000)
mul r0.z, r0.z, l(0.500000)
add r2.x, -cb0[17].x, l(1.000000)
mad r0.z, r2.x, r0.z, cb0[17].x
mad r2.xy, v5.xyxx, cb0[20].zwzz, cb0[20].xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t2.xyzw, s2
mul r2.x, r3.w, cb0[21].x
add r3.xyz, r3.xyzx, -cb0[22].xyzx
max o0.w, r3.w, cb0[22].w
mad r2.xyw, r2.xxxx, r3.xyxz, cb0[22].xyxz
mad r3.xyz, r0.zzzz, cb0[16].xyzx, -r2.xywx
mad r2.xyw, cb0[16].wwww, r3.xyxz, r2.xyxw
add r3.xyz, -r2.xywx, cb0[11].xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mad r2.xyw, r0.xxxx, r3.xyxz, r2.xyxw
add r3.xyz, -r2.xywx, cb0[13].xyzx
min r0.x, r0.w, l(1.000000)
max r0.z, r0.w, l(1.500000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.x, r0.x, cb0[13].w
mul r3.xyz, r3.xyzx, r0.xxxx
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].x
mad r0.w, r0.x, v7.w, l(-0.500000)
mul r0.x, r0.x, v7.w
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
mul r0.z, |r0.w|, r0.z
mov r0.w, -r0.x
deriv_rtx_coarse r0.x, r0.x
deriv_rty_coarse r0.w, r0.w
add r0.x, |r0.w|, |r0.x|
div r0.x, r0.z, r0.x
min r0.x, r0.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
mad r0.z, -cb0[12].x, l(0.500000), cb0[12].y
ge r0.z, v7.w, r0.z
mad r0.w, cb0[12].x, l(0.500000), cb0[12].z
ge r0.w, r0.w, v7.w
and r0.zw, r0.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
mul r0.z, r0.w, r0.z
mad r0.x, r0.x, r0.z, l(0.500000)
mul r0.z, r0.x, r0.x
mad_sat r0.x, r0.x, r0.z, l(-0.500000)
mul r0.x, r0.y, r0.x
mad r0.xyz, r0.xxxx, r3.xyzx, r2.xywx
add r0.w, r0.y, r0.x
add r0.w, r0.z, r0.w
mul r0.w, r0.w, l(0.333333)
mad r2.xyw, r0.wwww, cb0[1].xyxz, -r0.xyxz
add r3.xyz, v7.xyzx, -cb0[4].xyzx
mov r3.w, -r3.y
sample_indexable(texturecube)(float,float,float,float) r0.w, r3.xwzx, t0.yzwx, s0
dp3 r1.x, r3.xyzx, r3.xyzx
sqrt r1.x, r1.x
mul r0.w, r0.w, cb0[5].x
add r3.x, r1.x, -cb0[7].x
lt r0.w, r3.x, r0.w
movc r0.w, r0.w, l(-1.000000), l(-0.000000)
add r0.w, r0.w, cb0[6].x
lt r3.x, r1.x, cb0[3].x
and r3.x, r3.x, l(0x3f800000)
mul r0.w, |r0.w|, r3.x
mul r0.w, r0.w, cb0[1].w
mad r0.xyz, r0.wwww, r2.xywx, r0.xyzx
add r2.xyw, -r0.xyxz, cb0[2].xyxz
mul r2.xyw, r2.xyxw, cb0[2].wwww
mul r0.w, r1.x, l(50.000000)
mov r3.x, -r0.w
deriv_rtx_coarse r0.w, r0.w
deriv_rty_coarse r3.x, r3.x
add r0.w, |r0.w|, |r3.x|
mad r3.x, r1.x, l(50.000000), l(-0.500000)
frc r3.x, r3.x
add r3.x, r3.x, l(-0.500000)
mul r3.x, |r3.x|, l(0.666667)
div r0.w, r3.x, r0.w
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
ge r3.x, r1.x, l(-0.010000)
ge r3.y, l(0.090000), r1.x
and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r3.x, r3.y, r3.x
mul r0.w, r0.w, r3.x
mul r3.xyz, cb0[3].xxxx, l(0.250000, 0.125000, 1.125000, 0.000000)
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mul r3.w, r1.x, r3.x
mad r3.x, r3.x, r1.x, l(-0.500000)
frc r3.x, r3.x
add r3.x, r3.x, l(-0.500000)
mul r3.x, |r3.x|, l(0.666667)
mov r4.x, -r3.w
deriv_rtx_coarse r3.w, r3.w
deriv_rty_coarse r4.x, r4.x
add r3.w, |r3.w|, |r4.x|
div r3.x, r3.x, r3.w
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
ge r3.y, r1.x, -r3.y
ge r1.x, r3.z, r1.x
and r1.x, r1.x, l(0x3f800000)
and r3.y, r3.y, l(0x3f800000)
mul r1.x, r1.x, r3.y
mad r0.w, r3.x, r1.x, r0.w
mad r0.xyz, r0.wwww, r2.xywx, r0.xyzx
add r2.xyw, -r0.xyxz, cb0[19].xyxz
add r0.w, -cb0[18].x, cb0[18].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r1.x, v4.x, -cb0[18].x
mul_sat r0.w, r0.w, r1.x
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
mul r0.w, r0.w, cb0[19].w
mad r0.xyz, r0.wwww, r2.xywx, r0.xyzx
dp3 r0.w, -v7.xyzx, -v7.xyzx
rsq r0.w, r0.w
mul r2.xyw, r0.wwww, -v7.xyxz
max r0.w, r2.w, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r3.z, r0.w, l(0.200000)
mul r3.xy, r2.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
dp3 r0.w, r1.yzwy, r3.xyzx
mul r1.xyz, r1.yzwy, r0.wwww
max r0.w, r2.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mad r0.w, r0.w, l(1.800000), l(0.100000)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3_sat r1.x, r1.xyzx, r2.xywx
log r1.x, r1.x
mul r1.x, r1.x, cb0[9].y
exp r1.x, r1.x
mul r1.x, r1.x, cb0[9].x
mul r0.w, r0.w, r1.x
add r1.x, -v7.z, l(-5.000000)
mul_sat r1.x, r1.x, l(0.010000)
mad o0.xyz, r0.wwww, r1.xxxx, r0.xyzx
div r0.x, v6.z, v6.w
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul o1.x, r0.y, l(0.003906)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul r0.x, r0.x, l(256.000000)
round_ni r0.x, r0.x
mul o1.yz, r0.yyxy, l(0.000000, 0.003906, 0.003906, 0.000000)
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 