//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float     zw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.zw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 8
dp3 r0.x, v7.xyzx, v7.xyzx
sqrt r0.x, r0.x
div r0.x, r0.x, cb0[21].y
add r0.x, r0.x, -cb0[11].x
add r0.y, -cb0[11].x, cb0[11].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul_sat r0.x, r0.y, r0.x
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mad r0.x, -r0.y, r0.x, l(1.000000)
div r0.yz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[9].xxwx
add r0.w, v7.w, cb0[22].z
mul r1.x, r0.w, r0.y
mov r1.y, -r1.x
deriv_rtx_coarse r1.x, r1.x
deriv_rty_coarse r1.y, r1.y
add r1.x, |r1.y|, |r1.x|
mad r0.y, r0.y, r0.w, l(-0.500000)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.500000)
mul r0.y, |r0.y|, r0.z
div r0.y, r0.y, r1.x
min r0.y, r0.y, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mad r0.z, -cb0[9].x, l(0.500000), cb0[9].y
ge r0.z, r0.w, r0.z
and r0.z, r0.z, l(0x3f800000)
mad r1.x, cb0[9].x, l(0.500000), cb0[9].z
ge r1.x, r1.x, r0.w
and r1.x, r1.x, l(0x3f800000)
mul r0.z, r0.z, r1.x
mad r0.y, r0.y, r0.z, l(0.500000)
mul r0.z, r0.y, r0.y
mad_sat r0.y, r0.y, r0.z, l(-0.500000)
mul r0.y, r0.x, r0.y
div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[7].xwxx
mad r0.z, r1.x, r0.w, l(-0.500000)
frc r0.z, r0.z
add r0.z, r0.z, l(-0.500000)
mul r0.z, |r0.z|, r1.y
mul r1.x, r0.w, r1.x
mov r1.y, -r1.x
deriv_rtx_coarse r1.x, r1.x
deriv_rty_coarse r1.y, r1.y
add r1.x, |r1.y|, |r1.x|
div r0.z, r0.z, r1.x
min r0.z, r0.z, l(1.000000)
add r0.z, -r0.z, l(1.000000)
mad r1.x, -cb0[7].x, l(0.500000), cb0[7].y
ge r1.x, r0.w, r1.x
mad r1.y, cb0[7].x, l(0.500000), cb0[7].z
ge r1.y, r1.y, r0.w
add r0.w, r0.w, -cb0[4].x
and r1.xy, r1.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r1.x, r1.y, r1.x
mad r0.z, r0.z, r1.x, l(0.500000)
mul r1.x, r0.z, r0.z
mad_sat r0.z, r0.z, r1.x, l(-0.500000)
mul r0.x, r0.x, r0.z
mad r1.xy, v5.xyxx, cb0[14].zwzz, cb0[14].xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t4.xyzw, s4
mul r0.z, r1.w, cb0[15].x
add r1.xyz, r1.xyzx, -cb0[20].xyzx
max r1.w, r1.w, cb0[20].w
mad r1.xyz, r0.zzzz, r1.xyzx, cb0[20].xyzx
mad r2.xy, v5.xyxx, cb0[16].zwzz, cb0[16].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t5.xyzw, s5
add r2.xyz, -r1.xyzx, r2.xyzx
mul r0.z, r2.w, cb0[17].x
max r1.w, r1.w, r2.w
mad r1.xyz, r0.zzzz, r2.xyzx, r1.xyzx
mad r2.xy, v5.xyxx, cb0[18].zwzz, cb0[18].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t6.xyzw, s6
add r2.xyz, -r1.xyzx, r2.xyzx
mul r0.z, r2.w, cb0[19].x
max o0.w, r1.w, r2.w
mad r1.xyz, r0.zzzz, r2.xyzx, r1.xyzx
add r2.xyz, -r1.xyzx, cb0[8].xyzx
mul r2.xyz, r2.xyzx, cb0[8].wwww
mad r1.xyz, r0.xxxx, r2.xyzx, r1.xyzx
add r2.xyz, -r1.xyzx, cb0[10].xyzx
mul r2.xyz, r2.xyzx, cb0[10].wwww
mad r0.xyz, r0.yyyy, r2.xyzx, r1.xyzx
add r1.x, r0.y, r0.x
add r1.x, r0.z, r1.x
mul r1.x, r1.x, l(0.333333)
mad r1.xyz, r1.xxxx, cb0[2].xyzx, -r0.xyzx
mov r2.xy, l(0,0,0,0)
mov r3.z, l(0)
div r4.xy, cb0[1].zwzz, v2.zzzz
mov r4.z, l(0)
add r5.xyzw, r4.xzzy, v5.xyxy
add r4.xyzw, -r4.xzzy, v5.xyxy
mad r6.xyzw, v2.zwzw, r5.xyzw, v2.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.w, r6.xyxx, t3.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r2.w, r6.zwzz, t3.yzwx, s3
mad r5.xz, v2.zzwz, v5.xxyx, v2.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.w, r5.xzxx, t3.yzwx, s3
add r5.x, -v3.x, v3.y
mad r5.z, v5.y, r5.x, v3.x
mul r3.w, r3.w, r5.z
mad r5.yz, r5.yywy, r5.xxxx, v3.xxxx
mad r5.xw, r4.yyyw, r5.xxxx, v3.xxxx
mad r4.xyzw, v2.zwzw, r4.xyzw, v2.xyxy
mad r1.w, r1.w, r5.y, -r3.w
mad r2.w, r2.w, r5.z, -r3.w
mul r5.yz, cb0[5].xxyx, l(0.000000, 0.003906, 0.003906, 0.000000)
mul r3.x, r1.w, -r5.z
mul r6.x, r1.w, r5.z
sample_indexable(texture2d)(float,float,float,float) r1.w, r4.zwzz, t3.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t3.xyzw, s3
mad r4.x, r4.x, r5.x, -r3.w
mad r1.w, r1.w, r5.w, -r3.w
mul r3.y, r5.y, r1.w
mul r7.y, r1.w, -r5.y
mul r2.z, r5.y, -r5.z
add r2.xyz, -r2.xyzx, r3.xyzx
mul r7.x, -r5.z, r4.x
mul r3.x, r4.x, r5.z
mov r4.xy, l(0,0,0,0)
mov r7.z, l(0)
mul r4.z, r5.z, r5.y
add r4.xyz, r4.xyzx, -r7.xyzx
add r2.xyz, r2.xyzx, r4.xyzx
mul r6.y, r2.w, r5.y
mul r3.y, r2.w, -r5.y
mov r4.xy, l(0,0,0,0)
mov r6.z, l(0)
mul r4.z, r5.z, r5.y
mul r5.z, -r5.y, r5.z
add r4.xyz, r4.xyzx, -r6.xyzx
add r2.xyz, r2.xyzx, r4.xyzx
mov r5.xy, l(0,0,0,0)
mov r3.z, l(0)
add r3.xyz, r3.xyzx, -r5.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
max r1.w, |r2.x|, |r2.y|
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
min r2.w, |r2.x|, |r2.y|
mul r1.w, r1.w, r2.w
mul r2.w, r1.w, r1.w
mad r3.x, r2.w, l(0.020835), l(-0.085133)
mad r3.x, r2.w, r3.x, l(0.180141)
mad r3.x, r2.w, r3.x, l(-0.330299)
mad r2.w, r2.w, r3.x, l(0.999866)
mul r3.x, r1.w, r2.w
mad r3.x, r3.x, l(-2.000000), l(1.570796)
lt r3.y, |r2.x|, |r2.y|
and r3.x, r3.y, r3.x
mad r1.w, r1.w, r2.w, r3.x
lt r3.xy, r2.zxzz, -r2.zxzz
and r2.w, r3.y, l(0xc0490fdb)
add r1.w, r1.w, r2.w
min r2.w, r2.x, -r2.y
lt r2.w, r2.w, -r2.w
max r3.y, r2.x, -r2.y
ge r3.y, r3.y, -r3.y
and r2.w, r2.w, r3.y
movc r1.w, r2.w, -r1.w, r1.w
add r1.w, r1.w, l(-1.570796)
lt r2.w, r1.w, l(0.000000)
and r2.w, r2.w, l(0x40c90fdb)
add r1.w, r1.w, r2.w
add r1.w, -r1.w, l(6.283185)
mul r4.z, r1.w, l(0.159155)
mov r4.yw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r1.w, r4.zwzz, t2.yzwx, s2
mad r2.w, |r2.z|, l(-0.018729), l(0.074261)
mad r2.w, r2.w, |r2.z|, l(-0.212114)
mad r2.w, r2.w, |r2.z|, l(1.570729)
add r3.y, -|r2.z|, l(1.000000)
sqrt r3.y, r3.y
mul r3.z, r2.w, r3.y
mad r3.z, r3.z, l(-2.000000), l(3.141593)
and r3.x, r3.x, r3.z
mad r2.w, r2.w, r3.y, r3.x
mul r4.x, r2.w, l(0.636620)
sample_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t1.yzwx, s1
add r3.x, -cb0[4].x, cb0[4].y
ne r3.y, cb0[4].y, cb0[4].x
movc r3.z, r3.y, l(-1.000000), l(-0.000000)
and r3.y, r3.y, l(0x3f800000)
mad r3.x, r3.y, r3.x, r3.z
add r3.x, r3.x, l(1.000000)
div r0.w, r0.w, r3.x
mul r0.w, r0.w, r3.y
mul r0.w, r0.w, cb0[0].x
mul r0.w, r0.w, cb0[0].y
div r3.xy, r0.wwww, cb0[0].xyxx
round_ni r3.yz, r3.xxyx
mad r3.x, -cb0[0].x, r3.y, r0.w
div r3.xy, r3.xzxx, cb0[0].xyxx
sample_indexable(texture2d)(float,float,float,float) r0.w, r3.xyxx, t0.yzwx, s0
mul r0.w, r2.w, r0.w
mad r0.w, -r0.w, r1.w, cb0[3].x
mul r0.w, |r0.w|, cb0[2].w
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r1.xyz, -r0.xyzx, cb0[13].xyzx
add r0.w, -cb0[12].x, cb0[12].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r1.w, v4.x, -cb0[12].x
mul_sat r0.w, r0.w, r1.w
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, -v7.xyzx, -v7.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, -v7.xyzx
max r0.w, r1.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r3.z, r0.w, l(0.200000)
mul r3.xy, r1.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
dp3 r0.w, r2.xyzx, r3.xyzx
mul r2.xyw, r2.xyxz, r0.wwww
max r0.w, r2.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mad r0.w, r0.w, l(1.800000), l(0.100000)
mad r2.xyz, r2.xywx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3_sat r1.x, r2.xyzx, r1.xyzx
log r1.x, r1.x
mul r1.x, r1.x, cb0[6].y
exp r1.x, r1.x
mul r1.x, r1.x, cb0[6].x
mul r0.w, r0.w, r1.x
add r1.x, -v7.z, l(-5.000000)
mul_sat r1.x, r1.x, l(0.010000)
mad o0.xyz, r0.wwww, r1.xxxx, r0.xyzx
div r0.x, v6.z, v6.w
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul o1.x, r0.y, l(0.003906)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul r0.x, r0.x, l(256.000000)
round_ni r0.x, r0.x
mul o1.yz, r0.yyxy, l(0.000000, 0.003906, 0.003906, 0.000000)
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 