//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    4   xyzw        1     NONE   float   xyzw
// NORMAL                   0   xyz         2     NONE   float       
// TEXCOORD                 0   xyzw        3     NONE   float   xy  
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyzw        5     NONE   float   xy  
// TEXCOORD                 3   xyzw        6     NONE   float   xyz 
// TEXCOORD                 4   xyzw        7     NONE   float   x   
// TEXCOORD                 5   xyzw        8     NONE   float   xy  
// TEXCOORD                 6   xyzw        9     NONE   float     zw
// TEXCOORD                 7   xyzw       10     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.xyzw
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.x
dcl_input_ps linear v8.xy
dcl_input_ps linear v9.zw
dcl_input_ps linear v10.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
mul r0.x, cb0[0].z, l(0.500000)
div r0.y, r0.x, v1.z
mov r0.xw, l(0,0,0,0)
add r1.xyzw, -r0.yxxy, v8.xyxy
add r2.xyzw, r0.yxxy, v8.xyxy
mad r3.xyzw, v1.zwzw, r1.xyzw, v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r3.xyxx, t2.xyzw, s2, l(0.000000)
add r1.x, -v3.x, v3.y
mad r1.yz, r1.yywy, r1.xxxx, v3.xxxx
mad r4.xyzw, v1.zwzw, r2.xyzw, v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t2.yzwx, s2, l(0.000000)
mad r2.xy, r2.ywyy, r1.xxxx, v3.xxxx
mul r1.x, r1.w, r2.x
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.zwzz, t2.yzwx, s2, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r4.zwzz, t2.xyzw, s2, l(0.000000)
mul r2.x, r2.y, r2.x
mad r3.x, r0.x, r1.y, -r1.x
mad r3.y, r1.w, r1.z, -r2.x
dp2 r3.z, r0.yyyy, cb0[2].xxxx
dp3 r0.x, r3.xyzx, r3.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r3.xyzx
min r0.x, |r1.x|, |r1.y|
max r0.y, |r1.x|, |r1.y|
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mul r0.x, r0.y, r0.x
mul r0.y, r0.x, r0.x
mad r1.w, r0.y, l(0.020835), l(-0.085133)
mad r1.w, r0.y, r1.w, l(0.180141)
mad r1.w, r0.y, r1.w, l(-0.330299)
mad r0.y, r0.y, r1.w, l(0.999866)
mul r1.w, r0.y, r0.x
lt r2.x, |r1.x|, |r1.y|
mad r1.w, r1.w, l(-2.000000), l(1.570796)
and r1.w, r2.x, r1.w
mad r0.x, r0.x, r0.y, r1.w
lt r0.y, r1.x, -r1.x
and r0.y, r0.y, l(0xc0490fdb)
add r0.x, r0.y, r0.x
min r0.y, r1.x, -r1.y
max r1.w, r1.x, -r1.y
lt r0.y, r0.y, -r0.y
ge r1.w, r1.w, -r1.w
and r0.y, r0.y, r1.w
movc r0.x, r0.y, -r0.x, r0.x
add r0.x, r0.x, l(-1.570796)
lt r0.y, r0.x, l(0.000000)
and r0.y, r0.y, l(0x40c90fdb)
add r0.x, r0.y, r0.x
add r0.x, -r0.x, l(6.283185)
mul r0.y, r0.x, l(0.159168)
round_ni r0.y, r0.y
mad r0.x, -r0.y, l(6.282685), r0.x
mul r0.z, r0.x, l(0.159155)
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.zwzz, t1.xyzw, s1
ge r1.w, cb0[15].x, |r1.z|
and r1.w, r1.w, l(0x3f800000)
mul r0.w, r0.w, r1.w
add r0.xyz, r0.xyzx, -cb0[19].xyzx
mad r0.xyz, r0.wwww, r0.xyzx, cb0[19].xyzx
add r1.w, v5.x, l(-0.500000)
mul r1.w, r1.w, l(6.283185)
add r2.x, -v5.y, l(0.500000)
mul r2.x, r2.x, l(3.141593)
sincos r2.x, r3.x, r2.x
sincos r4.x, r5.x, r1.w
mul r5.x, r3.x, r5.x
mul r5.y, r3.x, r4.x
mov r5.z, r2.x
mul r2.xyz, r5.xyzx, l(0.000000, 1.000000, 0.000000, 0.000000)
mad r2.xyz, r5.zxyz, l(1.000000, 0.000000, 0.000000, 0.000000), -r2.xyzx
dp2 r1.w, r2.xyxx, r2.xyxx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r3.xyz, r2.xyzx, r5.zxyz
mad r3.xyz, r5.yzxy, r2.yzxy, -r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
dp2 r1.w, r2.xyxx, v6.yzyy
mov r2.x, -r1.w
dp3 r1.w, r3.xyzx, v6.xyzx
mov r2.y, -r1.w
dp3 r2.z, r5.xyzx, v6.xyzx
dp3_sat r1.w, r2.xyzx, r1.xyzx
add r2.xyz, r1.xyzx, r1.xyzx
mad r3.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.w, r3.xyzx, l(0.192450, 0.192450, 0.962250, 0.000000)
mul r3.x, cb0[10].x, l(0.500000)
mad r3.yzw, r2.wwww, l(0.000000, 0.750000, 0.790000, 1.000000), -r1.wwww
mad r3.xyz, r3.xxxx, r3.yzwy, r1.wwww
mov r0.w, cb0[19].w
mov r3.w, l(1.000000)
add r3.xyzw, -r0.xyzw, r3.xyzw
mad r0.xyzw, cb0[9].xxxx, r3.xyzw, r0.xyzw
div r3.xy, v4.xyxx, v4.wwww
mad r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t3.xyzw, s3
lt r1.w, l(0.500000), cb0[14].x
if_z r1.w
  add r1.w, v4.z, -cb0[11].x
  ge r2.w, r3.x, r1.w
  and r2.w, r2.w, l(0x3f800000)
  mad r3.w, -r3.x, r3.x, r3.y
  max r3.w, r3.w, cb0[13].x
  add r1.w, -r3.x, r1.w
  mad r1.w, r1.w, r1.w, r3.w
  div r1.w, r3.w, r1.w
  add r1.w, r1.w, -cb0[13].y
  add r3.w, -cb0[13].y, l(1.000000)
  div_sat r1.w, r1.w, r3.w
  max r1.w, r1.w, r2.w
  add r4.xyz, -r0.xyzx, r1.wwww
  mad r3.xyz, cb0[12].xxxx, r4.xyzx, r0.xyzx
endif 
ne r0.x, cb0[16].y, cb0[16].x
and r0.y, r0.x, l(0x3f800000)
add r0.z, -cb0[16].x, cb0[16].y
movc r0.x, r0.x, l(-1.000000), l(-0.000000)
mad r0.x, r0.y, r0.z, r0.x
add r0.x, r0.x, l(1.000000)
add r0.z, v10.w, -cb0[16].x
div r0.x, r0.z, r0.x
mul r0.x, r0.x, r0.y
mul r0.x, r0.x, cb0[1].x
mul r0.x, r0.x, cb0[1].y
div r0.yz, r0.xxxx, cb0[1].xxyx
round_ni r4.yz, r0.yyzy
mad r4.x, -cb0[1].x, r4.y, r0.x
div r0.xy, r4.xzxx, cb0[1].xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyxx, t0.xyzw, s0
add r0.xyz, -r3.xyzx, r4.xyzx
mad r0.xyz, r4.wwww, r0.xyzx, r3.xyzx
dp3 r1.w, v10.xyzx, v10.xyzx
sqrt r1.w, r1.w
add r2.w, -cb0[8].x, cb0[8].y
add r1.w, r1.w, -cb0[8].x
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul_sat r1.w, r1.w, r2.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mad r1.w, -r2.w, r1.w, l(1.000000)
dp4 r2.w, v10.xyzw, v10.xyzw
sqrt r2.w, r2.w
max r3.x, cb0[20].z, l(1.500000)
div r2.w, r3.x, r2.w
min r2.w, r2.w, l(1.000000)
mul r3.x, r2.w, cb0[4].w
min r3.y, r3.x, l(1.000000)
mul r3.y, r3.y, cb0[5].w
add r4.xyz, -r0.xyzx, cb0[5].xyzx
mul r3.yzw, r3.yyyy, r4.xxyz
max r3.x, r3.x, l(1.500000)
div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[4].x
mul r4.y, r4.x, v10.w
deriv_rtx_coarse r4.z, r4.y
mov r4.y, -r4.y
deriv_rty_coarse r4.y, r4.y
add r4.y, |r4.y|, |r4.z|
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mad r4.x, r4.x, v10.w, l(-0.500000)
frc r4.x, r4.x
add r4.x, r4.x, l(-0.500000)
mul r3.x, r3.x, |r4.x|
div r3.x, r3.x, r4.y
min r3.x, r3.x, l(1.000000)
add r3.x, -r3.x, l(1.000000)
mad r4.x, -cb0[4].x, l(0.500000), cb0[4].y
mad r4.y, cb0[4].x, l(0.500000), cb0[4].z
ge r4.x, v10.w, r4.x
ge r4.y, r4.y, v10.w
and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r4.x, r4.y, r4.x
mad r3.x, r3.x, r4.x, l(0.500000)
mul r4.x, r3.x, r3.x
mad_sat r3.x, r3.x, r4.x, l(-0.500000)
mul r3.x, r1.w, r3.x
mad r0.xyz, r3.xxxx, r3.yzwy, r0.xyzx
mul r2.w, r2.w, cb0[6].w
min r3.x, r2.w, l(1.000000)
mul r3.x, r3.x, cb0[7].w
add r3.yzw, -r0.xxyz, cb0[7].xxyz
mul r3.xyz, r3.yzwy, r3.xxxx
max r2.w, r2.w, l(1.500000)
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].x
mul r4.x, r3.w, v10.w
deriv_rtx_coarse r4.y, r4.x
mov r4.x, -r4.x
deriv_rty_coarse r4.x, r4.x
add r4.x, |r4.x|, |r4.y|
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mad r3.w, r3.w, v10.w, l(-0.500000)
frc r3.w, r3.w
add r3.w, r3.w, l(-0.500000)
mul r2.w, r2.w, |r3.w|
div r2.w, r2.w, r4.x
min r2.w, r2.w, l(1.000000)
add r2.w, -r2.w, l(1.000000)
mad r3.w, -cb0[6].x, l(0.500000), cb0[6].y
mad r4.x, cb0[6].x, l(0.500000), cb0[6].z
ge r3.w, v10.w, r3.w
and r3.w, r3.w, l(0x3f800000)
ge r4.x, r4.x, v10.w
and r4.x, r4.x, l(0x3f800000)
mul r3.w, r3.w, r4.x
mad r2.w, r2.w, r3.w, l(0.500000)
mul r3.w, r2.w, r2.w
mad_sat r2.w, r2.w, r3.w, l(-0.500000)
mul r1.w, r1.w, r2.w
mad r0.xyz, r1.wwww, r3.xyzx, r0.xyzx
add r1.w, -cb0[17].x, cb0[17].y
add r2.w, v7.x, -cb0[17].x
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul_sat r1.w, r1.w, r2.w
mad r2.w, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.w
mul r1.w, r1.w, cb0[18].w
add r3.xyz, -r0.xyzx, cb0[18].xyzx
mad r0.xyz, r1.wwww, r3.xyzx, r0.xyzx
div r1.w, v9.z, v9.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r2.w, r1.w, l(256.000000)
round_ni r2.w, r2.w
mad r1.w, r1.w, l(256.000000), -r2.w
mul r3.x, r1.w, l(256.000000)
round_ni r3.x, r3.x
mad r1.w, r1.w, l(256.000000), -r3.x
mul r1.w, r1.w, l(256.000000)
round_ni r1.w, r1.w
mul o1.x, r2.w, l(0.003906)
mul o1.y, r3.x, l(0.003906)
mul o1.z, r1.w, l(0.003906)
dp3 r1.w, -v10.xyzx, -v10.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, -v10.xyzx
max r1.w, r3.z, l(0.000000)
mul r4.xy, r3.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
add r1.w, -r1.w, l(1.000000)
mul r1.w, r1.w, l(0.700000)
max r4.z, r1.w, l(0.200000)
dp3 r1.x, r1.xyzx, r4.xyzx
mad r1.xyw, r2.xyxz, r1.xxxx, -r4.xyxz
dp3 r2.x, r1.xywx, r1.xywx
rsq r2.x, r2.x
mul r1.xyw, r1.xyxw, r2.xxxx
dp3_sat r1.x, r1.xywx, r3.xyzx
max r1.y, r1.z, l(0.000000)
add r1.y, -r1.y, l(1.000000)
add r1.z, -v10.z, l(-5.000000)
mul_sat r1.z, r1.z, l(0.010000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[3].y
exp r1.x, r1.x
mul r1.x, r1.x, cb0[3].x
mad r1.y, r1.y, l(1.800000), l(0.100000)
mul r1.x, r1.y, r1.x
mad o0.xyz, r1.xxxx, r1.zzzz, r0.xyzx
mov o0.w, r0.w
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 