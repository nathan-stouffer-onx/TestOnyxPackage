//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xy  
// TEXCOORD                 4   xyzw        4     NONE   float   x   
// TEXCOORD                 5   xyzw        5     NONE   float   xy  
// TEXCOORD                 6   xyzw        6     NONE   float     zw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[18], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xy
dcl_input_ps linear v4.x
dcl_input_ps linear v5.xy
dcl_input_ps linear v6.zw
dcl_input_ps linear v7.xyzw
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
mov r0.xy, l(0,0,0,0)
mov r1.z, l(0)
div r2.xy, cb0[0].zwzz, v2.zzzz
mov r2.z, l(0)
add r3.xyzw, r2.xzzy, v5.xyxy
add r2.xyzw, -r2.xzzy, v5.xyxy
mad r4.xyzw, v2.zwzw, r3.xyzw, v2.xyxy
sample_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t2.yzwx, s2
sample_indexable(texture2d)(float,float,float,float) r1.w, r4.zwzz, t2.yzwx, s2
mad r3.xz, v2.zzwz, v5.xxyx, v2.xxyx
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xzxx, t2.xyzw, s2
add r3.z, -v3.x, v3.y
mad r4.x, v5.y, r3.z, v3.x
mul r3.x, r3.x, r4.x
mad r3.yw, r3.yyyw, r3.zzzz, v3.xxxx
mad r4.xy, r2.ywyy, r3.zzzz, v3.xxxx
mad r2.xyzw, v2.zwzw, r2.xyzw, v2.xyxy
mad r0.w, r0.w, r3.y, -r3.x
mad r1.w, r1.w, r3.w, -r3.x
mul r3.yz, cb0[2].xxyx, l(0.000000, 0.003906, 0.003906, 0.000000)
mul r1.x, r0.w, -r3.z
mul r5.x, r0.w, r3.z
sample_indexable(texture2d)(float,float,float,float) r0.w, r2.zwzz, t2.yzwx, s2
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t2.xyzw, s2
mad r2.x, r2.x, r4.x, -r3.x
mad r0.w, r0.w, r4.y, -r3.x
mul r1.y, r3.y, r0.w
mul r4.y, r0.w, -r3.y
mul r0.z, r3.y, -r3.z
add r0.xyz, -r0.xyzx, r1.xyzx
mul r4.x, -r3.z, r2.x
mul r1.x, r2.x, r3.z
mov r2.xy, l(0,0,0,0)
mov r4.z, l(0)
mul r2.z, r3.z, r3.y
add r2.xyz, r2.xyzx, -r4.xyzx
add r0.xyz, r0.xyzx, r2.xyzx
mul r5.y, r1.w, r3.y
mul r1.y, r1.w, -r3.y
mov r2.xy, l(0,0,0,0)
mov r5.z, l(0)
mul r2.z, r3.z, r3.y
mul r3.z, -r3.y, r3.z
add r2.xyz, r2.xyzx, -r5.xyzx
add r0.xyz, r0.xyzx, r2.xyzx
mov r3.xy, l(0,0,0,0)
mov r1.z, l(0)
add r1.xyz, r1.xyzx, -r3.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.w, |r0.z|, l(-0.018729), l(0.074261)
mad r0.w, r0.w, |r0.z|, l(-0.212114)
mad r0.w, r0.w, |r0.z|, l(1.570729)
add r1.x, -|r0.z|, l(1.000000)
sqrt r1.x, r1.x
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(3.141593)
lt r1.z, r0.z, -r0.z
and r1.y, r1.z, r1.y
mad r0.w, r0.w, r1.x, r1.y
mul r1.x, r0.w, l(0.636620)
mov r1.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t1.xyzw, s1
mul r2.xy, r0.xyxx, cb0[12].yyyy
mov r2.z, r0.z
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyw, r0.wwww, r2.xyxz
dp3 r0.w, r2.xywx, -cb0[10].xyzx
add r0.w, r0.w, l(1.000000)
mul r0.w, r0.w, l(0.500000)
add r2.x, -cb0[12].x, l(1.000000)
mad r0.w, r2.x, r0.w, cb0[12].x
mad r2.xyw, r0.wwww, cb0[11].xyxz, -cb0[15].xyxz
mad r2.xyw, cb0[11].wwww, r2.xyxw, cb0[15].xyxz
ne r0.w, cb0[9].y, cb0[9].x
and r3.x, r0.w, l(0x3f800000)
movc r0.w, r0.w, l(-1.000000), l(-0.000000)
add r3.y, -cb0[9].x, cb0[9].y
mad r0.w, r3.x, r3.y, r0.w
add r0.w, r0.w, l(1.000000)
add r3.y, v7.w, cb0[17].z
add r3.z, r3.y, -cb0[9].x
div r0.w, r3.z, r0.w
mul r0.w, r0.w, r3.x
mul r0.w, r0.w, cb0[1].x
mul r0.w, r0.w, cb0[1].y
div r3.xz, r0.wwww, cb0[1].xxyx
round_ni r4.yz, r3.xxzx
mad r4.x, -cb0[1].x, r4.y, r0.w
div r3.xz, r4.xxzx, cb0[1].xxyx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.xzxx, t0.xyzw, s0
add r3.xzw, -r2.xxyw, r4.xxyz
mad r2.xyw, r4.wwww, r3.xzxw, r2.xyxw
add r1.xyz, r1.xyzx, -r2.xywx
mad r1.xyz, r1.wwww, r1.xyzx, r2.xywx
add r2.xyw, -r1.xyxz, cb0[5].xyxz
mul r2.xyw, r2.xyxw, cb0[5].wwww
div r3.xz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[4].xxwx
mul r0.w, r3.y, r3.x
mov r1.w, -r0.w
deriv_rtx_coarse r0.w, r0.w
deriv_rty_coarse r1.w, r1.w
add r0.w, |r0.w|, |r1.w|
mad r1.w, r3.x, r3.y, l(-0.500000)
frc r1.w, r1.w
add r1.w, r1.w, l(-0.500000)
mul r1.w, |r1.w|, r3.z
div r0.w, r1.w, r0.w
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
mad r1.w, -cb0[4].x, l(0.500000), cb0[4].y
ge r1.w, r3.y, r1.w
and r1.w, r1.w, l(0x3f800000)
mad r3.x, cb0[4].x, l(0.500000), cb0[4].z
ge r3.x, r3.x, r3.y
and r3.x, r3.x, l(0x3f800000)
mul r1.w, r1.w, r3.x
mad r0.w, r0.w, r1.w, l(0.500000)
mul r1.w, r0.w, r0.w
mad_sat r0.w, r0.w, r1.w, l(-0.500000)
dp3 r1.w, v7.xyzx, v7.xyzx
sqrt r1.w, r1.w
div r1.w, r1.w, cb0[16].y
add r1.w, r1.w, -cb0[8].x
add r3.x, -cb0[8].x, cb0[8].y
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mul_sat r1.w, r1.w, r3.x
mad r3.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mad r1.w, -r3.x, r1.w, l(1.000000)
mul r0.w, r0.w, r1.w
mad r1.xyz, r0.wwww, r2.xywx, r1.xyzx
add r2.xyw, -r1.xyxz, cb0[7].xyxz
mul r2.xyw, r2.xyxw, cb0[7].wwww
div r3.xz, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[6].xxwx
mad r0.w, r3.x, r3.y, l(-0.500000)
frc r0.w, r0.w
add r0.w, r0.w, l(-0.500000)
mul r0.w, |r0.w|, r3.z
mul r3.x, r3.y, r3.x
mov r3.z, -r3.x
deriv_rtx_coarse r3.x, r3.x
deriv_rty_coarse r3.z, r3.z
add r3.x, |r3.z|, |r3.x|
div r0.w, r0.w, r3.x
min r0.w, r0.w, l(1.000000)
add r0.w, -r0.w, l(1.000000)
mad r3.x, -cb0[6].x, l(0.500000), cb0[6].y
ge r3.x, r3.y, r3.x
mad r3.z, cb0[6].x, l(0.500000), cb0[6].z
ge r3.y, r3.z, r3.y
and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
mul r3.x, r3.y, r3.x
mad r0.w, r0.w, r3.x, l(0.500000)
mul r3.x, r0.w, r0.w
mad_sat r0.w, r0.w, r3.x, l(-0.500000)
mul r0.w, r1.w, r0.w
mad r1.xyz, r0.wwww, r2.xywx, r1.xyzx
add r2.xyw, -r1.xyxz, cb0[14].xyxz
add r0.w, -cb0[13].x, cb0[13].y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
add r1.w, v4.x, -cb0[13].x
mul_sat r0.w, r0.w, r1.w
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mad r1.xyz, r0.wwww, r2.xywx, r1.xyzx
dp3 r0.w, -v7.xyzx, -v7.xyzx
rsq r0.w, r0.w
mul r2.xyw, r0.wwww, -v7.xyxz
max r0.w, r2.w, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mul r0.w, r0.w, l(0.700000)
max r3.z, r0.w, l(0.200000)
mul r3.xy, r2.yxyy, l(0.500000, -0.500000, 0.000000, 0.000000)
dp3 r0.w, r0.xyzx, r3.xyzx
mul r0.xyz, r0.xyzx, r0.wwww
max r0.w, r2.z, l(0.000000)
add r0.w, -r0.w, l(1.000000)
mad r0.w, r0.w, l(1.800000), l(0.100000)
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r3.xyzx
dp3 r1.w, r0.xyzx, r0.xyzx
rsq r1.w, r1.w
mul r0.xyz, r0.xyzx, r1.wwww
dp3_sat r0.x, r0.xyzx, r2.xywx
log r0.x, r0.x
mul r0.x, r0.x, cb0[3].y
exp r0.x, r0.x
mul r0.x, r0.x, cb0[3].x
mul r0.x, r0.w, r0.x
add r0.y, -v7.z, l(-5.000000)
mul_sat r0.y, r0.y, l(0.010000)
mad o0.xyz, r0.xxxx, r0.yyyy, r1.xyzx
mov o0.w, cb0[15].w
div r0.x, v6.z, v6.w
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul o1.x, r0.y, l(0.003906)
mul r0.y, r0.x, l(256.000000)
round_ni r0.y, r0.y
mad r0.x, r0.x, l(256.000000), -r0.y
mul r0.x, r0.x, l(256.000000)
round_ni r0.x, r0.x
mul o1.yz, r0.yyxy, l(0.000000, 0.003906, 0.003906, 0.000000)
mov o1.w, l(1.000000)
ret 
// Approximately 0 instruction slots used
 