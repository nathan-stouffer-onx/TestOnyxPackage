precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_MaxNormalZ;
uniform vec4 u_ElevationExtents;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  vec2 tmpvar_6;
  tmpvar_6 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6.x;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6.y;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  float tmpvar_15;
  tmpvar_15 = (texture (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_16;
  tmpvar_16 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = -(tmpvar_16.x);
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - tmpvar_15);
  vec3 tmpvar_18;
  tmpvar_18.y = 0.0;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)) - tmpvar_15);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = -(tmpvar_16.y);
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - tmpvar_15);
  vec3 tmpvar_20;
  tmpvar_20.x = 0.0;
  tmpvar_20.y = tmpvar_16.y;
  tmpvar_20.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)) - tmpvar_15);
  normal_5 = normalize(((
    (((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx)) + ((tmpvar_19.yzx * tmpvar_18.zxy) - (tmpvar_19.zxy * tmpvar_18.yzx)))
   + 
    ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx))
  ) + (
    (tmpvar_20.yzx * tmpvar_17.zxy)
   - 
    (tmpvar_20.zxy * tmpvar_17.yzx)
  )));
  fragColor_4 = u_BackgroundColor;
  float rad_21;
  float vec_y_22;
  vec_y_22 = -(normal_5.y);
  float tmpvar_23;
  float tmpvar_24;
  tmpvar_24 = (min (abs(
    (vec_y_22 / normal_5.x)
  ), 1.0) / max (abs(
    (vec_y_22 / normal_5.x)
  ), 1.0));
  float tmpvar_25;
  tmpvar_25 = (tmpvar_24 * tmpvar_24);
  tmpvar_25 = (((
    ((((
      ((((-0.01213232 * tmpvar_25) + 0.05368138) * tmpvar_25) - 0.1173503)
     * tmpvar_25) + 0.1938925) * tmpvar_25) - 0.3326756)
   * tmpvar_25) + 0.9999793) * tmpvar_24);
  tmpvar_25 = (tmpvar_25 + (float(
    (abs((vec_y_22 / normal_5.x)) > 1.0)
  ) * (
    (tmpvar_25 * -2.0)
   + 1.570796)));
  tmpvar_23 = (tmpvar_25 * sign((vec_y_22 / normal_5.x)));
  if ((abs(normal_5.x) > (1e-08 * abs(vec_y_22)))) {
    if ((normal_5.x < 0.0)) {
      if ((vec_y_22 >= 0.0)) {
        tmpvar_23 += 3.141593;
      } else {
        tmpvar_23 = (tmpvar_23 - 3.141593);
      };
    };
  } else {
    tmpvar_23 = (sign(vec_y_22) * 1.570796);
  };
  rad_21 = (tmpvar_23 - 1.570796);
  rad_21 = (rad_21 + (float(
    (rad_21 < 0.0)
  ) * 6.283185));
  rad_21 = (6.283185 - rad_21);
  vec2 tmpvar_26;
  tmpvar_26.y = 0.0;
  tmpvar_26.x = (rad_21 / 6.283185);
  vec4 tmpvar_27;
  tmpvar_27 = texture (s_SlopeAspectShadeTexture, tmpvar_26);
  fragColor_4.xyz = mix (u_BackgroundColor.xyz, tmpvar_27.xyz, (tmpvar_27.w * float(
    (abs(normal_5.z) <= u_MaxNormalZ.x)
  )));
  vec3 tangentSun_28;
  vec3 planetNormal_29;
  float tmpvar_30;
  tmpvar_30 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_31;
  tmpvar_31 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_29.x = (cos(tmpvar_31) * cos(tmpvar_30));
  planetNormal_29.y = (cos(tmpvar_31) * sin(tmpvar_30));
  planetNormal_29.z = sin(tmpvar_31);
  vec3 tmpvar_32;
  tmpvar_32 = normalize(((planetNormal_29.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_29.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_28.x = -(dot (tmpvar_32, v_texcoord3.xyz));
  tangentSun_28.y = -(dot (normalize(
    ((planetNormal_29.yzx * tmpvar_32.zxy) - (planetNormal_29.zxy * tmpvar_32.yzx))
  ), v_texcoord3.xyz));
  tangentSun_28.z = dot (planetNormal_29, v_texcoord3.xyz);
  vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.xyz = mix (vec3(clamp (dot (tangentSun_28, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_34;
  tmpvar_34 = mix (fragColor_4, tmpvar_33, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_34.w;
  float tmpvar_35;
  tmpvar_35 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_36;
  tmpvar_36 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_37;
  tmpvar_37 = max ((tmpvar_36.y - (tmpvar_36.x * tmpvar_36.x)), u_sunShadowVSMParams.x);
  float tmpvar_38;
  tmpvar_38 = (tmpvar_35 - tmpvar_36.x);
  fragColor_4.xyz = mix (tmpvar_34.xyz, vec3(min (max (
    float((tmpvar_35 <= tmpvar_36.x))
  , 
    clamp ((((tmpvar_37 / 
      (tmpvar_37 + (tmpvar_38 * tmpvar_38))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_39;
  tmpvar_39 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  vec2 tmpvar_40;
  tmpvar_40.y = 0.0;
  tmpvar_40.x = (tmpvar_39 * ((
    (v_texcoord7.w + u_eyePos.z)
   - u_ElevationExtents.x) / (
    (tmpvar_39 * (u_ElevationExtents.y - u_ElevationExtents.x))
   + 
    (1.0 - tmpvar_39)
  )));
  vec4 tmpvar_41;
  tmpvar_41 = texture (s_ElevationShadeTexture, tmpvar_40);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_41.xyz, tmpvar_41.w);
  float tmpvar_42;
  tmpvar_42 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_FogColor.xyz, (tmpvar_42 * (tmpvar_42 * 
    (3.0 - (2.0 * tmpvar_42))
  )));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_43;
  tmpvar_43 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_44;
  tmpvar_44 = floor(tmpvar_43);
  d_2 = ((tmpvar_43 - tmpvar_44) * 256.0);
  float tmpvar_45;
  tmpvar_45 = floor(d_2);
  d_2 = ((d_2 - tmpvar_45) * 256.0);
  mediump vec4 tmpvar_46;
  tmpvar_46.w = 1.0;
  tmpvar_46.x = (tmpvar_44 / 256.0);
  tmpvar_46.y = (tmpvar_45 / 256.0);
  tmpvar_46.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_46;
  vec3 tmpvar_47;
  tmpvar_47 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_48;
  tmpvar_48.x = (tmpvar_47.y * 0.5);
  tmpvar_48.y = (-(tmpvar_47.x) * 0.5);
  tmpvar_48.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_47.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_49;
  tmpvar_49 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_48)
    ) - tmpvar_48)), tmpvar_47)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_49 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

