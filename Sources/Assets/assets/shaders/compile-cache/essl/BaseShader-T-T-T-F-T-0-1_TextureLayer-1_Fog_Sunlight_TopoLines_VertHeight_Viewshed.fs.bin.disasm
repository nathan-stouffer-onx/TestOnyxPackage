precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTextureFrag;
uniform vec4 s_heightTextureFrag_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedColor0;
uniform vec4 u_viewshedRange;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane;
uniform vec4 u_viewshedStrength;
uniform vec4 u_viewshedBias;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_TopoParams;
uniform vec4 u_minorTopoColor;
uniform vec4 u_majorTopoColor;
uniform vec4 u_TopoFade;
uniform vec4 u_TopoHeightFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  vec2 tmpvar_6;
  tmpvar_6 = (s_heightTextureFrag_Res.zw / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6.x;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6.y;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  float tmpvar_15;
  tmpvar_15 = (texture (s_heightTextureFrag, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_16;
  tmpvar_16 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = -(tmpvar_16.x);
  tmpvar_17.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - tmpvar_15);
  vec3 tmpvar_18;
  tmpvar_18.y = 0.0;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)) - tmpvar_15);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = -(tmpvar_16.y);
  tmpvar_19.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - tmpvar_15);
  vec3 tmpvar_20;
  tmpvar_20.x = 0.0;
  tmpvar_20.y = tmpvar_16.y;
  tmpvar_20.z = ((texture (s_heightTextureFrag, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)) - tmpvar_15);
  normal_5 = normalize(((
    (((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx)) + ((tmpvar_19.yzx * tmpvar_18.zxy) - (tmpvar_19.zxy * tmpvar_18.yzx)))
   + 
    ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx))
  ) + (
    (tmpvar_20.yzx * tmpvar_17.zxy)
   - 
    (tmpvar_20.zxy * tmpvar_17.yzx)
  )));
  vec4 color_21;
  vec4 tmpvar_22;
  tmpvar_22 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_21.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_22.xyz, tmpvar_22.w);
  color_21.w = tmpvar_22.w;
  vec3 tangentSun_23;
  vec3 planetNormal_24;
  float tmpvar_25;
  tmpvar_25 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_26;
  tmpvar_26 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_24.x = (cos(tmpvar_26) * cos(tmpvar_25));
  planetNormal_24.y = (cos(tmpvar_26) * sin(tmpvar_25));
  planetNormal_24.z = sin(tmpvar_26);
  vec3 tmpvar_27;
  tmpvar_27 = normalize(((planetNormal_24.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_24.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_23.x = -(dot (tmpvar_27, v_texcoord3.xyz));
  tangentSun_23.y = -(dot (normalize(
    ((planetNormal_24.yzx * tmpvar_27.zxy) - (planetNormal_24.zxy * tmpvar_27.yzx))
  ), v_texcoord3.xyz));
  tangentSun_23.z = dot (planetNormal_24, v_texcoord3.xyz);
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = mix (vec3(clamp (dot (tangentSun_23, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_29;
  tmpvar_29 = mix (color_21, tmpvar_28, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_29.w;
  float tmpvar_30;
  tmpvar_30 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_31;
  tmpvar_31 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_32;
  tmpvar_32 = max ((tmpvar_31.y - (tmpvar_31.x * tmpvar_31.x)), u_sunShadowVSMParams.x);
  float tmpvar_33;
  tmpvar_33 = (tmpvar_30 - tmpvar_31.x);
  fragColor_4.xyz = mix (tmpvar_29.xyz, vec3(min (max (
    float((tmpvar_30 <= tmpvar_31.x))
  , 
    clamp ((((tmpvar_32 / 
      (tmpvar_32 + (tmpvar_33 * tmpvar_33))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float height_34;
  height_34 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_35;
  tmpvar_35 = pow ((1.0 - (
    sqrt(dot (v_texcoord7.xy, v_texcoord7.xy))
   / 
    (u_nearFarPlane.y / 3.0)
  )), 3.0);
  float strength_36;
  float tmpvar_37;
  tmpvar_37 = ((1.0/(u_TopoParams.x)) * height_34);
  float tmpvar_38;
  tmpvar_38 = (0.5 * u_TopoParams.x);
  strength_36 = ((1.0 - min (
    (abs((fract(
      (tmpvar_37 - 0.5)
    ) - 0.5)) / (abs(dFdx(tmpvar_37)) + abs(dFdy(tmpvar_37))))
  , 1.0)) * (float(
    ((-10.0 - tmpvar_38) <= height_34)
  ) * float(
    (height_34 <= (10.0 + tmpvar_38))
  )));
  float tmpvar_39;
  tmpvar_39 = ((1.0/(u_TopoParams.y)) * height_34);
  float tmpvar_40;
  tmpvar_40 = (0.5 * u_TopoParams.y);
  float tmpvar_41;
  tmpvar_41 = clamp ((pow (
    (((1.0 - min (
      (((1.0/((2.0 + 
        (u_TopoHeightFade.y * tmpvar_35)
      ))) * abs((
        fract((tmpvar_39 - 0.5))
       - 0.5))) / (abs(dFdx(tmpvar_39)) + abs(dFdy(tmpvar_39))))
    , 1.0)) * (float(
      ((-10.0 - tmpvar_40) <= height_34)
    ) * float(
      (height_34 <= (10.0 + tmpvar_40))
    ))) + 0.5)
  , 3.0) - 0.5), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((u_majorTopoColor.xyz * tmpvar_41) + (u_minorTopoColor.xyz * 
    clamp ((strength_36 - tmpvar_41), 0.0, 1.0)
  )), clamp ((
    mix (u_TopoFade.y, u_TopoFade.x, tmpvar_35)
   * 
    max ((strength_36 * u_TopoHeightFade.x), (tmpvar_41 * u_TopoHeightFade.y))
  ), 0.0, 1.0));
  float tmpvar_42;
  tmpvar_42 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_fogColor.xyz, (tmpvar_42 * (tmpvar_42 * 
    (3.0 - (2.0 * tmpvar_42))
  )));
  float tmpvar_43;
  vec3 tmpvar_44;
  tmpvar_44 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_43 = sqrt(dot (tmpvar_44, tmpvar_44));
  vec3 rayDir_45;
  rayDir_45.xz = tmpvar_44.xz;
  rayDir_45.y = -(tmpvar_44.y);
  fragColor_4.xyz = (fragColor_4.xyz + ((
    ((float((tmpvar_43 < u_viewshedRange.x)) * float((
      (tmpvar_43 - u_viewshedBias.x)
     < 
      (texture (s_cubeDepth0, rayDir_45).x * u_viewshedFarPlane.x)
    ))) * u_viewshedStrength.x)
   * 
    mix (0.45, 0.15, (tmpvar_43 / u_viewshedRange.x))
  ) * u_viewshedColor0.xyz));
  float lineStrength_46;
  float tmpvar_47;
  tmpvar_47 = sqrt(dot (tmpvar_44, tmpvar_44));
  float period_48;
  period_48 = (u_viewshedRange.x / 4.0);
  float tmpvar_49;
  tmpvar_49 = ((1.0/(period_48)) * tmpvar_47);
  float tmpvar_50;
  tmpvar_50 = (0.5 * period_48);
  float tmpvar_51;
  tmpvar_51 = (50.0 * tmpvar_47);
  lineStrength_46 = (((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_49 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_49)
    ) + abs(
      dFdy(tmpvar_49)
    ))), 1.0)
  ) * (
    float((-(tmpvar_50) <= tmpvar_47))
   * 
    float((tmpvar_47 <= (u_viewshedRange.x + tmpvar_50)))
  )) + ((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_51 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_51)
    ) + abs(
      dFdy(tmpvar_51)
    ))), 1.0)
  ) * (
    float((-0.01 <= tmpvar_47))
   * 
    float((tmpvar_47 <= 0.09))
  )));
  fragColor_4.xyz = (((1.0 - lineStrength_46) * fragColor_4.xyz) + (lineStrength_46 * (vec3(1.0, 1.0, 1.0) - u_viewshedColor0.xyz)));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_52;
  tmpvar_52 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_53;
  tmpvar_53 = floor(tmpvar_52);
  d_2 = ((tmpvar_52 - tmpvar_53) * 256.0);
  float tmpvar_54;
  tmpvar_54 = floor(d_2);
  d_2 = ((d_2 - tmpvar_54) * 256.0);
  mediump vec4 tmpvar_55;
  tmpvar_55.w = 1.0;
  tmpvar_55.x = (tmpvar_53 / 256.0);
  tmpvar_55.y = (tmpvar_54 / 256.0);
  tmpvar_55.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_55;
  vec3 tmpvar_56;
  tmpvar_56 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_57;
  tmpvar_57.x = (tmpvar_56.y * 0.5);
  tmpvar_57.y = (-(tmpvar_56.x) * 0.5);
  tmpvar_57.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_56.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_58;
  tmpvar_58 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_57)
    ) - tmpvar_57)), tmpvar_56)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_58 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

