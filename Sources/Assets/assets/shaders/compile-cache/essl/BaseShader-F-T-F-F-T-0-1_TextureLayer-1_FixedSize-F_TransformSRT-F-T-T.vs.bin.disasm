precision highp int;
precision highp float;
in highp vec3 a_position;
in highp vec4 a_texcoord7;
out highp vec4 v_texcoord6;
out highp vec4 v_texcoord7;
uniform highp mat4 u_view;
uniform highp mat4 u_proj;
uniform highp vec4 u_scale;
uniform highp vec4 u_quatRotation;
uniform highp vec4 u_translation;
uniform highp vec4 u_tileMin;
uniform highp vec4 u_tileMax;
void main ()
{
  highp vec3 vertexPosition_1;
  highp float tmpvar_2;
  tmpvar_2 = (u_tileMin.z + (a_position.z * u_tileMax.z));
  highp vec4 tmpvar_3;
  tmpvar_3.xy = mix (u_tileMin.xy, u_tileMax.xy, a_position.xy);
  tmpvar_3.z = tmpvar_2;
  tmpvar_3.w = tmpvar_2;
  vertexPosition_1 = (u_scale.x * tmpvar_3.xyz);
  vertexPosition_1 = (((
    (((u_quatRotation.w * u_quatRotation.w) - ((
      (u_quatRotation.x * u_quatRotation.x)
     + 
      (u_quatRotation.y * u_quatRotation.y)
    ) + (u_quatRotation.z * u_quatRotation.z))) * vertexPosition_1)
   + 
    ((2.0 * dot (vertexPosition_1, u_quatRotation.xyz)) * u_quatRotation.xyz)
  ) + (
    (2.0 * u_quatRotation.w)
   * 
    ((u_quatRotation.yzx * vertexPosition_1.zxy) - (u_quatRotation.zxy * vertexPosition_1.yzx))
  )) + u_translation.xyz);
  highp vec4 tmpvar_4;
  tmpvar_4.w = 1.0;
  tmpvar_4.xyz = vertexPosition_1;
  highp vec4 tmpvar_5;
  tmpvar_5 = (u_proj * (u_view * tmpvar_4));
  gl_Position = tmpvar_5;
  v_texcoord6 = a_texcoord7;
  v_texcoord7 = tmpvar_5;
}

