precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec3 v_bitangent;
in float v_depth;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord7;
uniform sampler2D s_patterns;
uniform vec4 s_patterns_Res;
uniform vec4 u_TileFillData;
uniform vec4 u_eyePos;
uniform vec4 u_PackedParams;
uniform vec4 u_TileFragClip;
void main ()
{
  vec2 worldUV_1;
  vec4 fragColor_2;
  float tmpvar_3;
  tmpvar_3 = (float((u_TileFragClip.x <= v_texcoord7.x)) * float((v_texcoord7.x <= u_TileFragClip.z)));
  float tmpvar_4;
  tmpvar_4 = (float((u_TileFragClip.y <= v_texcoord7.y)) * float((v_texcoord7.y <= u_TileFragClip.w)));
  if (((tmpvar_3 * tmpvar_4) == 0.0)) {
    discard;
  };
  worldUV_1 = ((v_bitangent.xy + u_eyePos.xy) * 1000.0);
  worldUV_1 = (worldUV_1 / exp2((20.0 - u_TileFillData.x)));
  vec2 tmpvar_5;
  tmpvar_5.x = (float(mod (worldUV_1.x, v_texcoord4.z)));
  tmpvar_5.y = (float(mod (worldUV_1.y, v_texcoord4.w)));
  fragColor_2 = (v_texcoord5 * textureLod (s_patterns, (v_texcoord4.xy + (tmpvar_5 * s_patterns_Res.zw)), 0.0));
  vec4 tmpvar_6;
  tmpvar_6.xyz = fragColor_2.xyz;
  tmpvar_6.w = ((fragColor_2.w * u_PackedParams.y) * v_depth);
  bgfx_FragData[0] = tmpvar_6;
  bgfx_FragData[1] = vec4(0.0, 0.0, 0.0, 0.0);
}

