precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_BackgroundColor;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  float tmpvar_6;
  tmpvar_6 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  vec3 tmpvar_15;
  tmpvar_15.x = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)));
  tmpvar_15.y = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)));
  tmpvar_15.z = (2.0 * (tmpvar_6 * u_tileSize.x));
  normal_5 = normalize(tmpvar_15);
  vec4 color_16;
  vec4 tmpvar_17;
  tmpvar_17 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_16.xyz = mix (u_BackgroundColor.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex0.x));
  color_16.w = max (u_BackgroundColor.w, tmpvar_17.w);
  vec3 tangentSun_18;
  vec3 planetNormal_19;
  float tmpvar_20;
  tmpvar_20 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_21;
  tmpvar_21 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_19.x = (cos(tmpvar_21) * cos(tmpvar_20));
  planetNormal_19.y = (cos(tmpvar_21) * sin(tmpvar_20));
  planetNormal_19.z = sin(tmpvar_21);
  vec3 tmpvar_22;
  tmpvar_22 = normalize(((planetNormal_19.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_19.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_18.x = -(dot (tmpvar_22, v_texcoord3.xyz));
  tangentSun_18.y = -(dot (normalize(
    ((planetNormal_19.yzx * tmpvar_22.zxy) - (planetNormal_19.zxy * tmpvar_22.yzx))
  ), v_texcoord3.xyz));
  tangentSun_18.z = dot (planetNormal_19, v_texcoord3.xyz);
  vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.xyz = mix (vec3(clamp (dot (tangentSun_18, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_24;
  tmpvar_24 = mix (color_16, tmpvar_23, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_24.w;
  float tmpvar_25;
  tmpvar_25 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_26;
  tmpvar_26 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_27;
  tmpvar_27 = max ((tmpvar_26.y - (tmpvar_26.x * tmpvar_26.x)), u_sunShadowVSMParams.x);
  float tmpvar_28;
  tmpvar_28 = (tmpvar_25 - tmpvar_26.x);
  fragColor_4.xyz = mix (tmpvar_24.xyz, vec3(min (max (
    float((tmpvar_25 <= tmpvar_26.x))
  , 
    clamp ((((tmpvar_27 / 
      (tmpvar_27 + (tmpvar_28 * tmpvar_28))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_29;
  tmpvar_29 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_FogColor.xyz, ((tmpvar_29 * 
    (tmpvar_29 * (3.0 - (2.0 * tmpvar_29)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_30;
  tmpvar_30 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_31;
  tmpvar_31 = floor(tmpvar_30);
  d_2 = ((tmpvar_30 - tmpvar_31) * 256.0);
  float tmpvar_32;
  tmpvar_32 = floor(d_2);
  d_2 = ((d_2 - tmpvar_32) * 256.0);
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.x = (tmpvar_31 / 256.0);
  tmpvar_33.y = (tmpvar_32 / 256.0);
  tmpvar_33.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_33;
  vec3 tmpvar_34;
  tmpvar_34 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_35;
  tmpvar_35.x = (tmpvar_34.y * 0.5);
  tmpvar_35.y = (-(tmpvar_34.x) * 0.5);
  tmpvar_35.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_34.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_36;
  tmpvar_36 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_35)
    ) - tmpvar_35)), tmpvar_34)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_36 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

