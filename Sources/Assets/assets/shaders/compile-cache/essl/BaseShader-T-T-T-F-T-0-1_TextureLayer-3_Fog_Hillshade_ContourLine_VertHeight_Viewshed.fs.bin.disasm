precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_HillshadeLightDir;
uniform vec4 u_HillshadeAlbedo;
uniform vec4 u_HillshadeParams;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  float tmpvar_5;
  tmpvar_5 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14.x = ((textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - (textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)));
  tmpvar_14.y = ((textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - (textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)));
  tmpvar_14.z = (2.0 * (tmpvar_5 * u_tileSize.x));
  normal_4 = normalize(tmpvar_14);
  vec4 color_15;
  vec4 tmpvar_16;
  tmpvar_16 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_15.xyz = mix (u_BackgroundColor.xyz, tmpvar_16.xyz, (tmpvar_16.w * u_OpacityTex0.x));
  color_15.w = max (u_BackgroundColor.w, tmpvar_16.w);
  vec4 tmpvar_17;
  tmpvar_17 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_15.xyz = mix (color_15.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex1.x));
  color_15.w = max (color_15.w, tmpvar_17.w);
  vec4 tmpvar_18;
  tmpvar_18 = texture (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_15.xyz = mix (color_15.xyz, tmpvar_18.xyz, (tmpvar_18.w * u_OpacityTex2.x));
  color_15.w = max (color_15.w, tmpvar_18.w);
  fragColor_3.w = color_15.w;
  vec3 tmpvar_19;
  tmpvar_19.xy = (u_HillshadeParams.y * normal_4.xy);
  tmpvar_19.z = normal_4.z;
  fragColor_3.xyz = mix (color_15.xyz, ((u_HillshadeParams.x + 
    ((1.0 - u_HillshadeParams.x) * (0.5 * (1.0 + dot (
      normalize(tmpvar_19)
    , 
      -(u_HillshadeLightDir.xyz)
    ))))
  ) * u_HillshadeAlbedo.xyz), u_HillshadeAlbedo.w);
  float tmpvar_20;
  tmpvar_20 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_21;
  tmpvar_21 = (1.0 - (tmpvar_20 * (tmpvar_20 * 
    (3.0 - (2.0 * tmpvar_20))
  )));
  float tmpvar_22;
  float tmpvar_23;
  tmpvar_23 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_24;
  tmpvar_24 = max (u_NearFarFocus.z, 1.5);
  tmpvar_22 = (u_ContourParams0.w * min (1.0, (tmpvar_24 / 
    sqrt(tmpvar_23)
  )));
  float tmpvar_25;
  tmpvar_25 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_26;
  tmpvar_26 = (0.5 * u_ContourParams0.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_22, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_22)))
       * 
        abs((fract((tmpvar_25 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_25))
       + 
        abs(dFdy(tmpvar_25))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_26) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_26))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_21));
  float tmpvar_27;
  tmpvar_27 = (u_ContourParams1.w * min (1.0, (tmpvar_24 / 
    sqrt(tmpvar_23)
  )));
  float tmpvar_28;
  tmpvar_28 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_29;
  tmpvar_29 = (0.5 * u_ContourParams1.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_27, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_27)))
       * 
        abs((fract((tmpvar_28 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_28))
       + 
        abs(dFdy(tmpvar_28))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_29) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_29))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_21));
  float tmpvar_30;
  vec3 tmpvar_31;
  tmpvar_31 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_30 = sqrt(dot (tmpvar_31, tmpvar_31));
  vec3 rayDir_32;
  rayDir_32.xz = tmpvar_31.xz;
  rayDir_32.y = -(tmpvar_31.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_30 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_30 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_32).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_33;
  tmpvar_33 = sqrt(dot (tmpvar_31, tmpvar_31));
  float period_34;
  period_34 = (u_viewshedRange0.x / 4.0);
  float tmpvar_35;
  tmpvar_35 = ((1.0/(period_34)) * tmpvar_33);
  float tmpvar_36;
  tmpvar_36 = (0.5 * period_34);
  float tmpvar_37;
  tmpvar_37 = (50.0 * tmpvar_33);
  vec4 tmpvar_38;
  tmpvar_38.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_38.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_38.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_35 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_35))
     + 
      abs(dFdy(tmpvar_35))
    )), 1.0))
   * 
    (float((-(tmpvar_36) <= tmpvar_33)) * float((tmpvar_33 <= (u_viewshedRange0.x + tmpvar_36))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_37 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_37))
     + 
      abs(dFdy(tmpvar_37))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_33)) * float((tmpvar_33 <= 0.09)))
  )));
  float tmpvar_39;
  tmpvar_39 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, ((tmpvar_39 * 
    (tmpvar_39 * (3.0 - (2.0 * tmpvar_39)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_40;
  tmpvar_40 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_41;
  tmpvar_41 = floor(tmpvar_40);
  d_2 = ((tmpvar_40 - tmpvar_41) * 256.0);
  float tmpvar_42;
  tmpvar_42 = floor(d_2);
  d_2 = ((d_2 - tmpvar_42) * 256.0);
  mediump vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.x = (tmpvar_41 / 256.0);
  tmpvar_43.y = (tmpvar_42 / 256.0);
  tmpvar_43.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_43;
  vec3 tmpvar_44;
  tmpvar_44 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_45;
  tmpvar_45.x = (tmpvar_44.y * 0.5);
  tmpvar_45.y = (-(tmpvar_44.x) * 0.5);
  tmpvar_45.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_44.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_46;
  tmpvar_46 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_45)
    ) - tmpvar_45)), tmpvar_44)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_46 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

