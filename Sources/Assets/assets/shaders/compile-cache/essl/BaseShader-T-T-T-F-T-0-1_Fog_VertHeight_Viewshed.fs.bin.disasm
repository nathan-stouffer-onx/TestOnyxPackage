precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  fragColor_3.w = u_BackgroundColor.w;
  float tmpvar_20;
  vec3 tmpvar_21;
  tmpvar_21 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_20 = sqrt(dot (tmpvar_21, tmpvar_21));
  vec3 rayDir_22;
  rayDir_22.xz = tmpvar_21.xz;
  rayDir_22.y = -(tmpvar_21.y);
  fragColor_3.xyz = mix (u_BackgroundColor.xyz, ((
    ((u_BackgroundColor.x + u_BackgroundColor.y) + u_BackgroundColor.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_20 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_20 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_22).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_23;
  tmpvar_23 = sqrt(dot (tmpvar_21, tmpvar_21));
  float period_24;
  period_24 = (u_viewshedRange0.x / 4.0);
  float tmpvar_25;
  tmpvar_25 = ((1.0/(period_24)) * tmpvar_23);
  float tmpvar_26;
  tmpvar_26 = (0.5 * period_24);
  float tmpvar_27;
  tmpvar_27 = (50.0 * tmpvar_23);
  vec4 tmpvar_28;
  tmpvar_28.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_28.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_28.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_25 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_25))
     + 
      abs(dFdy(tmpvar_25))
    )), 1.0))
   * 
    (float((-(tmpvar_26) <= tmpvar_23)) * float((tmpvar_23 <= (u_viewshedRange0.x + tmpvar_26))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_27 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_27))
     + 
      abs(dFdy(tmpvar_27))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_23)) * float((tmpvar_23 <= 0.09)))
  )));
  float tmpvar_29;
  tmpvar_29 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, (tmpvar_29 * (tmpvar_29 * 
    (3.0 - (2.0 * tmpvar_29))
  )));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_30;
  tmpvar_30 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_31;
  tmpvar_31 = floor(tmpvar_30);
  d_2 = ((tmpvar_30 - tmpvar_31) * 256.0);
  float tmpvar_32;
  tmpvar_32 = floor(d_2);
  d_2 = ((d_2 - tmpvar_32) * 256.0);
  mediump vec4 tmpvar_33;
  tmpvar_33.w = 1.0;
  tmpvar_33.x = (tmpvar_31 / 256.0);
  tmpvar_33.y = (tmpvar_32 / 256.0);
  tmpvar_33.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_33;
  vec3 tmpvar_34;
  tmpvar_34 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_35;
  tmpvar_35.x = (tmpvar_34.y * 0.5);
  tmpvar_35.y = (-(tmpvar_34.x) * 0.5);
  tmpvar_35.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_34.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_36;
  tmpvar_36 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_35)
    ) - tmpvar_35)), tmpvar_34)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_36 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

