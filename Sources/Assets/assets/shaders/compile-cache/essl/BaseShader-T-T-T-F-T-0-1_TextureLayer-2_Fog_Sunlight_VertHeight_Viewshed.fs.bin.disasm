precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_BackgroundColor;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  float tmpvar_6;
  tmpvar_6 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  vec3 tmpvar_15;
  tmpvar_15.x = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)));
  tmpvar_15.y = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)));
  tmpvar_15.z = (2.0 * (tmpvar_6 * u_tileSize.x));
  normal_5 = normalize(tmpvar_15);
  vec4 color_16;
  vec4 tmpvar_17;
  tmpvar_17 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_16.xyz = mix (u_BackgroundColor.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex0.x));
  color_16.w = max (u_BackgroundColor.w, tmpvar_17.w);
  vec4 tmpvar_18;
  tmpvar_18 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_16.xyz = mix (color_16.xyz, tmpvar_18.xyz, (tmpvar_18.w * u_OpacityTex1.x));
  color_16.w = max (color_16.w, tmpvar_18.w);
  vec3 tangentSun_19;
  vec3 planetNormal_20;
  float tmpvar_21;
  tmpvar_21 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_22;
  tmpvar_22 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_20.x = (cos(tmpvar_22) * cos(tmpvar_21));
  planetNormal_20.y = (cos(tmpvar_22) * sin(tmpvar_21));
  planetNormal_20.z = sin(tmpvar_22);
  vec3 tmpvar_23;
  tmpvar_23 = normalize(((planetNormal_20.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_20.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_19.x = -(dot (tmpvar_23, v_texcoord3.xyz));
  tangentSun_19.y = -(dot (normalize(
    ((planetNormal_20.yzx * tmpvar_23.zxy) - (planetNormal_20.zxy * tmpvar_23.yzx))
  ), v_texcoord3.xyz));
  tangentSun_19.z = dot (planetNormal_20, v_texcoord3.xyz);
  vec4 tmpvar_24;
  tmpvar_24.w = 1.0;
  tmpvar_24.xyz = mix (vec3(clamp (dot (tangentSun_19, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_25;
  tmpvar_25 = mix (color_16, tmpvar_24, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_25.w;
  float tmpvar_26;
  tmpvar_26 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_27;
  tmpvar_27 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_28;
  tmpvar_28 = max ((tmpvar_27.y - (tmpvar_27.x * tmpvar_27.x)), u_sunShadowVSMParams.x);
  float tmpvar_29;
  tmpvar_29 = (tmpvar_26 - tmpvar_27.x);
  fragColor_4.xyz = mix (tmpvar_25.xyz, vec3(min (max (
    float((tmpvar_26 <= tmpvar_27.x))
  , 
    clamp ((((tmpvar_28 / 
      (tmpvar_28 + (tmpvar_29 * tmpvar_29))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_30;
  vec3 tmpvar_31;
  tmpvar_31 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_30 = sqrt(dot (tmpvar_31, tmpvar_31));
  vec3 rayDir_32;
  rayDir_32.xz = tmpvar_31.xz;
  rayDir_32.y = -(tmpvar_31.y);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((
    ((fragColor_4.x + fragColor_4.y) + fragColor_4.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_30 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_30 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_32).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_33;
  tmpvar_33 = sqrt(dot (tmpvar_31, tmpvar_31));
  float period_34;
  period_34 = (u_viewshedRange0.x / 4.0);
  float tmpvar_35;
  tmpvar_35 = ((1.0/(period_34)) * tmpvar_33);
  float tmpvar_36;
  tmpvar_36 = (0.5 * period_34);
  float tmpvar_37;
  tmpvar_37 = (50.0 * tmpvar_33);
  vec4 tmpvar_38;
  tmpvar_38.xyz = mix (fragColor_4.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_38.w = u_viewshedRingTint0.w;
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_38.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_35 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_35))
     + 
      abs(dFdy(tmpvar_35))
    )), 1.0))
   * 
    (float((-(tmpvar_36) <= tmpvar_33)) * float((tmpvar_33 <= (u_viewshedRange0.x + tmpvar_36))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_37 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_37))
     + 
      abs(dFdy(tmpvar_37))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_33)) * float((tmpvar_33 <= 0.09)))
  )));
  float tmpvar_39;
  tmpvar_39 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_FogColor.xyz, ((tmpvar_39 * 
    (tmpvar_39 * (3.0 - (2.0 * tmpvar_39)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_40;
  tmpvar_40 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_41;
  tmpvar_41 = floor(tmpvar_40);
  d_2 = ((tmpvar_40 - tmpvar_41) * 256.0);
  float tmpvar_42;
  tmpvar_42 = floor(d_2);
  d_2 = ((d_2 - tmpvar_42) * 256.0);
  mediump vec4 tmpvar_43;
  tmpvar_43.w = 1.0;
  tmpvar_43.x = (tmpvar_41 / 256.0);
  tmpvar_43.y = (tmpvar_42 / 256.0);
  tmpvar_43.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_43;
  vec3 tmpvar_44;
  tmpvar_44 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_45;
  tmpvar_45.x = (tmpvar_44.y * 0.5);
  tmpvar_45.y = (-(tmpvar_44.x) * 0.5);
  tmpvar_45.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_44.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_46;
  tmpvar_46 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_45)
    ) - tmpvar_45)), tmpvar_44)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_46 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

