precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform vec4 u_IntersectTint;
uniform vec4 u_IntersectInverted;
uniform vec4 u_ElevationExtents;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  float tmpvar_6;
  tmpvar_6 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  vec3 tmpvar_15;
  tmpvar_15.x = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)));
  tmpvar_15.y = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)));
  tmpvar_15.z = (2.0 * (tmpvar_6 * u_tileSize.x));
  normal_5 = normalize(tmpvar_15);
  vec4 color_16;
  vec4 tmpvar_17;
  tmpvar_17 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_16.xyz = mix (u_BackgroundColor.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex0.x));
  color_16.w = max (u_BackgroundColor.w, tmpvar_17.w);
  vec4 tmpvar_18;
  tmpvar_18 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_16.xyz = mix (color_16.xyz, tmpvar_18.xyz, (tmpvar_18.w * u_OpacityTex1.x));
  color_16.w = max (color_16.w, tmpvar_18.w);
  vec4 tmpvar_19;
  tmpvar_19 = texture (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_16.xyz = mix (color_16.xyz, tmpvar_19.xyz, (tmpvar_19.w * u_OpacityTex2.x));
  color_16.w = max (color_16.w, tmpvar_19.w);
  vec3 tangentSun_20;
  vec3 planetNormal_21;
  float tmpvar_22;
  tmpvar_22 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_23;
  tmpvar_23 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_21.x = (cos(tmpvar_23) * cos(tmpvar_22));
  planetNormal_21.y = (cos(tmpvar_23) * sin(tmpvar_22));
  planetNormal_21.z = sin(tmpvar_23);
  vec3 tmpvar_24;
  tmpvar_24 = normalize(((planetNormal_21.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_21.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_20.x = -(dot (tmpvar_24, v_texcoord3.xyz));
  tangentSun_20.y = -(dot (normalize(
    ((planetNormal_21.yzx * tmpvar_24.zxy) - (planetNormal_21.zxy * tmpvar_24.yzx))
  ), v_texcoord3.xyz));
  tangentSun_20.z = dot (planetNormal_21, v_texcoord3.xyz);
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = mix (vec3(clamp (dot (tangentSun_20, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_26;
  tmpvar_26 = mix (color_16, tmpvar_25, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_26.w;
  float tmpvar_27;
  tmpvar_27 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_28;
  tmpvar_28 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_29;
  tmpvar_29 = max ((tmpvar_28.y - (tmpvar_28.x * tmpvar_28.x)), u_sunShadowVSMParams.x);
  float tmpvar_30;
  tmpvar_30 = (tmpvar_27 - tmpvar_28.x);
  fragColor_4.xyz = mix (tmpvar_26.xyz, vec3(min (max (
    float((tmpvar_27 <= tmpvar_28.x))
  , 
    clamp ((((tmpvar_29 / 
      (tmpvar_29 + (tmpvar_30 * tmpvar_30))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_31;
  tmpvar_31 = (1.570796 - (sign(normal_5.z) * (1.570796 - 
    (sqrt((1.0 - abs(normal_5.z))) * (1.570796 + (abs(normal_5.z) * (-0.2146018 + 
      (abs(normal_5.z) * (0.08656672 + (abs(normal_5.z) * -0.03102955)))
    ))))
  )));
  float rad_32;
  float vec_y_33;
  vec_y_33 = -(normal_5.y);
  float tmpvar_34;
  float tmpvar_35;
  tmpvar_35 = (min (abs(
    (vec_y_33 / normal_5.x)
  ), 1.0) / max (abs(
    (vec_y_33 / normal_5.x)
  ), 1.0));
  float tmpvar_36;
  tmpvar_36 = (tmpvar_35 * tmpvar_35);
  tmpvar_36 = (((
    ((((
      ((((-0.01213232 * tmpvar_36) + 0.05368138) * tmpvar_36) - 0.1173503)
     * tmpvar_36) + 0.1938925) * tmpvar_36) - 0.3326756)
   * tmpvar_36) + 0.9999793) * tmpvar_35);
  tmpvar_36 = (tmpvar_36 + (float(
    (abs((vec_y_33 / normal_5.x)) > 1.0)
  ) * (
    (tmpvar_36 * -2.0)
   + 1.570796)));
  tmpvar_34 = (tmpvar_36 * sign((vec_y_33 / normal_5.x)));
  if ((abs(normal_5.x) > (1e-08 * abs(vec_y_33)))) {
    if ((normal_5.x < 0.0)) {
      if ((vec_y_33 >= 0.0)) {
        tmpvar_34 += 3.141593;
      } else {
        tmpvar_34 = (tmpvar_34 - 3.141593);
      };
    };
  } else {
    tmpvar_34 = (sign(vec_y_33) * 1.570796);
  };
  rad_32 = (tmpvar_34 - 1.570796);
  rad_32 = (rad_32 + (float(
    (rad_32 < 0.0)
  ) * 6.283185));
  rad_32 = (6.283185 - rad_32);
  float tmpvar_37;
  tmpvar_37 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_38;
  tmpvar_38 = (((tmpvar_37 * 
    ((v_texcoord7.w - u_ElevationExtents.x) / ((tmpvar_37 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_37)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_39;
  tmpvar_39.x = (float(mod (tmpvar_38, s_ElevationShadeTexture_Res.x)));
  tmpvar_39.y = floor((tmpvar_38 / s_ElevationShadeTexture_Res.y));
  vec2 tmpvar_40;
  tmpvar_40.y = 0.0;
  tmpvar_40.x = (tmpvar_31 / 1.570796);
  vec2 tmpvar_41;
  tmpvar_41.y = 0.0;
  tmpvar_41.x = (rad_32 / 6.283185);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((
    ((fragColor_4.x + fragColor_4.y) + fragColor_4.z)
   / 3.0) * u_IntersectTint.xyz), (abs(
    (u_IntersectInverted.x - ((texture (s_ElevationShadeTexture, (tmpvar_39 / s_ElevationShadeTexture_Res.xy)).x * texture (s_SlopeAngleShadeTexture, tmpvar_40).x) * texture (s_SlopeAspectShadeTexture, tmpvar_41).x))
  ) * u_IntersectTint.w));
  float tmpvar_42;
  tmpvar_42 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_FogColor.xyz, ((tmpvar_42 * 
    (tmpvar_42 * (3.0 - (2.0 * tmpvar_42)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_43;
  tmpvar_43 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_44;
  tmpvar_44 = floor(tmpvar_43);
  d_2 = ((tmpvar_43 - tmpvar_44) * 256.0);
  float tmpvar_45;
  tmpvar_45 = floor(d_2);
  d_2 = ((d_2 - tmpvar_45) * 256.0);
  mediump vec4 tmpvar_46;
  tmpvar_46.w = 1.0;
  tmpvar_46.x = (tmpvar_44 / 256.0);
  tmpvar_46.y = (tmpvar_45 / 256.0);
  tmpvar_46.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_46;
  vec3 tmpvar_47;
  tmpvar_47 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_48;
  tmpvar_48.x = (tmpvar_47.y * 0.5);
  tmpvar_48.y = (-(tmpvar_47.x) * 0.5);
  tmpvar_48.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_47.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_49;
  tmpvar_49 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_48)
    ) - tmpvar_48)), tmpvar_47)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_49 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

