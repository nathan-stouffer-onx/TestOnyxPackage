precision highp int;
precision highp float;
in highp vec4 a_normal;
in highp vec3 a_position;
in highp vec4 a_texcoord7;
out highp vec4 v_color4;
out highp vec3 v_normal;
out highp vec4 v_texcoord0;
out vec4 v_texcoord1;
out highp vec4 v_texcoord2;
out highp vec4 v_texcoord3;
out vec4 v_texcoord4;
out highp vec4 v_texcoord5;
out vec4 v_texcoord6;
out vec4 v_texcoord7;
uniform highp mat4 u_view;
uniform highp mat4 u_proj;
uniform mat4 u_model[32];
uniform sampler2D s_heightTextureVert;
uniform highp vec4 u_tileSize;
uniform highp vec4 u_tileDistortion;
uniform highp vec4 u_ScaleOffsetHeight;
uniform highp vec4 u_SunTimeData;
uniform highp vec4 u_sunTileMin;
uniform highp vec4 u_sunTileMax;
uniform highp vec4 u_sunShadowTileMin;
uniform highp vec4 u_sunShadowTileMax;
uniform highp vec4 u_sunShadowFarPlane;
uniform highp mat4 u_sunShadowView;
uniform highp mat4 u_sunShadowProj;
uniform highp vec4 u_nearFarPlane;
uniform highp vec4 u_tileMin;
uniform highp vec4 u_tileMax;
void main ()
{
  vec4 sunShadowUV_1;
  vec4 shadowWorldPosition_2;
  vec3 vertexPosition_3;
  vec4 worldPosition_4;
  highp vec4 normal_5;
  float tmpvar_6;
  tmpvar_6 = (u_tileMin.z + (a_position.z * u_tileMax.z));
  vec4 tmpvar_7;
  tmpvar_7.xy = mix (u_tileMin.xy, u_tileMax.xy, a_position.xy);
  tmpvar_7.z = tmpvar_6;
  tmpvar_7.w = tmpvar_6;
  worldPosition_4 = tmpvar_7;
  vertexPosition_3 = tmpvar_7.xyz;
  highp vec4 tmpvar_8;
  tmpvar_8.w = 0.0;
  tmpvar_8.xyz = a_normal.xyz;
  normal_5 = (u_model[0] * tmpvar_8);
  highp vec4 tmpvar_9;
  tmpvar_9.zw = vec2(0.0, 0.0);
  tmpvar_9.xy = (u_sunTileMin.xy + ((u_sunTileMax.xy - u_sunTileMin.xy) * a_texcoord7.xy));
  highp vec3 sunNormal_10;
  highp float flip_11;
  highp float offsetSign_12;
  highp float offset_13;
  highp float tmpvar_14;
  tmpvar_14 = (float(mod ((280.4665 + (u_SunTimeData.x * 
    (36000.77 + (u_SunTimeData.x * 0.0003032))
  )), 360.0)));
  highp float tmpvar_15;
  tmpvar_15 = (357.5291 + (u_SunTimeData.x * (35999.05 - 
    (0.0001537 * u_SunTimeData.x)
  )));
  highp float tmpvar_16;
  tmpvar_16 = (0.01670863 - (u_SunTimeData.x * (4.2037e-05 + 
    (1.267e-07 * u_SunTimeData.x)
  )));
  highp float x_17;
  x_17 = (0.397767 * sin((
    ((((tmpvar_14 + 
      (((sin(
        ((tmpvar_15 * 3.141593) / 180.0)
      ) * (1.914602 - 
        (u_SunTimeData.x * (0.004817 + (1.4e-05 * u_SunTimeData.x)))
      )) + (sin(
        ((6.283185 * tmpvar_15) / 180.0)
      ) * (0.019993 - 
        (0.000101 * u_SunTimeData.x)
      ))) + (sin((0.05235988 * tmpvar_15)) * 0.000289))
    ) - 0.00569) - (0.00478 * sin(
      (((125.04 - (1934.136 * u_SunTimeData.x)) * 3.141593) / 180.0)
    ))) * 3.141593)
   / 180.0)));
  highp float tmpvar_18;
  tmpvar_18 = (57.29578 * (sign(x_17) * (1.570796 - 
    (sqrt((1.0 - abs(x_17))) * (1.570796 + (abs(x_17) * (-0.2146018 + 
      (abs(x_17) * (0.08656672 + (abs(x_17) * -0.03102955)))
    ))))
  )));
  highp float tmpvar_19;
  tmpvar_19 = (float(mod (((u_SunTimeData.y * 1440.0) + (229.1831 * 
    ((((
      (0.043031 * sin((0.03490658 * tmpvar_14)))
     - 
      ((2.0 * tmpvar_16) * sin(((tmpvar_15 * 3.141593) / 180.0)))
    ) + (
      ((0.172124 * tmpvar_16) * sin((0.01745329 * tmpvar_15)))
     * 
      cos(((6.283185 * tmpvar_14) / 180.0))
    )) - (0.0009258335 * sin(
      ((12.56637 * tmpvar_14) / 180.0)
    ))) - (((1.25 * tmpvar_16) * tmpvar_16) * sin((0.03490658 * tmpvar_15))))
  )), 1440.0)));
  highp float tmpvar_20;
  if (((tmpvar_19 / 4.0) < 0.0)) {
    tmpvar_20 = ((tmpvar_19 / 4.0) + 180.0);
  } else {
    tmpvar_20 = ((tmpvar_19 / 4.0) - 180.0);
  };
  highp float x_21;
  x_21 = (cos((
    (tmpvar_18 * 3.141593)
   / 180.0)) * cos((
    (tmpvar_20 * 3.141593)
   / 180.0)));
  highp float tmpvar_22;
  tmpvar_22 = (57.29578 * (1.570796 - (
    sign(x_21)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(x_21)
    )) * (1.570796 + (
      abs(x_21)
     * 
      (-0.2146018 + (abs(x_21) * (0.08656672 + (
        abs(x_21)
       * -0.03102955))))
    ))))
  )));
  highp float tmpvar_23;
  tmpvar_23 = (90.0 - tmpvar_22);
  offset_13 = 0.0;
  offsetSign_12 = 1.0;
  flip_11 = 180.0;
  if ((tmpvar_20 <= 0.0)) {
    offset_13 = 540.0;
    offsetSign_12 = -1.0;
    flip_11 = 0.0;
  };
  highp float tmpvar_24;
  tmpvar_24 = (-(sin(
    (0.01745329 * tmpvar_18)
  )) / sin((0.01745329 * tmpvar_22)));
  highp float tmpvar_25;
  tmpvar_25 = (sign(tmpvar_24) * min (abs(tmpvar_24), 1.0));
  highp float tmpvar_26;
  tmpvar_26 = (float(mod (((offset_13 + 
    (((offsetSign_12 * 180.0) / 3.141593) * (1.570796 - (sign(tmpvar_25) * (1.570796 - 
      (sqrt((1.0 - abs(tmpvar_25))) * (1.570796 + (abs(tmpvar_25) * (-0.2146018 + 
        (abs(tmpvar_25) * (0.08656672 + (abs(tmpvar_25) * -0.03102955)))
      ))))
    ))))
  ) + flip_11), 360.0)));
  sunNormal_10.z = (cos((
    (tmpvar_23 * 3.141593)
   / 180.0)) * cos((
    (tmpvar_26 * 3.141593)
   / 180.0)));
  sunNormal_10.y = (cos((
    (tmpvar_23 * 3.141593)
   / 180.0)) * sin((
    (tmpvar_26 * 3.141593)
   / 180.0)));
  sunNormal_10.x = sin(((tmpvar_23 * 3.141593) / 180.0));
  highp vec4 tmpvar_27;
  tmpvar_27.w = 0.0;
  tmpvar_27.xyz = sunNormal_10;
  float tmpvar_28;
  highp vec2 tmpvar_29;
  tmpvar_29 = (u_ScaleOffsetHeight.zw * a_texcoord7.xy);
  tmpvar_28 = (textureLod (s_heightTextureVert, (tmpvar_29 + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, a_texcoord7.y));
  vec2 tmpvar_30;
  tmpvar_30.x = tmpvar_28;
  tmpvar_30.y = textureLod (s_heightTextureVert, (tmpvar_29 + u_ScaleOffsetHeight.xy), 0.0).x;
  worldPosition_4.zw = (vec2(tmpvar_6) + tmpvar_30);
  vertexPosition_3.z = (tmpvar_6 + (tmpvar_28 * u_tileSize.z));
  vec4 tmpvar_31;
  tmpvar_31.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_31.x = (sqrt(dot (worldPosition_4.xyz, worldPosition_4.xyz)) / u_nearFarPlane.y);
  float tmpvar_32;
  tmpvar_32 = (u_sunShadowTileMin.z + (a_position.z * u_sunShadowTileMax.z));
  vec4 tmpvar_33;
  tmpvar_33.xy = mix (u_sunShadowTileMin.xy, u_sunShadowTileMax.xy, a_position.xy);
  tmpvar_33.z = tmpvar_32;
  tmpvar_33.w = tmpvar_32;
  shadowWorldPosition_2.xyw = tmpvar_33.xyw;
  shadowWorldPosition_2.z = (tmpvar_32 + (tmpvar_28 * u_tileSize.z));
  vec4 tmpvar_34;
  tmpvar_34.w = 1.0;
  tmpvar_34.xyz = shadowWorldPosition_2.xyz;
  sunShadowUV_1.xyw = (u_sunShadowProj * (u_sunShadowView * tmpvar_34)).xyw;
  sunShadowUV_1.z = (sqrt(dot (shadowWorldPosition_2.xyz, shadowWorldPosition_2.xyz)) / u_sunShadowFarPlane.x);
  vec4 tmpvar_35;
  tmpvar_35.w = 1.0;
  tmpvar_35.xyz = vertexPosition_3;
  vec4 tmpvar_36;
  tmpvar_36 = (u_proj * (u_view * tmpvar_35));
  gl_Position = tmpvar_36;
  v_normal = normal_5.xyz;
  v_texcoord7 = worldPosition_4;
  v_texcoord6 = tmpvar_36;
  v_texcoord5 = a_texcoord7;
  v_texcoord4 = tmpvar_31;
  v_texcoord3 = tmpvar_27;
  v_texcoord2 = tmpvar_9;
  v_texcoord1 = sunShadowUV_1;
  v_texcoord0 = u_tileDistortion;
  v_color4 = u_ScaleOffsetHeight;
}

