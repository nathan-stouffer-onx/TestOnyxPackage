precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform sampler2D s_texture0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ElevationExtents;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_BackgroundColor;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  vec4 color_20;
  vec4 tmpvar_21;
  tmpvar_21 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_20.xyz = mix (u_BackgroundColor.xyz, tmpvar_21.xyz, (tmpvar_21.w * u_OpacityTex0.x));
  color_20.w = max (u_BackgroundColor.w, tmpvar_21.w);
  fragColor_3.w = color_20.w;
  float tmpvar_22;
  tmpvar_22 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_23;
  tmpvar_23 = (((tmpvar_22 * 
    (((v_texcoord7.w + u_eyePos.z) - u_ElevationExtents.x) / ((tmpvar_22 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_22)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_24;
  tmpvar_24.x = (float(mod (tmpvar_23, s_ElevationShadeTexture_Res.x)));
  tmpvar_24.y = floor((tmpvar_23 / s_ElevationShadeTexture_Res.y));
  vec4 tmpvar_25;
  tmpvar_25 = texture (s_ElevationShadeTexture, (tmpvar_24 / s_ElevationShadeTexture_Res.xy));
  fragColor_3.xyz = mix (color_20.xyz, tmpvar_25.xyz, tmpvar_25.w);
  vec2 tmpvar_26;
  tmpvar_26.y = 0.0;
  tmpvar_26.x = ((1.570796 - (
    sign(normal_4.z)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(normal_4.z)
    )) * (1.570796 + (
      abs(normal_4.z)
     * 
      (-0.2146018 + (abs(normal_4.z) * (0.08656672 + (
        abs(normal_4.z)
       * -0.03102955))))
    ))))
  )) / 1.570796);
  vec4 tmpvar_27;
  tmpvar_27 = texture (s_SlopeAngleShadeTexture, tmpvar_26);
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_27.xyz, tmpvar_27.w);
  float tmpvar_28;
  tmpvar_28 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, (tmpvar_28 * (tmpvar_28 * 
    (3.0 - (2.0 * tmpvar_28))
  )));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_29;
  tmpvar_29 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_30;
  tmpvar_30 = floor(tmpvar_29);
  d_2 = ((tmpvar_29 - tmpvar_30) * 256.0);
  float tmpvar_31;
  tmpvar_31 = floor(d_2);
  d_2 = ((d_2 - tmpvar_31) * 256.0);
  mediump vec4 tmpvar_32;
  tmpvar_32.w = 1.0;
  tmpvar_32.x = (tmpvar_30 / 256.0);
  tmpvar_32.y = (tmpvar_31 / 256.0);
  tmpvar_32.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_32;
  vec3 tmpvar_33;
  tmpvar_33 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_34;
  tmpvar_34.x = (tmpvar_33.y * 0.5);
  tmpvar_34.y = (-(tmpvar_33.x) * 0.5);
  tmpvar_34.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_33.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_35;
  tmpvar_35 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_34)
    ) - tmpvar_34)), tmpvar_33)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_35 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

