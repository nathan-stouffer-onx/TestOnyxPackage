precision highp int;
precision highp float;
in highp vec3 a_position;
in highp vec4 a_texcoord7;
out vec4 v_texcoord4;
out highp vec4 v_texcoord5;
out vec4 v_texcoord6;
out vec4 v_texcoord7;
uniform highp mat4 u_view;
uniform highp mat4 u_proj;
uniform sampler2D s_heightTexture;
uniform highp vec4 u_tileSize;
uniform highp vec4 u_tileDistortion;
uniform highp vec4 u_ScaleOffsetHeight;
uniform highp vec4 u_nearFarPlane;
uniform highp vec4 u_tileMin;
uniform highp vec4 u_tileMax;
void main ()
{
  vec4 projected_1;
  vec3 vertexPosition_2;
  vec4 worldPosition_3;
  float tmpvar_4;
  tmpvar_4 = (u_tileMin.z + (a_position.z * u_tileMax.z));
  vec4 tmpvar_5;
  tmpvar_5.xy = mix (u_tileMin.xy, u_tileMax.xy, a_position.xy);
  tmpvar_5.z = tmpvar_4;
  tmpvar_5.w = tmpvar_4;
  worldPosition_3.xy = tmpvar_5.xy;
  vertexPosition_2.xy = tmpvar_5.xy;
  highp vec2 tmpvar_6;
  tmpvar_6 = clamp (a_position.xy, 0.0, 1.0);
  float tmpvar_7;
  tmpvar_7 = (textureLod (s_heightTexture, ((u_ScaleOffsetHeight.zw * tmpvar_6) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_6.y));
  vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_7;
  tmpvar_8.y = textureLod (s_heightTexture, ((u_ScaleOffsetHeight.zw * tmpvar_6) + u_ScaleOffsetHeight.xy), 0.0).x;
  worldPosition_3.zw = (vec2(tmpvar_4) + tmpvar_8);
  vertexPosition_2.z = (tmpvar_4 + (tmpvar_7 * u_tileSize.z));
  vec4 tmpvar_9;
  tmpvar_9.yzw = vec3(0.0, 0.0, 0.0);
  tmpvar_9.x = (sqrt(dot (worldPosition_3.xyz, worldPosition_3.xyz)) / u_nearFarPlane.y);
  vec4 tmpvar_10;
  tmpvar_10.w = 1.0;
  tmpvar_10.xyz = vertexPosition_2;
  vec4 tmpvar_11;
  tmpvar_11 = (u_proj * (u_view * tmpvar_10));
  projected_1.xyw = tmpvar_11.xyw;
  projected_1.z = (tmpvar_11.z - (tmpvar_11.w * 0.01));
  projected_1.z = (projected_1.z - (tmpvar_11.w * 0.01));
  gl_Position = projected_1;
  v_texcoord7 = worldPosition_3;
  v_texcoord6 = tmpvar_11;
  v_texcoord5 = a_texcoord7;
  v_texcoord4 = tmpvar_9;
}

