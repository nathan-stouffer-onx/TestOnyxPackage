precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_ElevationShadeTexture;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_IntersectTint;
uniform vec4 u_IntersectInverted;
uniform vec4 u_ElevationExtents;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_BackgroundColor;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  vec4 color_20;
  vec4 tmpvar_21;
  tmpvar_21 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_20.xyz = mix (u_BackgroundColor.xyz, tmpvar_21.xyz, (tmpvar_21.w * u_OpacityTex0.x));
  color_20.w = max (u_BackgroundColor.w, tmpvar_21.w);
  vec4 tmpvar_22;
  tmpvar_22 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_20.xyz = mix (color_20.xyz, tmpvar_22.xyz, (tmpvar_22.w * u_OpacityTex1.x));
  color_20.w = max (color_20.w, tmpvar_22.w);
  fragColor_3 = color_20;
  float tmpvar_23;
  tmpvar_23 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_24;
  tmpvar_24 = (1.570796 - (sign(normal_4.z) * (1.570796 - 
    (sqrt((1.0 - abs(normal_4.z))) * (1.570796 + (abs(normal_4.z) * (-0.2146018 + 
      (abs(normal_4.z) * (0.08656672 + (abs(normal_4.z) * -0.03102955)))
    ))))
  )));
  float rad_25;
  float vec_y_26;
  vec_y_26 = -(normal_4.y);
  float tmpvar_27;
  float tmpvar_28;
  tmpvar_28 = (min (abs(
    (vec_y_26 / normal_4.x)
  ), 1.0) / max (abs(
    (vec_y_26 / normal_4.x)
  ), 1.0));
  float tmpvar_29;
  tmpvar_29 = (tmpvar_28 * tmpvar_28);
  tmpvar_29 = (((
    ((((
      ((((-0.01213232 * tmpvar_29) + 0.05368138) * tmpvar_29) - 0.1173503)
     * tmpvar_29) + 0.1938925) * tmpvar_29) - 0.3326756)
   * tmpvar_29) + 0.9999793) * tmpvar_28);
  tmpvar_29 = (tmpvar_29 + (float(
    (abs((vec_y_26 / normal_4.x)) > 1.0)
  ) * (
    (tmpvar_29 * -2.0)
   + 1.570796)));
  tmpvar_27 = (tmpvar_29 * sign((vec_y_26 / normal_4.x)));
  if ((abs(normal_4.x) > (1e-08 * abs(vec_y_26)))) {
    if ((normal_4.x < 0.0)) {
      if ((vec_y_26 >= 0.0)) {
        tmpvar_27 += 3.141593;
      } else {
        tmpvar_27 = (tmpvar_27 - 3.141593);
      };
    };
  } else {
    tmpvar_27 = (sign(vec_y_26) * 1.570796);
  };
  rad_25 = (tmpvar_27 - 1.570796);
  rad_25 = (rad_25 + (float(
    (rad_25 < 0.0)
  ) * 6.283185));
  rad_25 = (6.283185 - rad_25);
  float tmpvar_30;
  tmpvar_30 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  vec2 tmpvar_31;
  tmpvar_31.y = 0.0;
  tmpvar_31.x = (tmpvar_30 * ((tmpvar_23 - u_ElevationExtents.x) / (
    (tmpvar_30 * (u_ElevationExtents.y - u_ElevationExtents.x))
   + 
    (1.0 - tmpvar_30)
  )));
  vec2 tmpvar_32;
  tmpvar_32.y = 0.0;
  tmpvar_32.x = (tmpvar_24 / 1.570796);
  vec2 tmpvar_33;
  tmpvar_33.y = 0.0;
  tmpvar_33.x = (rad_25 / 6.283185);
  fragColor_3.xyz = mix (color_20.xyz, ((
    ((color_20.x + color_20.y) + color_20.z)
   / 3.0) * u_IntersectTint.xyz), (abs(
    (u_IntersectInverted.x - ((texture (s_ElevationShadeTexture, tmpvar_31).x * texture (s_SlopeAngleShadeTexture, tmpvar_32).x) * texture (s_SlopeAspectShadeTexture, tmpvar_33).x))
  ) * u_IntersectTint.w));
  float tmpvar_34;
  vec3 tmpvar_35;
  tmpvar_35 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_34 = sqrt(dot (tmpvar_35, tmpvar_35));
  vec3 rayDir_36;
  rayDir_36.xz = tmpvar_35.xz;
  rayDir_36.y = -(tmpvar_35.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_34 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_34 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_36).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_37;
  tmpvar_37 = sqrt(dot (tmpvar_35, tmpvar_35));
  float period_38;
  period_38 = (u_viewshedRange0.x / 4.0);
  float tmpvar_39;
  tmpvar_39 = ((1.0/(period_38)) * tmpvar_37);
  float tmpvar_40;
  tmpvar_40 = (0.5 * period_38);
  float tmpvar_41;
  tmpvar_41 = (50.0 * tmpvar_37);
  vec4 tmpvar_42;
  tmpvar_42.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_42.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_42.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_39 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_39))
     + 
      abs(dFdy(tmpvar_39))
    )), 1.0))
   * 
    (float((-(tmpvar_40) <= tmpvar_37)) * float((tmpvar_37 <= (u_viewshedRange0.x + tmpvar_40))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_41 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_41))
     + 
      abs(dFdy(tmpvar_41))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_37)) * float((tmpvar_37 <= 0.09)))
  )));
  float tmpvar_43;
  tmpvar_43 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, (tmpvar_43 * (tmpvar_43 * 
    (3.0 - (2.0 * tmpvar_43))
  )));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_44;
  tmpvar_44 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_45;
  tmpvar_45 = floor(tmpvar_44);
  d_2 = ((tmpvar_44 - tmpvar_45) * 256.0);
  float tmpvar_46;
  tmpvar_46 = floor(d_2);
  d_2 = ((d_2 - tmpvar_46) * 256.0);
  mediump vec4 tmpvar_47;
  tmpvar_47.w = 1.0;
  tmpvar_47.x = (tmpvar_45 / 256.0);
  tmpvar_47.y = (tmpvar_46 / 256.0);
  tmpvar_47.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_47;
  vec3 tmpvar_48;
  tmpvar_48 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_49;
  tmpvar_49.x = (tmpvar_48.y * 0.5);
  tmpvar_49.y = (-(tmpvar_48.x) * 0.5);
  tmpvar_49.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_48.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_50;
  tmpvar_50 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_49)
    ) - tmpvar_49)), tmpvar_48)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_50 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

