precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_MaxNormalZ;
uniform vec4 u_ElevationExtents;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  float tmpvar_6;
  tmpvar_6 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  vec3 tmpvar_15;
  tmpvar_15.x = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)));
  tmpvar_15.y = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)));
  tmpvar_15.z = (2.0 * (tmpvar_6 * u_tileSize.x));
  normal_5 = normalize(tmpvar_15);
  fragColor_4 = u_BackgroundColor;
  float rad_16;
  float vec_y_17;
  vec_y_17 = -(normal_5.y);
  float tmpvar_18;
  float tmpvar_19;
  tmpvar_19 = (min (abs(
    (vec_y_17 / normal_5.x)
  ), 1.0) / max (abs(
    (vec_y_17 / normal_5.x)
  ), 1.0));
  float tmpvar_20;
  tmpvar_20 = (tmpvar_19 * tmpvar_19);
  tmpvar_20 = (((
    ((((
      ((((-0.01213232 * tmpvar_20) + 0.05368138) * tmpvar_20) - 0.1173503)
     * tmpvar_20) + 0.1938925) * tmpvar_20) - 0.3326756)
   * tmpvar_20) + 0.9999793) * tmpvar_19);
  tmpvar_20 = (tmpvar_20 + (float(
    (abs((vec_y_17 / normal_5.x)) > 1.0)
  ) * (
    (tmpvar_20 * -2.0)
   + 1.570796)));
  tmpvar_18 = (tmpvar_20 * sign((vec_y_17 / normal_5.x)));
  if ((abs(normal_5.x) > (1e-08 * abs(vec_y_17)))) {
    if ((normal_5.x < 0.0)) {
      if ((vec_y_17 >= 0.0)) {
        tmpvar_18 += 3.141593;
      } else {
        tmpvar_18 = (tmpvar_18 - 3.141593);
      };
    };
  } else {
    tmpvar_18 = (sign(vec_y_17) * 1.570796);
  };
  rad_16 = (tmpvar_18 - 1.570796);
  rad_16 = (rad_16 + (float(
    (rad_16 < 0.0)
  ) * 6.283185));
  rad_16 = (6.283185 - rad_16);
  vec2 tmpvar_21;
  tmpvar_21.y = 0.0;
  tmpvar_21.x = (rad_16 / 6.283185);
  vec4 tmpvar_22;
  tmpvar_22 = texture (s_SlopeAspectShadeTexture, tmpvar_21);
  fragColor_4.xyz = mix (u_BackgroundColor.xyz, tmpvar_22.xyz, (tmpvar_22.w * float(
    (abs(normal_5.z) <= u_MaxNormalZ.x)
  )));
  vec3 tangentSun_23;
  vec3 planetNormal_24;
  float tmpvar_25;
  tmpvar_25 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_26;
  tmpvar_26 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_24.x = (cos(tmpvar_26) * cos(tmpvar_25));
  planetNormal_24.y = (cos(tmpvar_26) * sin(tmpvar_25));
  planetNormal_24.z = sin(tmpvar_26);
  vec3 tmpvar_27;
  tmpvar_27 = normalize(((planetNormal_24.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_24.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_23.x = -(dot (tmpvar_27, v_texcoord3.xyz));
  tangentSun_23.y = -(dot (normalize(
    ((planetNormal_24.yzx * tmpvar_27.zxy) - (planetNormal_24.zxy * tmpvar_27.yzx))
  ), v_texcoord3.xyz));
  tangentSun_23.z = dot (planetNormal_24, v_texcoord3.xyz);
  vec4 tmpvar_28;
  tmpvar_28.w = 1.0;
  tmpvar_28.xyz = mix (vec3(clamp (dot (tangentSun_23, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_29;
  tmpvar_29 = mix (fragColor_4, tmpvar_28, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_29.w;
  float tmpvar_30;
  tmpvar_30 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_31;
  tmpvar_31 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_32;
  tmpvar_32 = max ((tmpvar_31.y - (tmpvar_31.x * tmpvar_31.x)), u_sunShadowVSMParams.x);
  float tmpvar_33;
  tmpvar_33 = (tmpvar_30 - tmpvar_31.x);
  fragColor_4.xyz = mix (tmpvar_29.xyz, vec3(min (max (
    float((tmpvar_30 <= tmpvar_31.x))
  , 
    clamp ((((tmpvar_32 / 
      (tmpvar_32 + (tmpvar_33 * tmpvar_33))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_34;
  tmpvar_34 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_35;
  tmpvar_35 = (((tmpvar_34 * 
    ((v_texcoord7.w - u_ElevationExtents.x) / ((tmpvar_34 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_34)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_36;
  tmpvar_36.x = (float(mod (tmpvar_35, s_ElevationShadeTexture_Res.x)));
  tmpvar_36.y = floor((tmpvar_35 / s_ElevationShadeTexture_Res.y));
  vec4 tmpvar_37;
  tmpvar_37 = texture (s_ElevationShadeTexture, (tmpvar_36 / s_ElevationShadeTexture_Res.xy));
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_37.xyz, tmpvar_37.w);
  vec2 tmpvar_38;
  tmpvar_38.y = 0.0;
  tmpvar_38.x = ((1.570796 - (
    sign(normal_5.z)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(normal_5.z)
    )) * (1.570796 + (
      abs(normal_5.z)
     * 
      (-0.2146018 + (abs(normal_5.z) * (0.08656672 + (
        abs(normal_5.z)
       * -0.03102955))))
    ))))
  )) / 1.570796);
  vec4 tmpvar_39;
  tmpvar_39 = texture (s_SlopeAngleShadeTexture, tmpvar_38);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_39.xyz, tmpvar_39.w);
  float tmpvar_40;
  tmpvar_40 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_41;
  tmpvar_41 = (1.0 - (tmpvar_40 * (tmpvar_40 * 
    (3.0 - (2.0 * tmpvar_40))
  )));
  float tmpvar_42;
  float tmpvar_43;
  tmpvar_43 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_44;
  tmpvar_44 = max (u_NearFarFocus.z, 1.5);
  tmpvar_42 = (u_ContourParams0.w * min (1.0, (tmpvar_44 / 
    sqrt(tmpvar_43)
  )));
  float tmpvar_45;
  tmpvar_45 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_46;
  tmpvar_46 = (0.5 * u_ContourParams0.x);
  fragColor_4.xyz = mix (fragColor_4.xyz, mix (fragColor_4.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_42, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_42)))
       * 
        abs((fract((tmpvar_45 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_45))
       + 
        abs(dFdy(tmpvar_45))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_46) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_46))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_41));
  float tmpvar_47;
  tmpvar_47 = (u_ContourParams1.w * min (1.0, (tmpvar_44 / 
    sqrt(tmpvar_43)
  )));
  float tmpvar_48;
  tmpvar_48 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_49;
  tmpvar_49 = (0.5 * u_ContourParams1.x);
  fragColor_4.xyz = mix (fragColor_4.xyz, mix (fragColor_4.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_47, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_47)))
       * 
        abs((fract((tmpvar_48 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_48))
       + 
        abs(dFdy(tmpvar_48))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_49) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_49))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_41));
  float tmpvar_50;
  vec3 tmpvar_51;
  tmpvar_51 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_50 = sqrt(dot (tmpvar_51, tmpvar_51));
  vec3 rayDir_52;
  rayDir_52.xz = tmpvar_51.xz;
  rayDir_52.y = -(tmpvar_51.y);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((
    ((fragColor_4.x + fragColor_4.y) + fragColor_4.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_50 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_50 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_52).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_53;
  tmpvar_53 = sqrt(dot (tmpvar_51, tmpvar_51));
  float period_54;
  period_54 = (u_viewshedRange0.x / 4.0);
  float tmpvar_55;
  tmpvar_55 = ((1.0/(period_54)) * tmpvar_53);
  float tmpvar_56;
  tmpvar_56 = (0.5 * period_54);
  float tmpvar_57;
  tmpvar_57 = (50.0 * tmpvar_53);
  vec4 tmpvar_58;
  tmpvar_58.xyz = mix (fragColor_4.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_58.w = u_viewshedRingTint0.w;
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_58.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_55 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_55))
     + 
      abs(dFdy(tmpvar_55))
    )), 1.0))
   * 
    (float((-(tmpvar_56) <= tmpvar_53)) * float((tmpvar_53 <= (u_viewshedRange0.x + tmpvar_56))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_57 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_57))
     + 
      abs(dFdy(tmpvar_57))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_53)) * float((tmpvar_53 <= 0.09)))
  )));
  float tmpvar_59;
  tmpvar_59 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_FogColor.xyz, ((tmpvar_59 * 
    (tmpvar_59 * (3.0 - (2.0 * tmpvar_59)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_60;
  tmpvar_60 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_61;
  tmpvar_61 = floor(tmpvar_60);
  d_2 = ((tmpvar_60 - tmpvar_61) * 256.0);
  float tmpvar_62;
  tmpvar_62 = floor(d_2);
  d_2 = ((d_2 - tmpvar_62) * 256.0);
  mediump vec4 tmpvar_63;
  tmpvar_63.w = 1.0;
  tmpvar_63.x = (tmpvar_61 / 256.0);
  tmpvar_63.y = (tmpvar_62 / 256.0);
  tmpvar_63.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_63;
  vec3 tmpvar_64;
  tmpvar_64 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_65;
  tmpvar_65.x = (tmpvar_64.y * 0.5);
  tmpvar_65.y = (-(tmpvar_64.x) * 0.5);
  tmpvar_65.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_64.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_66;
  tmpvar_66 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_65)
    ) - tmpvar_65)), tmpvar_64)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_66 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

