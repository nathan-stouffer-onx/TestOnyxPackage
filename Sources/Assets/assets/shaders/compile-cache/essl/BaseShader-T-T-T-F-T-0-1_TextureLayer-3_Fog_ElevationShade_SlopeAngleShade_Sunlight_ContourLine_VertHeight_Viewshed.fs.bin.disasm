precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_ElevationShadeTexture;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_ElevationExtents;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  vec2 tmpvar_6;
  tmpvar_6 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6.x;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6.y;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  float tmpvar_15;
  tmpvar_15 = (texture (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_16;
  tmpvar_16 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = -(tmpvar_16.x);
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - tmpvar_15);
  vec3 tmpvar_18;
  tmpvar_18.y = 0.0;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)) - tmpvar_15);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = -(tmpvar_16.y);
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - tmpvar_15);
  vec3 tmpvar_20;
  tmpvar_20.x = 0.0;
  tmpvar_20.y = tmpvar_16.y;
  tmpvar_20.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)) - tmpvar_15);
  normal_5 = normalize(((
    (((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx)) + ((tmpvar_19.yzx * tmpvar_18.zxy) - (tmpvar_19.zxy * tmpvar_18.yzx)))
   + 
    ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx))
  ) + (
    (tmpvar_20.yzx * tmpvar_17.zxy)
   - 
    (tmpvar_20.zxy * tmpvar_17.yzx)
  )));
  vec4 color_21;
  vec4 tmpvar_22;
  tmpvar_22 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_21.xyz = mix (u_BackgroundColor.xyz, tmpvar_22.xyz, (tmpvar_22.w * u_OpacityTex0.x));
  color_21.w = max (u_BackgroundColor.w, tmpvar_22.w);
  vec4 tmpvar_23;
  tmpvar_23 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_21.xyz = mix (color_21.xyz, tmpvar_23.xyz, (tmpvar_23.w * u_OpacityTex1.x));
  color_21.w = max (color_21.w, tmpvar_23.w);
  vec4 tmpvar_24;
  tmpvar_24 = texture (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_21.xyz = mix (color_21.xyz, tmpvar_24.xyz, (tmpvar_24.w * u_OpacityTex2.x));
  color_21.w = max (color_21.w, tmpvar_24.w);
  vec3 tangentSun_25;
  vec3 planetNormal_26;
  float tmpvar_27;
  tmpvar_27 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_28;
  tmpvar_28 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_26.x = (cos(tmpvar_28) * cos(tmpvar_27));
  planetNormal_26.y = (cos(tmpvar_28) * sin(tmpvar_27));
  planetNormal_26.z = sin(tmpvar_28);
  vec3 tmpvar_29;
  tmpvar_29 = normalize(((planetNormal_26.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_26.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_25.x = -(dot (tmpvar_29, v_texcoord3.xyz));
  tangentSun_25.y = -(dot (normalize(
    ((planetNormal_26.yzx * tmpvar_29.zxy) - (planetNormal_26.zxy * tmpvar_29.yzx))
  ), v_texcoord3.xyz));
  tangentSun_25.z = dot (planetNormal_26, v_texcoord3.xyz);
  vec4 tmpvar_30;
  tmpvar_30.w = 1.0;
  tmpvar_30.xyz = mix (vec3(clamp (dot (tangentSun_25, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_31;
  tmpvar_31 = mix (color_21, tmpvar_30, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_31.w;
  float tmpvar_32;
  tmpvar_32 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_33;
  tmpvar_33 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_34;
  tmpvar_34 = max ((tmpvar_33.y - (tmpvar_33.x * tmpvar_33.x)), u_sunShadowVSMParams.x);
  float tmpvar_35;
  tmpvar_35 = (tmpvar_32 - tmpvar_33.x);
  fragColor_4.xyz = mix (tmpvar_31.xyz, vec3(min (max (
    float((tmpvar_32 <= tmpvar_33.x))
  , 
    clamp ((((tmpvar_34 / 
      (tmpvar_34 + (tmpvar_35 * tmpvar_35))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_36;
  tmpvar_36 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  vec2 tmpvar_37;
  tmpvar_37.y = 0.0;
  float tmpvar_38;
  tmpvar_38 = (v_texcoord7.w + u_eyePos.z);
  tmpvar_37.x = (tmpvar_36 * ((tmpvar_38 - u_ElevationExtents.x) / (
    (tmpvar_36 * (u_ElevationExtents.y - u_ElevationExtents.x))
   + 
    (1.0 - tmpvar_36)
  )));
  vec4 tmpvar_39;
  tmpvar_39 = texture (s_ElevationShadeTexture, tmpvar_37);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_39.xyz, tmpvar_39.w);
  vec2 tmpvar_40;
  tmpvar_40.y = 0.0;
  tmpvar_40.x = ((1.570796 - (
    sign(normal_5.z)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(normal_5.z)
    )) * (1.570796 + (
      abs(normal_5.z)
     * 
      (-0.2146018 + (abs(normal_5.z) * (0.08656672 + (
        abs(normal_5.z)
       * -0.03102955))))
    ))))
  )) / 1.570796);
  vec4 tmpvar_41;
  tmpvar_41 = texture (s_SlopeAngleShadeTexture, tmpvar_40);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_41.xyz, tmpvar_41.w);
  float tmpvar_42;
  tmpvar_42 = ((1.0/(u_ContourParams0.x)) * tmpvar_38);
  float tmpvar_43;
  tmpvar_43 = (0.5 * u_ContourParams0.x);
  float tmpvar_44;
  tmpvar_44 = (u_nearFarPlane.y / 3.0);
  float tmpvar_45;
  tmpvar_45 = dot (v_texcoord7.xy, v_texcoord7.xy);
  fragColor_4.xyz = mix (fragColor_4.xyz, mix (fragColor_4.xyz, u_ContourColor0.xyz, u_ContourColor0.w), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(u_ContourParams0.w))
       * 
        abs((fract((tmpvar_42 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_42))
       + 
        abs(dFdy(tmpvar_42))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_43) <= tmpvar_38)) * float((tmpvar_38 <= (u_ContourParams0.z + tmpvar_43))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * clamp (
    pow ((1.0 - (sqrt(tmpvar_45) / tmpvar_44)), 3.0)
  , 0.0, 1.0)));
  float tmpvar_46;
  tmpvar_46 = ((1.0/(u_ContourParams1.x)) * tmpvar_38);
  float tmpvar_47;
  tmpvar_47 = (0.5 * u_ContourParams1.x);
  fragColor_4.xyz = mix (fragColor_4.xyz, mix (fragColor_4.xyz, u_ContourColor1.xyz, u_ContourColor1.w), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(u_ContourParams1.w))
       * 
        abs((fract((tmpvar_46 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_46))
       + 
        abs(dFdy(tmpvar_46))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_47) <= tmpvar_38)) * float((tmpvar_38 <= (u_ContourParams1.z + tmpvar_47))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * clamp (
    pow ((1.0 - (sqrt(tmpvar_45) / tmpvar_44)), 3.0)
  , 0.0, 1.0)));
  float tmpvar_48;
  tmpvar_48 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_fogColor.xyz, (tmpvar_48 * (tmpvar_48 * 
    (3.0 - (2.0 * tmpvar_48))
  )));
  float tmpvar_49;
  vec3 tmpvar_50;
  tmpvar_50 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_49 = sqrt(dot (tmpvar_50, tmpvar_50));
  vec3 rayDir_51;
  rayDir_51.xz = tmpvar_50.xz;
  rayDir_51.y = -(tmpvar_50.y);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((
    ((fragColor_4.x + fragColor_4.y) + fragColor_4.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_49 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_49 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_51).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_52;
  tmpvar_52 = sqrt(dot (tmpvar_50, tmpvar_50));
  float period_53;
  period_53 = (u_viewshedRange0.x / 4.0);
  float tmpvar_54;
  tmpvar_54 = ((1.0/(period_53)) * tmpvar_52);
  float tmpvar_55;
  tmpvar_55 = (0.5 * period_53);
  float tmpvar_56;
  tmpvar_56 = (50.0 * tmpvar_52);
  vec4 tmpvar_57;
  tmpvar_57.xyz = mix (fragColor_4.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_57.w = u_viewshedRingTint0.w;
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_57.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_54 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_54))
     + 
      abs(dFdy(tmpvar_54))
    )), 1.0))
   * 
    (float((-(tmpvar_55) <= tmpvar_52)) * float((tmpvar_52 <= (u_viewshedRange0.x + tmpvar_55))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_56 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_56))
     + 
      abs(dFdy(tmpvar_56))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_52)) * float((tmpvar_52 <= 0.09)))
  )));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_58;
  tmpvar_58 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_59;
  tmpvar_59 = floor(tmpvar_58);
  d_2 = ((tmpvar_58 - tmpvar_59) * 256.0);
  float tmpvar_60;
  tmpvar_60 = floor(d_2);
  d_2 = ((d_2 - tmpvar_60) * 256.0);
  mediump vec4 tmpvar_61;
  tmpvar_61.w = 1.0;
  tmpvar_61.x = (tmpvar_59 / 256.0);
  tmpvar_61.y = (tmpvar_60 / 256.0);
  tmpvar_61.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_61;
  vec3 tmpvar_62;
  tmpvar_62 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_63;
  tmpvar_63.x = (tmpvar_62.y * 0.5);
  tmpvar_63.y = (-(tmpvar_62.x) * 0.5);
  tmpvar_63.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_62.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_64;
  tmpvar_64 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_63)
    ) - tmpvar_63)), tmpvar_62)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_64 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

