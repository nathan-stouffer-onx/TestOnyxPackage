precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  float tmpvar_5;
  tmpvar_5 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14.x = ((textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - (textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)));
  tmpvar_14.y = ((textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - (textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)));
  tmpvar_14.z = (2.0 * (tmpvar_5 * u_tileSize.x));
  normal_4 = normalize(tmpvar_14);
  vec4 color_15;
  vec4 tmpvar_16;
  tmpvar_16 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_15.xyz = mix (u_BackgroundColor.xyz, tmpvar_16.xyz, (tmpvar_16.w * u_OpacityTex0.x));
  color_15.w = max (u_BackgroundColor.w, tmpvar_16.w);
  vec4 tmpvar_17;
  tmpvar_17 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_15.xyz = mix (color_15.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex1.x));
  color_15.w = max (color_15.w, tmpvar_17.w);
  vec4 tmpvar_18;
  tmpvar_18 = texture (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_15.xyz = mix (color_15.xyz, tmpvar_18.xyz, (tmpvar_18.w * u_OpacityTex2.x));
  color_15.w = max (color_15.w, tmpvar_18.w);
  fragColor_3.w = color_15.w;
  float tmpvar_19;
  tmpvar_19 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (color_15.xyz, u_FogColor.xyz, ((tmpvar_19 * 
    (tmpvar_19 * (3.0 - (2.0 * tmpvar_19)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_20;
  tmpvar_20 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_21;
  tmpvar_21 = floor(tmpvar_20);
  d_2 = ((tmpvar_20 - tmpvar_21) * 256.0);
  float tmpvar_22;
  tmpvar_22 = floor(d_2);
  d_2 = ((d_2 - tmpvar_22) * 256.0);
  mediump vec4 tmpvar_23;
  tmpvar_23.w = 1.0;
  tmpvar_23.x = (tmpvar_21 / 256.0);
  tmpvar_23.y = (tmpvar_22 / 256.0);
  tmpvar_23.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_23;
  vec3 tmpvar_24;
  tmpvar_24 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_25;
  tmpvar_25.x = (tmpvar_24.y * 0.5);
  tmpvar_25.y = (-(tmpvar_24.x) * 0.5);
  tmpvar_25.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_24.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_26;
  tmpvar_26 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_25)
    ) - tmpvar_25)), tmpvar_24)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_26 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

