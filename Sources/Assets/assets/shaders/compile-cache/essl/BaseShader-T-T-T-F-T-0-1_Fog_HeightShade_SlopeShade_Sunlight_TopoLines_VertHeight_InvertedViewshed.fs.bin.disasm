precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_SlopeAngleTexture;
uniform sampler2D s_HeightBandTexture;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedColor0;
uniform vec4 u_viewshedRange;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane;
uniform vec4 u_viewshedBias;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_TopoParams;
uniform vec4 u_minorTopoColor;
uniform vec4 u_majorTopoColor;
uniform vec4 u_TopoFade;
uniform vec4 u_TopoHeightFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_HeightExtents;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  vec2 tmpvar_6;
  tmpvar_6 = (s_heightTexture_Res.zw / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6.x;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6.x;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6.y;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6.y;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  float tmpvar_15;
  tmpvar_15 = (texture (s_heightTexture, ((v_color4.zw * v_texcoord5.xy) + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, v_texcoord5.y));
  vec2 tmpvar_16;
  tmpvar_16 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = -(tmpvar_16.x);
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - tmpvar_15);
  vec3 tmpvar_18;
  tmpvar_18.y = 0.0;
  tmpvar_18.x = tmpvar_16.x;
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)) - tmpvar_15);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = -(tmpvar_16.y);
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - tmpvar_15);
  vec3 tmpvar_20;
  tmpvar_20.x = 0.0;
  tmpvar_20.y = tmpvar_16.y;
  tmpvar_20.z = ((texture (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy)).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)) - tmpvar_15);
  normal_5 = normalize(((
    (((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx)) + ((tmpvar_19.yzx * tmpvar_18.zxy) - (tmpvar_19.zxy * tmpvar_18.yzx)))
   + 
    ((tmpvar_18.yzx * tmpvar_20.zxy) - (tmpvar_18.zxy * tmpvar_20.yzx))
  ) + (
    (tmpvar_20.yzx * tmpvar_17.zxy)
   - 
    (tmpvar_20.zxy * tmpvar_17.yzx)
  )));
  vec3 tangentSun_21;
  vec3 planetNormal_22;
  float tmpvar_23;
  tmpvar_23 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_24;
  tmpvar_24 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_22.x = (cos(tmpvar_24) * cos(tmpvar_23));
  planetNormal_22.y = (cos(tmpvar_24) * sin(tmpvar_23));
  planetNormal_22.z = sin(tmpvar_24);
  vec3 tmpvar_25;
  tmpvar_25 = normalize(((planetNormal_22.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_22.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_21.x = -(dot (tmpvar_25, v_texcoord3.xyz));
  tangentSun_21.y = -(dot (normalize(
    ((planetNormal_22.yzx * tmpvar_25.zxy) - (planetNormal_22.zxy * tmpvar_25.yzx))
  ), v_texcoord3.xyz));
  tangentSun_21.z = dot (planetNormal_22, v_texcoord3.xyz);
  vec4 tmpvar_26;
  tmpvar_26.w = 1.0;
  tmpvar_26.xyz = mix (vec3(clamp (dot (tangentSun_21, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_27;
  tmpvar_27 = mix (vec4(1.0, 1.0, 1.0, 0.0), tmpvar_26, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_27.w;
  float tmpvar_28;
  tmpvar_28 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_29;
  tmpvar_29 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_30;
  tmpvar_30 = max ((tmpvar_29.y - (tmpvar_29.x * tmpvar_29.x)), u_sunShadowVSMParams.x);
  float tmpvar_31;
  tmpvar_31 = (tmpvar_28 - tmpvar_29.x);
  fragColor_4.xyz = mix (tmpvar_27.xyz, vec3(min (max (
    float((tmpvar_28 <= tmpvar_29.x))
  , 
    clamp ((((tmpvar_30 / 
      (tmpvar_30 + (tmpvar_31 * tmpvar_31))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_32;
  tmpvar_32 = float((u_HeightExtents.x != u_HeightExtents.y));
  vec2 tmpvar_33;
  tmpvar_33.y = 0.0;
  float tmpvar_34;
  tmpvar_34 = (v_texcoord7.w + u_eyePos.z);
  tmpvar_33.x = (tmpvar_32 * ((tmpvar_34 - u_HeightExtents.x) / (
    (tmpvar_32 * (u_HeightExtents.y - u_HeightExtents.x))
   + 
    (1.0 - tmpvar_32)
  )));
  vec4 tmpvar_35;
  tmpvar_35 = texture (s_HeightBandTexture, tmpvar_33);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_35.xyz, (0.5 * tmpvar_35.w));
  vec2 tmpvar_36;
  tmpvar_36.y = 0.0;
  tmpvar_36.x = ((1.570796 - (
    sign(normal_5.z)
   * 
    (1.570796 - (sqrt((1.0 - 
      abs(normal_5.z)
    )) * (1.570796 + (
      abs(normal_5.z)
     * 
      (-0.2146018 + (abs(normal_5.z) * (0.08656672 + (
        abs(normal_5.z)
       * -0.03102955))))
    ))))
  )) / 1.570796);
  vec4 tmpvar_37;
  tmpvar_37 = texture (s_SlopeAngleTexture, tmpvar_36);
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_37.xyz, (0.5 * tmpvar_37.w));
  float tmpvar_38;
  tmpvar_38 = pow ((1.0 - (
    sqrt(dot (v_texcoord7.xy, v_texcoord7.xy))
   / 
    (u_nearFarPlane.y / 3.0)
  )), 3.0);
  float strength_39;
  float tmpvar_40;
  tmpvar_40 = ((1.0/(u_TopoParams.x)) * tmpvar_34);
  float tmpvar_41;
  tmpvar_41 = (0.5 * u_TopoParams.x);
  strength_39 = ((1.0 - min (
    (abs((fract(
      (tmpvar_40 - 0.5)
    ) - 0.5)) / (abs(dFdx(tmpvar_40)) + abs(dFdy(tmpvar_40))))
  , 1.0)) * (float(
    ((-10.0 - tmpvar_41) <= tmpvar_34)
  ) * float(
    (tmpvar_34 <= (10.0 + tmpvar_41))
  )));
  float tmpvar_42;
  tmpvar_42 = ((1.0/(u_TopoParams.y)) * tmpvar_34);
  float tmpvar_43;
  tmpvar_43 = (0.5 * u_TopoParams.y);
  float tmpvar_44;
  tmpvar_44 = clamp ((pow (
    (((1.0 - min (
      (((1.0/((2.0 + 
        (u_TopoHeightFade.y * tmpvar_38)
      ))) * abs((
        fract((tmpvar_42 - 0.5))
       - 0.5))) / (abs(dFdx(tmpvar_42)) + abs(dFdy(tmpvar_42))))
    , 1.0)) * (float(
      ((-10.0 - tmpvar_43) <= tmpvar_34)
    ) * float(
      (tmpvar_34 <= (10.0 + tmpvar_43))
    ))) + 0.5)
  , 3.0) - 0.5), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((u_majorTopoColor.xyz * tmpvar_44) + (u_minorTopoColor.xyz * 
    clamp ((strength_39 - tmpvar_44), 0.0, 1.0)
  )), clamp ((
    mix (u_TopoFade.y, u_TopoFade.x, tmpvar_38)
   * 
    max ((strength_39 * u_TopoHeightFade.x), (tmpvar_44 * u_TopoHeightFade.y))
  ), 0.0, 1.0));
  float tmpvar_45;
  tmpvar_45 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_fogColor.xyz, (tmpvar_45 * (tmpvar_45 * 
    (3.0 - (2.0 * tmpvar_45))
  )));
  float tmpvar_46;
  vec3 tmpvar_47;
  tmpvar_47 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_46 = sqrt(dot (tmpvar_47, tmpvar_47));
  vec3 rayDir_48;
  rayDir_48.xz = tmpvar_47.xz;
  rayDir_48.y = -(tmpvar_47.y);
  float tmpvar_49;
  tmpvar_49 = (float((
    (tmpvar_46 - u_viewshedBias.x)
   < 
    (texture (s_cubeDepth0, rayDir_48).x * u_viewshedFarPlane.x)
  )) * float((tmpvar_46 < u_viewshedRange.x)));
  fragColor_4.xyz = ((tmpvar_49 * fragColor_4.xyz) + ((1.0 - tmpvar_49) * vec3((
    (0.7 * ((fragColor_4.x + fragColor_4.y) + fragColor_4.z))
   / 3.0))));
  float lineStrength_50;
  float tmpvar_51;
  tmpvar_51 = sqrt(dot (tmpvar_47, tmpvar_47));
  float period_52;
  period_52 = (u_viewshedRange.x / 4.0);
  float tmpvar_53;
  tmpvar_53 = ((1.0/(period_52)) * tmpvar_51);
  float tmpvar_54;
  tmpvar_54 = (0.5 * period_52);
  float tmpvar_55;
  tmpvar_55 = (50.0 * tmpvar_51);
  lineStrength_50 = (((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_53 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_53)
    ) + abs(
      dFdy(tmpvar_53)
    ))), 1.0)
  ) * (
    float((-(tmpvar_54) <= tmpvar_51))
   * 
    float((tmpvar_51 <= (u_viewshedRange.x + tmpvar_54)))
  )) + ((1.0 - 
    min (((0.6666667 * abs(
      (fract((tmpvar_55 - 0.5)) - 0.5)
    )) / (abs(
      dFdx(tmpvar_55)
    ) + abs(
      dFdy(tmpvar_55)
    ))), 1.0)
  ) * (
    float((-0.01 <= tmpvar_51))
   * 
    float((tmpvar_51 <= 0.09))
  )));
  fragColor_4.xyz = (((1.0 - lineStrength_50) * fragColor_4.xyz) + (lineStrength_50 * (vec3(1.0, 1.0, 1.0) - u_viewshedColor0.xyz)));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_56;
  tmpvar_56 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_57;
  tmpvar_57 = floor(tmpvar_56);
  d_2 = ((tmpvar_56 - tmpvar_57) * 256.0);
  float tmpvar_58;
  tmpvar_58 = floor(d_2);
  d_2 = ((d_2 - tmpvar_58) * 256.0);
  mediump vec4 tmpvar_59;
  tmpvar_59.w = 1.0;
  tmpvar_59.x = (tmpvar_57 / 256.0);
  tmpvar_59.y = (tmpvar_58 / 256.0);
  tmpvar_59.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_59;
  vec3 tmpvar_60;
  tmpvar_60 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_61;
  tmpvar_61.x = (tmpvar_60.y * 0.5);
  tmpvar_61.y = (-(tmpvar_60.x) * 0.5);
  tmpvar_61.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_60.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_62;
  tmpvar_62 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_61)
    ) - tmpvar_61)), tmpvar_60)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_62 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

