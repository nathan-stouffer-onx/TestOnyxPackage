precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_HeightBandTexture;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_HeightExtents;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  fragColor_3.w = 0.0;
  float tmpvar_20;
  tmpvar_20 = float((u_HeightExtents.x != u_HeightExtents.y));
  vec2 tmpvar_21;
  tmpvar_21.y = 0.0;
  tmpvar_21.x = (tmpvar_20 * ((
    (v_texcoord7.w + u_eyePos.z)
   - u_HeightExtents.x) / (
    (tmpvar_20 * (u_HeightExtents.y - u_HeightExtents.x))
   + 
    (1.0 - tmpvar_20)
  )));
  vec4 tmpvar_22;
  tmpvar_22 = texture (s_HeightBandTexture, tmpvar_21);
  fragColor_3.xyz = mix (vec3(1.0, 1.0, 1.0), tmpvar_22.xyz, (0.5 * tmpvar_22.w));
  float tmpvar_23;
  tmpvar_23 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_23 * (tmpvar_23 * 
    (3.0 - (2.0 * tmpvar_23))
  )));
  float tmpvar_24;
  vec3 tmpvar_25;
  tmpvar_25 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_24 = sqrt(dot (tmpvar_25, tmpvar_25));
  vec3 rayDir_26;
  rayDir_26.xz = tmpvar_25.xz;
  rayDir_26.y = -(tmpvar_25.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_24 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_24 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_26).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  vec4 lineColor_27;
  float tmpvar_28;
  tmpvar_28 = sqrt(dot (tmpvar_25, tmpvar_25));
  float period_29;
  period_29 = (u_viewshedRange0.x / 4.0);
  float tmpvar_30;
  tmpvar_30 = ((1.0/(period_29)) * tmpvar_28);
  float tmpvar_31;
  tmpvar_31 = (0.5 * period_29);
  float tmpvar_32;
  tmpvar_32 = (50.0 * tmpvar_28);
  vec4 tmpvar_33;
  tmpvar_33.xyz = (vec3(1.0, 1.0, 1.0) - u_viewshedTint0.xyz);
  tmpvar_33.w = u_viewshedTint0.w;
  lineColor_27.w = tmpvar_33.w;
  lineColor_27.xyz = mix (fragColor_3.xyz, tmpvar_33.xyz, u_viewshedTint0.w);
  fragColor_3.xyz = mix (fragColor_3.xyz, lineColor_27.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_30 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_30))
     + 
      abs(dFdy(tmpvar_30))
    )), 1.0))
   * 
    (float((-(tmpvar_31) <= tmpvar_28)) * float((tmpvar_28 <= (u_viewshedRange0.x + tmpvar_31))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_32 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_32))
     + 
      abs(dFdy(tmpvar_32))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_28)) * float((tmpvar_28 <= 0.09)))
  )));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_34;
  tmpvar_34 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_35;
  tmpvar_35 = floor(tmpvar_34);
  d_2 = ((tmpvar_34 - tmpvar_35) * 256.0);
  float tmpvar_36;
  tmpvar_36 = floor(d_2);
  d_2 = ((d_2 - tmpvar_36) * 256.0);
  mediump vec4 tmpvar_37;
  tmpvar_37.w = 1.0;
  tmpvar_37.x = (tmpvar_35 / 256.0);
  tmpvar_37.y = (tmpvar_36 / 256.0);
  tmpvar_37.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_37;
  vec3 tmpvar_38;
  tmpvar_38 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_39;
  tmpvar_39.x = (tmpvar_38.y * 0.5);
  tmpvar_39.y = (-(tmpvar_38.x) * 0.5);
  tmpvar_39.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_38.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_40;
  tmpvar_40 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_39)
    ) - tmpvar_39)), tmpvar_38)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_40 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

