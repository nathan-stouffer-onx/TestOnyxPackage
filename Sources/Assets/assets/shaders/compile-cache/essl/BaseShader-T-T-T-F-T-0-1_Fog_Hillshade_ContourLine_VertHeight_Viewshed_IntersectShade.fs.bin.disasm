precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_ElevationShadeTexture;
uniform vec4 s_ElevationShadeTexture_Res;
uniform sampler2D s_SlopeAngleShadeTexture;
uniform sampler2D s_SlopeAspectShadeTexture;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_IntersectTint;
uniform vec4 u_IntersectInverted;
uniform vec4 u_ElevationExtents;
uniform vec4 u_IntersectSlopeAspectMaxNormalZ;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_HillshadeLightDir;
uniform vec4 u_HillshadeAlbedo;
uniform vec4 u_HillshadeParams;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  float tmpvar_5;
  tmpvar_5 = ((0.5 * s_heightTexture_Res.z) / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14.x = ((textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - (textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)));
  tmpvar_14.y = ((textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - (textureLod (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy), 0.0).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)));
  tmpvar_14.z = (2.0 * (tmpvar_5 * u_tileSize.x));
  normal_4 = normalize(tmpvar_14);
  fragColor_3.w = u_BackgroundColor.w;
  vec3 tmpvar_15;
  tmpvar_15.xy = (u_HillshadeParams.y * normal_4.xy);
  tmpvar_15.z = normal_4.z;
  fragColor_3.xyz = mix (u_BackgroundColor.xyz, ((u_HillshadeParams.x + 
    ((1.0 - u_HillshadeParams.x) * (0.5 * (1.0 + dot (
      normalize(tmpvar_15)
    , 
      -(u_HillshadeLightDir.xyz)
    ))))
  ) * u_HillshadeAlbedo.xyz), u_HillshadeAlbedo.w);
  float tmpvar_16;
  tmpvar_16 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_17;
  tmpvar_17 = (1.0 - (tmpvar_16 * (tmpvar_16 * 
    (3.0 - (2.0 * tmpvar_16))
  )));
  float tmpvar_18;
  float tmpvar_19;
  tmpvar_19 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_20;
  tmpvar_20 = max (u_NearFarFocus.z, 1.5);
  tmpvar_18 = (u_ContourParams0.w * min (1.0, (tmpvar_20 / 
    sqrt(tmpvar_19)
  )));
  float tmpvar_21;
  tmpvar_21 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_22;
  tmpvar_22 = (0.5 * u_ContourParams0.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_18, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_18)))
       * 
        abs((fract((tmpvar_21 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_21))
       + 
        abs(dFdy(tmpvar_21))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_22) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_22))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_17));
  float tmpvar_23;
  tmpvar_23 = (u_ContourParams1.w * min (1.0, (tmpvar_20 / 
    sqrt(tmpvar_19)
  )));
  float tmpvar_24;
  tmpvar_24 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_25;
  tmpvar_25 = (0.5 * u_ContourParams1.x);
  fragColor_3.xyz = mix (fragColor_3.xyz, mix (fragColor_3.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_23, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_23)))
       * 
        abs((fract((tmpvar_24 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_24))
       + 
        abs(dFdy(tmpvar_24))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_25) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_25))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_17));
  float tmpvar_26;
  tmpvar_26 = (1.570796 - (sign(normal_4.z) * (1.570796 - 
    (sqrt((1.0 - abs(normal_4.z))) * (1.570796 + (abs(normal_4.z) * (-0.2146018 + 
      (abs(normal_4.z) * (0.08656672 + (abs(normal_4.z) * -0.03102955)))
    ))))
  )));
  float rad_27;
  float vec_y_28;
  vec_y_28 = -(normal_4.y);
  float tmpvar_29;
  float tmpvar_30;
  tmpvar_30 = (min (abs(
    (vec_y_28 / normal_4.x)
  ), 1.0) / max (abs(
    (vec_y_28 / normal_4.x)
  ), 1.0));
  float tmpvar_31;
  tmpvar_31 = (tmpvar_30 * tmpvar_30);
  tmpvar_31 = (((
    ((((
      ((((-0.01213232 * tmpvar_31) + 0.05368138) * tmpvar_31) - 0.1173503)
     * tmpvar_31) + 0.1938925) * tmpvar_31) - 0.3326756)
   * tmpvar_31) + 0.9999793) * tmpvar_30);
  tmpvar_31 = (tmpvar_31 + (float(
    (abs((vec_y_28 / normal_4.x)) > 1.0)
  ) * (
    (tmpvar_31 * -2.0)
   + 1.570796)));
  tmpvar_29 = (tmpvar_31 * sign((vec_y_28 / normal_4.x)));
  if ((abs(normal_4.x) > (1e-08 * abs(vec_y_28)))) {
    if ((normal_4.x < 0.0)) {
      if ((vec_y_28 >= 0.0)) {
        tmpvar_29 += 3.141593;
      } else {
        tmpvar_29 = (tmpvar_29 - 3.141593);
      };
    };
  } else {
    tmpvar_29 = (sign(vec_y_28) * 1.570796);
  };
  rad_27 = (tmpvar_29 - 1.570796);
  rad_27 = (rad_27 + (float(
    (rad_27 < 0.0)
  ) * 6.283185));
  rad_27 = (6.283185 - rad_27);
  float tmpvar_32;
  tmpvar_32 = float((u_ElevationExtents.x != u_ElevationExtents.y));
  float tmpvar_33;
  tmpvar_33 = (((tmpvar_32 * 
    ((v_texcoord7.w - u_ElevationExtents.x) / ((tmpvar_32 * (u_ElevationExtents.y - u_ElevationExtents.x)) + (1.0 - tmpvar_32)))
  ) * s_ElevationShadeTexture_Res.x) * s_ElevationShadeTexture_Res.y);
  vec2 tmpvar_34;
  tmpvar_34.x = (float(mod (tmpvar_33, s_ElevationShadeTexture_Res.x)));
  tmpvar_34.y = floor((tmpvar_33 / s_ElevationShadeTexture_Res.y));
  vec2 tmpvar_35;
  tmpvar_35.y = 0.0;
  tmpvar_35.x = (tmpvar_26 / 1.570796);
  vec2 tmpvar_36;
  tmpvar_36.y = 0.0;
  tmpvar_36.x = ((float(mod (rad_27, 6.282685))) / 6.283185);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_IntersectTint.xyz), (abs(
    (u_IntersectInverted.x - ((texture (s_ElevationShadeTexture, (tmpvar_34 / s_ElevationShadeTexture_Res.xy)).x * texture (s_SlopeAngleShadeTexture, tmpvar_35).x) * (texture (s_SlopeAspectShadeTexture, tmpvar_36).x * float(
      (abs(normal_4.z) <= u_IntersectSlopeAspectMaxNormalZ.x)
    ))))
  ) * u_IntersectTint.w));
  float tmpvar_37;
  vec3 tmpvar_38;
  tmpvar_38 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_37 = sqrt(dot (tmpvar_38, tmpvar_38));
  vec3 rayDir_39;
  rayDir_39.xz = tmpvar_38.xz;
  rayDir_39.y = -(tmpvar_38.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_37 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_37 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_39).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_40;
  tmpvar_40 = sqrt(dot (tmpvar_38, tmpvar_38));
  float period_41;
  period_41 = (u_viewshedRange0.x / 4.0);
  float tmpvar_42;
  tmpvar_42 = ((1.0/(period_41)) * tmpvar_40);
  float tmpvar_43;
  tmpvar_43 = (0.5 * period_41);
  float tmpvar_44;
  tmpvar_44 = (50.0 * tmpvar_40);
  vec4 tmpvar_45;
  tmpvar_45.xyz = mix (fragColor_3.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_45.w = u_viewshedRingTint0.w;
  fragColor_3.xyz = mix (fragColor_3.xyz, tmpvar_45.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_42 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_42))
     + 
      abs(dFdy(tmpvar_42))
    )), 1.0))
   * 
    (float((-(tmpvar_43) <= tmpvar_40)) * float((tmpvar_40 <= (u_viewshedRange0.x + tmpvar_43))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_44 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_44))
     + 
      abs(dFdy(tmpvar_44))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_40)) * float((tmpvar_40 <= 0.09)))
  )));
  float tmpvar_46;
  tmpvar_46 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_FogColor.xyz, ((tmpvar_46 * 
    (tmpvar_46 * (3.0 - (2.0 * tmpvar_46)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_47;
  tmpvar_47 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_48;
  tmpvar_48 = floor(tmpvar_47);
  d_2 = ((tmpvar_47 - tmpvar_48) * 256.0);
  float tmpvar_49;
  tmpvar_49 = floor(d_2);
  d_2 = ((d_2 - tmpvar_49) * 256.0);
  mediump vec4 tmpvar_50;
  tmpvar_50.w = 1.0;
  tmpvar_50.x = (tmpvar_48 / 256.0);
  tmpvar_50.y = (tmpvar_49 / 256.0);
  tmpvar_50.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_50;
  vec3 tmpvar_51;
  tmpvar_51 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_52;
  tmpvar_52.x = (tmpvar_51.y * 0.5);
  tmpvar_52.y = (-(tmpvar_51.x) * 0.5);
  tmpvar_52.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_51.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_53;
  tmpvar_53 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_52)
    ) - tmpvar_52)), tmpvar_51)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_53 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

