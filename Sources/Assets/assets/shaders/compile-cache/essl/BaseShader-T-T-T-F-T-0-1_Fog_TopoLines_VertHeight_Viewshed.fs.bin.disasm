precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_heightTileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_TopoParams;
uniform vec4 u_minorTopoColor;
uniform vec4 u_majorTopoColor;
uniform vec4 u_TopoFade;
uniform vec4 u_TopoHeightFade;
uniform vec4 u_fogVars;
uniform vec4 u_fogColor;
uniform vec4 u_nearFarPlane;
uniform vec4 u_eyePos;
void main ()
{
  float vertDim_1;
  float d_2;
  vec4 fragColor_3;
  vec3 normal_4;
  vec2 tmpvar_5;
  tmpvar_5 = (s_heightTexture_Res.zw / v_texcoord2.z);
  vec2 tmpvar_6;
  tmpvar_6.y = 0.0;
  tmpvar_6.x = tmpvar_5.x;
  vec2 tmpvar_7;
  tmpvar_7 = (v_texcoord5.xy - tmpvar_6);
  vec2 tmpvar_8;
  tmpvar_8.y = 0.0;
  tmpvar_8.x = tmpvar_5.x;
  vec2 tmpvar_9;
  tmpvar_9 = (v_texcoord5.xy + tmpvar_8);
  vec2 tmpvar_10;
  tmpvar_10.x = 0.0;
  tmpvar_10.y = tmpvar_5.y;
  vec2 tmpvar_11;
  tmpvar_11 = (v_texcoord5.xy - tmpvar_10);
  vec2 tmpvar_12;
  tmpvar_12.x = 0.0;
  tmpvar_12.y = tmpvar_5.y;
  vec2 tmpvar_13;
  tmpvar_13 = (v_texcoord5.xy + tmpvar_12);
  float tmpvar_14;
  tmpvar_14 = (texture (s_heightTexture, ((v_texcoord2.zw * v_texcoord5.xy) + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, v_texcoord5.y));
  vec2 tmpvar_15;
  tmpvar_15 = (u_heightTileSize.xy / 256.0);
  vec3 tmpvar_16;
  tmpvar_16.y = 0.0;
  tmpvar_16.x = -(tmpvar_15.x);
  tmpvar_16.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_7)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_7.y)) - tmpvar_14);
  vec3 tmpvar_17;
  tmpvar_17.y = 0.0;
  tmpvar_17.x = tmpvar_15.x;
  tmpvar_17.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_9)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_9.y)) - tmpvar_14);
  vec3 tmpvar_18;
  tmpvar_18.x = 0.0;
  tmpvar_18.y = -(tmpvar_15.y);
  tmpvar_18.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_11)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_11.y)) - tmpvar_14);
  vec3 tmpvar_19;
  tmpvar_19.x = 0.0;
  tmpvar_19.y = tmpvar_15.y;
  tmpvar_19.z = ((texture (s_heightTexture, (
    (v_texcoord2.zw * tmpvar_13)
   + v_texcoord2.xy)).x * mix (v_texcoord3.x, v_texcoord3.y, tmpvar_13.y)) - tmpvar_14);
  normal_4 = normalize(((
    (((tmpvar_16.yzx * tmpvar_18.zxy) - (tmpvar_16.zxy * tmpvar_18.yzx)) + ((tmpvar_18.yzx * tmpvar_17.zxy) - (tmpvar_18.zxy * tmpvar_17.yzx)))
   + 
    ((tmpvar_17.yzx * tmpvar_19.zxy) - (tmpvar_17.zxy * tmpvar_19.yzx))
  ) + (
    (tmpvar_19.yzx * tmpvar_16.zxy)
   - 
    (tmpvar_19.zxy * tmpvar_16.yzx)
  )));
  fragColor_3.w = 0.0;
  float height_20;
  height_20 = (v_texcoord7.w + u_eyePos.z);
  float tmpvar_21;
  tmpvar_21 = pow ((1.0 - (
    sqrt(dot (v_texcoord7.xy, v_texcoord7.xy))
   / 
    (u_nearFarPlane.y / 3.0)
  )), 3.0);
  float strength_22;
  float tmpvar_23;
  tmpvar_23 = ((1.0/(u_TopoParams.x)) * height_20);
  float tmpvar_24;
  tmpvar_24 = (0.5 * u_TopoParams.x);
  strength_22 = ((1.0 - min (
    (abs((fract(
      (tmpvar_23 - 0.5)
    ) - 0.5)) / (abs(dFdx(tmpvar_23)) + abs(dFdy(tmpvar_23))))
  , 1.0)) * (float(
    ((-10.0 - tmpvar_24) <= height_20)
  ) * float(
    (height_20 <= (10.0 + tmpvar_24))
  )));
  float tmpvar_25;
  tmpvar_25 = ((1.0/(u_TopoParams.y)) * height_20);
  float tmpvar_26;
  tmpvar_26 = (0.5 * u_TopoParams.y);
  float tmpvar_27;
  tmpvar_27 = clamp ((pow (
    (((1.0 - min (
      (((1.0/((2.0 + 
        (u_TopoHeightFade.y * tmpvar_21)
      ))) * abs((
        fract((tmpvar_25 - 0.5))
       - 0.5))) / (abs(dFdx(tmpvar_25)) + abs(dFdy(tmpvar_25))))
    , 1.0)) * (float(
      ((-10.0 - tmpvar_26) <= height_20)
    ) * float(
      (height_20 <= (10.0 + tmpvar_26))
    ))) + 0.5)
  , 3.0) - 0.5), 0.0, 1.0);
  fragColor_3.xyz = mix (vec3(1.0, 1.0, 1.0), ((u_majorTopoColor.xyz * tmpvar_27) + (u_minorTopoColor.xyz * 
    clamp ((strength_22 - tmpvar_27), 0.0, 1.0)
  )), clamp ((
    mix (u_TopoFade.y, u_TopoFade.x, tmpvar_21)
   * 
    max ((strength_22 * u_TopoHeightFade.x), (tmpvar_27 * u_TopoHeightFade.y))
  ), 0.0, 1.0));
  float tmpvar_28;
  tmpvar_28 = clamp (((v_texcoord4.x - u_fogVars.x) / (1.0 - u_fogVars.x)), 0.0, 1.0);
  fragColor_3.xyz = mix (fragColor_3.xyz, u_fogColor.xyz, (tmpvar_28 * (tmpvar_28 * 
    (3.0 - (2.0 * tmpvar_28))
  )));
  float tmpvar_29;
  vec3 tmpvar_30;
  tmpvar_30 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_29 = sqrt(dot (tmpvar_30, tmpvar_30));
  vec3 rayDir_31;
  rayDir_31.xz = tmpvar_30.xz;
  rayDir_31.y = -(tmpvar_30.y);
  fragColor_3.xyz = mix (fragColor_3.xyz, ((
    ((fragColor_3.x + fragColor_3.y) + fragColor_3.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_29 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_29 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_31).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  vec4 lineColor_32;
  float tmpvar_33;
  tmpvar_33 = sqrt(dot (tmpvar_30, tmpvar_30));
  float period_34;
  period_34 = (u_viewshedRange0.x / 4.0);
  float tmpvar_35;
  tmpvar_35 = ((1.0/(period_34)) * tmpvar_33);
  float tmpvar_36;
  tmpvar_36 = (0.5 * period_34);
  float tmpvar_37;
  tmpvar_37 = (50.0 * tmpvar_33);
  vec4 tmpvar_38;
  tmpvar_38.xyz = (vec3(1.0, 1.0, 1.0) - u_viewshedTint0.xyz);
  tmpvar_38.w = u_viewshedTint0.w;
  lineColor_32.w = tmpvar_38.w;
  lineColor_32.xyz = mix (fragColor_3.xyz, tmpvar_38.xyz, u_viewshedTint0.w);
  fragColor_3.xyz = mix (fragColor_3.xyz, lineColor_32.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_35 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_35))
     + 
      abs(dFdy(tmpvar_35))
    )), 1.0))
   * 
    (float((-(tmpvar_36) <= tmpvar_33)) * float((tmpvar_33 <= (u_viewshedRange0.x + tmpvar_36))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_37 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_37))
     + 
      abs(dFdy(tmpvar_37))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_33)) * float((tmpvar_33 <= 0.09)))
  )));
  bgfx_FragData[0] = fragColor_3;
  float tmpvar_39;
  tmpvar_39 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_40;
  tmpvar_40 = floor(tmpvar_39);
  d_2 = ((tmpvar_39 - tmpvar_40) * 256.0);
  float tmpvar_41;
  tmpvar_41 = floor(d_2);
  d_2 = ((d_2 - tmpvar_41) * 256.0);
  mediump vec4 tmpvar_42;
  tmpvar_42.w = 1.0;
  tmpvar_42.x = (tmpvar_40 / 256.0);
  tmpvar_42.y = (tmpvar_41 / 256.0);
  tmpvar_42.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_42;
  vec3 tmpvar_43;
  tmpvar_43 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_44;
  tmpvar_44.x = (tmpvar_43.y * 0.5);
  tmpvar_44.y = (-(tmpvar_43.x) * 0.5);
  tmpvar_44.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_43.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_4.z)) * 2.0);
  float tmpvar_45;
  tmpvar_45 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_4)
     * 
      dot (normal_4, tmpvar_44)
    ) - tmpvar_44)), tmpvar_43)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_45 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

