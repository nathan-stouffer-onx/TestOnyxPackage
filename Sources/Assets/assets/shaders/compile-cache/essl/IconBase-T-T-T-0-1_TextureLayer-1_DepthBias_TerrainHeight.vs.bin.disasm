precision highp int;
precision highp float;
in highp vec3 a_position;
in highp vec4 a_texcoord0;
out highp vec4 v_color0;
out highp vec4 v_color1;
out vec3 v_position;
out highp vec4 v_texcoord0;
uniform highp mat4 u_view;
uniform highp mat4 u_proj;
uniform sampler2D s_heightTextureVert;
uniform highp vec4 u_tileSize;
uniform highp vec4 u_ScaleOffsetHeight;
uniform highp vec4 u_tileDistortion;
uniform highp vec4 u_MeshResolution;
uniform highp vec4 u_depthModifier;
uniform highp vec4 u_tileMin;
uniform highp vec4 u_tileMax;
uniform highp vec4 u_scale;
uniform highp vec4 color1;
uniform highp vec4 color0;
uniform highp vec4 quatRot;
uniform highp vec4 pixelSize;
uniform highp vec4 iconPos;
void main ()
{
  float tileZ_1;
  vec3 midpoint_2;
  vec3 position_3;
  position_3 = a_position;
  midpoint_2 = iconPos.xyz;
  highp vec2 tmpvar_4;
  tmpvar_4 = (u_scale.x * pixelSize.xy);
  tileZ_1 = 0.0;
  vec2 tmpvar_5;
  tmpvar_5 = floor((u_MeshResolution.x * clamp (iconPos.xy, vec2(0.00390625, 0.00390625), vec2(0.9960938, 0.9960938))));
  vec2 tmpvar_6;
  tmpvar_6.x = (tmpvar_5.x + 1.0);
  tmpvar_6.y = tmpvar_5.y;
  vec2 tmpvar_7;
  tmpvar_7 = (tmpvar_6 / u_MeshResolution.x);
  vec2 tmpvar_8;
  tmpvar_8.x = tmpvar_5.x;
  tmpvar_8.y = (tmpvar_5.y + 1.0);
  vec2 tmpvar_9;
  tmpvar_9 = (tmpvar_8 / u_MeshResolution.x);
  vec2 tmpvar_10;
  tmpvar_10.x = tmpvar_9.x;
  tmpvar_10.y = tmpvar_7.y;
  vec2 tmpvar_11;
  tmpvar_11.x = tmpvar_7.x;
  tmpvar_11.y = tmpvar_9.y;
  float tmpvar_12;
  vec2 x_13;
  x_13 = (tmpvar_10 - iconPos.xy);
  tmpvar_12 = sqrt(dot (x_13, x_13));
  float tmpvar_14;
  vec2 x_15;
  x_15 = (tmpvar_11 - iconPos.xy);
  tmpvar_14 = sqrt(dot (x_15, x_15));
  vec2 tmpvar_16;
  if ((tmpvar_12 <= tmpvar_14)) {
    tmpvar_16 = tmpvar_10;
  } else {
    tmpvar_16 = tmpvar_11;
  };
  vec3 tmpvar_17;
  tmpvar_17.xy = mix (u_tileMin.xy, u_tileMax.xy, tmpvar_7);
  tmpvar_17.z = (textureLod (s_heightTextureVert, ((u_ScaleOffsetHeight.zw * tmpvar_7) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_7.y));
  vec3 tmpvar_18;
  tmpvar_18.xy = mix (u_tileMin.xy, u_tileMax.xy, tmpvar_9);
  tmpvar_18.z = (textureLod (s_heightTextureVert, ((u_ScaleOffsetHeight.zw * tmpvar_9) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_9.y));
  vec3 tmpvar_19;
  tmpvar_19.xy = mix (u_tileMin.xy, u_tileMax.xy, tmpvar_16);
  tmpvar_19.z = (textureLod (s_heightTextureVert, ((u_ScaleOffsetHeight.zw * tmpvar_16) + u_ScaleOffsetHeight.xy), 0.0).x * mix (u_tileDistortion.x, u_tileDistortion.y, tmpvar_16.y));
  vec3 tmpvar_20;
  vec3 a_21;
  a_21 = (tmpvar_18 - tmpvar_17);
  vec3 b_22;
  b_22 = (tmpvar_19 - tmpvar_17);
  tmpvar_20 = ((a_21.yzx * b_22.zxy) - (a_21.zxy * b_22.yzx));
  tileZ_1 = (((
    dot (tmpvar_20, tmpvar_17)
   - 
    dot (tmpvar_20.xy, mix (u_tileMin.xy, u_tileMax.xy, iconPos.xy))
  ) / tmpvar_20.z) * u_tileSize.z);
  midpoint_2.z = ((tileZ_1 - -10.0) / 19.0);
  vec3 tmpvar_23;
  tmpvar_23 = mix (u_tileMin.xyz, u_tileMax.xyz, midpoint_2);
  midpoint_2 = tmpvar_23;
  highp vec3 tmpvar_24;
  tmpvar_24.z = 1.0;
  tmpvar_24.xy = tmpvar_4;
  position_3 = (tmpvar_24 * a_position);
  position_3 = (((
    ((((
      (quatRot.w * quatRot.w)
     - 
      (((quatRot.x * quatRot.x) + (quatRot.y * quatRot.y)) + (quatRot.z * quatRot.z))
    ) * position_3) + ((2.0 * 
      dot (position_3, quatRot.xyz)
    ) * quatRot.xyz)) + ((2.0 * quatRot.w) * ((quatRot.yzx * position_3.zxy) - (quatRot.zxy * position_3.yzx))))
   + tmpvar_23) + color0.xyz) + color1.xyz);
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = position_3;
  gl_Position = (u_proj * (u_view * tmpvar_25));
  gl_Position.z = (gl_Position.z - (gl_Position.w * u_depthModifier.x));
  v_color1 = color1;
  v_color0 = color0;
  v_texcoord0 = a_texcoord0;
  v_position = position_3;
}

