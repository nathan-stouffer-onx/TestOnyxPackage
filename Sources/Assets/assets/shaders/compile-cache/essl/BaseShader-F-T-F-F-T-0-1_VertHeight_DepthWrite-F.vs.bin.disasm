precision highp int;
precision highp float;
in highp vec3 a_position;
in highp vec4 a_texcoord7;
out highp vec4 v_texcoord4;
out highp vec4 v_texcoord5;
out highp vec4 v_texcoord6;
out vec4 v_texcoord7;
uniform highp mat4 u_view;
uniform highp mat4 u_proj;
uniform sampler2D s_heightTexture;
uniform highp vec4 u_tileSize;
uniform highp vec4 u_tileDistortion;
uniform highp vec4 u_ScaleOffsetHeight;
uniform highp vec4 u_NearFarFocus;
uniform highp vec4 u_tileMin;
uniform highp vec4 u_tileMax;
void main ()
{
  vec4 depth_1;
  vec3 vertexPosition_2;
  vec4 worldPosition_3;
  vec4 tmpvar_4;
  tmpvar_4.w = 0.0;
  tmpvar_4.xy = mix (u_tileMin.xy, u_tileMax.xy, a_position.xy);
  tmpvar_4.z = (u_tileMin.z + (a_position.z * u_tileMax.z));
  worldPosition_3.xyz = tmpvar_4.xyz;
  vertexPosition_2.xy = tmpvar_4.xy;
  worldPosition_3.w = textureLod (s_heightTexture, ((u_ScaleOffsetHeight.zw * a_texcoord7.xy) + u_ScaleOffsetHeight.xy), 0.0).x;
  float tmpvar_5;
  tmpvar_5 = (worldPosition_3.w * mix (u_tileDistortion.x, u_tileDistortion.y, a_texcoord7.y));
  worldPosition_3.z = (tmpvar_4.z + tmpvar_5);
  vertexPosition_2.z = (tmpvar_4.z + (tmpvar_5 * u_tileSize.z));
  vec4 tmpvar_6;
  tmpvar_6.w = 1.0;
  tmpvar_6.xyz = vertexPosition_2;
  vec4 tmpvar_7;
  tmpvar_7 = (u_proj * (u_view * tmpvar_6));
  depth_1.w = tmpvar_7.w;
  vec3 tmpvar_8;
  tmpvar_8.yz = vec2(0.0, 0.0);
  tmpvar_8.x = (sqrt(dot (worldPosition_3.xyz, worldPosition_3.xyz)) / u_NearFarFocus.y);
  depth_1.xyz = tmpvar_8;
  gl_Position = tmpvar_7;
  v_texcoord7 = depth_1;
  v_texcoord6 = a_texcoord7;
  v_texcoord5 = u_tileDistortion;
  v_texcoord4 = u_ScaleOffsetHeight;
}

