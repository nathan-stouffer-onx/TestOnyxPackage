precision highp int;
precision highp float;
out mediump vec4 bgfx_FragData[8];
in vec4 v_color4;
in vec4 v_texcoord0;
in vec4 v_texcoord1;
in vec4 v_texcoord2;
in vec4 v_texcoord3;
in vec4 v_texcoord4;
in vec4 v_texcoord5;
in vec4 v_texcoord6;
in vec4 v_texcoord7;
uniform sampler2D s_heightTexture;
uniform vec4 s_heightTexture_Res;
uniform sampler2D s_sunShadowDepth;
uniform sampler2D s_texture0;
uniform sampler2D s_texture1;
uniform sampler2D s_texture2;
uniform samplerCube s_cubeDepth0;
uniform vec4 u_viewshedTint0;
uniform vec4 u_viewshedRingTint0;
uniform vec4 u_viewshedRange0;
uniform vec4 u_viewshedPos0;
uniform vec4 u_viewshedFarPlane0;
uniform vec4 u_viewshedInverted0;
uniform vec4 u_viewshedBias0;
uniform vec4 u_tileSize;
uniform vec4 u_lightStrengthPow;
uniform vec4 u_ContourParams0;
uniform vec4 u_ContourColor0;
uniform vec4 u_ContourParams1;
uniform vec4 u_ContourColor1;
uniform vec4 u_ContourFade;
uniform vec4 u_SunMinStrength;
uniform vec4 u_SunAmbient;
uniform vec4 u_sunShadowBias;
uniform vec4 u_sunShadowStrength;
uniform vec4 u_sunShadowVSMParams;
uniform vec4 u_CascadeDebug;
uniform vec4 u_FogTransition;
uniform vec4 u_FogColor;
uniform vec4 u_ScaleOffsetTex0;
uniform vec4 u_OpacityTex0;
uniform vec4 u_ScaleOffsetTex1;
uniform vec4 u_OpacityTex1;
uniform vec4 u_ScaleOffsetTex2;
uniform vec4 u_OpacityTex2;
uniform vec4 u_BackgroundColor;
uniform vec4 u_NearFarFocus;
void main ()
{
  float vertDim_1;
  float d_2;
  vec2 projectedUV_3;
  vec4 fragColor_4;
  vec3 normal_5;
  float tmpvar_6;
  tmpvar_6 = ((0.5 * s_heightTexture_Res.z) / v_color4.z);
  vec2 tmpvar_7;
  tmpvar_7.y = 0.0;
  tmpvar_7.x = tmpvar_6;
  vec2 tmpvar_8;
  tmpvar_8 = (v_texcoord5.xy - tmpvar_7);
  vec2 tmpvar_9;
  tmpvar_9.y = 0.0;
  tmpvar_9.x = tmpvar_6;
  vec2 tmpvar_10;
  tmpvar_10 = (v_texcoord5.xy + tmpvar_9);
  vec2 tmpvar_11;
  tmpvar_11.x = 0.0;
  tmpvar_11.y = tmpvar_6;
  vec2 tmpvar_12;
  tmpvar_12 = (v_texcoord5.xy - tmpvar_11);
  vec2 tmpvar_13;
  tmpvar_13.x = 0.0;
  tmpvar_13.y = tmpvar_6;
  vec2 tmpvar_14;
  tmpvar_14 = (v_texcoord5.xy + tmpvar_13);
  vec3 tmpvar_15;
  tmpvar_15.x = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_8)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_8.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_10)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_10.y)));
  tmpvar_15.y = ((textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_12)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_12.y)) - (textureLod (s_heightTexture, (
    (v_color4.zw * tmpvar_14)
   + v_color4.xy), 0.0).x * mix (v_texcoord0.x, v_texcoord0.y, tmpvar_14.y)));
  tmpvar_15.z = (2.0 * (tmpvar_6 * u_tileSize.x));
  normal_5 = normalize(tmpvar_15);
  vec4 color_16;
  vec4 tmpvar_17;
  tmpvar_17 = texture (s_texture0, (u_ScaleOffsetTex0.xy + (v_texcoord5.xy * u_ScaleOffsetTex0.zw)));
  color_16.xyz = mix (u_BackgroundColor.xyz, tmpvar_17.xyz, (tmpvar_17.w * u_OpacityTex0.x));
  color_16.w = max (u_BackgroundColor.w, tmpvar_17.w);
  vec4 tmpvar_18;
  tmpvar_18 = texture (s_texture1, (u_ScaleOffsetTex1.xy + (v_texcoord5.xy * u_ScaleOffsetTex1.zw)));
  color_16.xyz = mix (color_16.xyz, tmpvar_18.xyz, (tmpvar_18.w * u_OpacityTex1.x));
  color_16.w = max (color_16.w, tmpvar_18.w);
  vec4 tmpvar_19;
  tmpvar_19 = texture (s_texture2, (u_ScaleOffsetTex2.xy + (v_texcoord5.xy * u_ScaleOffsetTex2.zw)));
  color_16.xyz = mix (color_16.xyz, tmpvar_19.xyz, (tmpvar_19.w * u_OpacityTex2.x));
  color_16.w = max (color_16.w, tmpvar_19.w);
  vec3 tangentSun_20;
  vec3 planetNormal_21;
  float tmpvar_22;
  tmpvar_22 = (6.283185 * (v_texcoord2.x - 0.5));
  float tmpvar_23;
  tmpvar_23 = ((6.283185 * (
    (1.0 - v_texcoord2.y)
   - 0.5)) / 2.0);
  planetNormal_21.x = (cos(tmpvar_23) * cos(tmpvar_22));
  planetNormal_21.y = (cos(tmpvar_23) * sin(tmpvar_22));
  planetNormal_21.z = sin(tmpvar_23);
  vec3 tmpvar_24;
  tmpvar_24 = normalize(((planetNormal_21.yzx * vec3(0.0, 1.0, 0.0)) - (planetNormal_21.zxy * vec3(0.0, 0.0, 1.0))));
  tangentSun_20.x = -(dot (tmpvar_24, v_texcoord3.xyz));
  tangentSun_20.y = -(dot (normalize(
    ((planetNormal_21.yzx * tmpvar_24.zxy) - (planetNormal_21.zxy * tmpvar_24.yzx))
  ), v_texcoord3.xyz));
  tangentSun_20.z = dot (planetNormal_21, v_texcoord3.xyz);
  vec4 tmpvar_25;
  tmpvar_25.w = 1.0;
  tmpvar_25.xyz = mix (vec3(clamp (dot (tangentSun_20, normal_5), 0.0, 1.0)), (vec3(0.75, 0.79, 1.0) * dot (
    ((normal_5 * 2.0) - 1.0)
  , vec3(0.1924501, 0.1924501, 0.9622505))), (0.5 * u_SunAmbient.x));
  vec4 tmpvar_26;
  tmpvar_26 = mix (color_16, tmpvar_25, u_SunMinStrength.x);
  fragColor_4.w = tmpvar_26.w;
  float tmpvar_27;
  tmpvar_27 = (v_texcoord1.z - u_sunShadowBias.x);
  projectedUV_3 = (v_texcoord1.xy / v_texcoord1.w);
  projectedUV_3 = ((projectedUV_3 * 0.5) + 0.5);
  vec4 tmpvar_28;
  tmpvar_28 = texture (s_sunShadowDepth, projectedUV_3);
  float tmpvar_29;
  tmpvar_29 = max ((tmpvar_28.y - (tmpvar_28.x * tmpvar_28.x)), u_sunShadowVSMParams.x);
  float tmpvar_30;
  tmpvar_30 = (tmpvar_27 - tmpvar_28.x);
  fragColor_4.xyz = mix (tmpvar_26.xyz, vec3(min (max (
    float((tmpvar_27 <= tmpvar_28.x))
  , 
    clamp ((((tmpvar_29 / 
      (tmpvar_29 + (tmpvar_30 * tmpvar_30))
    ) - u_sunShadowVSMParams.y) / (1.0 - u_sunShadowVSMParams.y)), 0.0, 1.0)
  ), 1.0)), u_sunShadowStrength.x);
  if ((u_CascadeDebug.x > 0.5)) {
    fragColor_4.xyz = texture (s_sunShadowDepth, projectedUV_3).xyz;
  };
  float tmpvar_31;
  tmpvar_31 = clamp (((
    sqrt(dot (v_texcoord7.xyz, v_texcoord7.xyz))
   - u_ContourFade.x) / (u_ContourFade.y - u_ContourFade.x)), 0.0, 1.0);
  float tmpvar_32;
  tmpvar_32 = (1.0 - (tmpvar_31 * (tmpvar_31 * 
    (3.0 - (2.0 * tmpvar_31))
  )));
  float tmpvar_33;
  float tmpvar_34;
  tmpvar_34 = dot (v_texcoord7, v_texcoord7);
  float tmpvar_35;
  tmpvar_35 = max (u_NearFarFocus.z, 1.5);
  tmpvar_33 = (u_ContourParams0.w * min (1.0, (tmpvar_35 / 
    sqrt(tmpvar_34)
  )));
  float tmpvar_36;
  tmpvar_36 = ((1.0/(u_ContourParams0.x)) * v_texcoord7.w);
  float tmpvar_37;
  tmpvar_37 = (0.5 * u_ContourParams0.x);
  fragColor_4.xyz = mix (fragColor_4.xyz, mix (fragColor_4.xyz, u_ContourColor0.xyz, (u_ContourColor0.w * 
    min (tmpvar_33, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_33)))
       * 
        abs((fract((tmpvar_36 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_36))
       + 
        abs(dFdy(tmpvar_36))
      )), 1.0))
     * 
      (float(((u_ContourParams0.y - tmpvar_37) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams0.z + tmpvar_37))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_32));
  float tmpvar_38;
  tmpvar_38 = (u_ContourParams1.w * min (1.0, (tmpvar_35 / 
    sqrt(tmpvar_34)
  )));
  float tmpvar_39;
  tmpvar_39 = ((1.0/(u_ContourParams1.x)) * v_texcoord7.w);
  float tmpvar_40;
  tmpvar_40 = (0.5 * u_ContourParams1.x);
  fragColor_4.xyz = mix (fragColor_4.xyz, mix (fragColor_4.xyz, u_ContourColor1.xyz, (u_ContourColor1.w * 
    min (tmpvar_38, 1.0)
  )), (clamp (
    (pow (((
      (1.0 - min (((
        (1.0/(max (1.5, tmpvar_38)))
       * 
        abs((fract((tmpvar_39 - 0.5)) - 0.5))
      ) / (
        abs(dFdx(tmpvar_39))
       + 
        abs(dFdy(tmpvar_39))
      )), 1.0))
     * 
      (float(((u_ContourParams1.y - tmpvar_40) <= v_texcoord7.w)) * float((v_texcoord7.w <= (u_ContourParams1.z + tmpvar_40))))
    ) + 0.5), 3.0) - 0.5)
  , 0.0, 1.0) * tmpvar_32));
  float tmpvar_41;
  vec3 tmpvar_42;
  tmpvar_42 = (v_texcoord7.xyz - u_viewshedPos0.xyz);
  tmpvar_41 = sqrt(dot (tmpvar_42, tmpvar_42));
  vec3 rayDir_43;
  rayDir_43.xz = tmpvar_42.xz;
  rayDir_43.y = -(tmpvar_42.y);
  fragColor_4.xyz = mix (fragColor_4.xyz, ((
    ((fragColor_4.x + fragColor_4.y) + fragColor_4.z)
   / 3.0) * u_viewshedTint0.xyz), ((
    float((tmpvar_41 < u_viewshedRange0.x))
   * 
    abs((u_viewshedInverted0.x - float((
      (tmpvar_41 - u_viewshedBias0.x)
     < 
      (texture (s_cubeDepth0, rayDir_43).x * u_viewshedFarPlane0.x)
    ))))
  ) * u_viewshedTint0.w));
  float tmpvar_44;
  tmpvar_44 = sqrt(dot (tmpvar_42, tmpvar_42));
  float period_45;
  period_45 = (u_viewshedRange0.x / 4.0);
  float tmpvar_46;
  tmpvar_46 = ((1.0/(period_45)) * tmpvar_44);
  float tmpvar_47;
  tmpvar_47 = (0.5 * period_45);
  float tmpvar_48;
  tmpvar_48 = (50.0 * tmpvar_44);
  vec4 tmpvar_49;
  tmpvar_49.xyz = mix (fragColor_4.xyz, u_viewshedRingTint0.xyz, u_viewshedRingTint0.w);
  tmpvar_49.w = u_viewshedRingTint0.w;
  fragColor_4.xyz = mix (fragColor_4.xyz, tmpvar_49.xyz, ((
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_46 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_46))
     + 
      abs(dFdy(tmpvar_46))
    )), 1.0))
   * 
    (float((-(tmpvar_47) <= tmpvar_44)) * float((tmpvar_44 <= (u_viewshedRange0.x + tmpvar_47))))
  ) + (
    (1.0 - min (((0.6666667 * 
      abs((fract((tmpvar_48 - 0.5)) - 0.5))
    ) / (
      abs(dFdx(tmpvar_48))
     + 
      abs(dFdy(tmpvar_48))
    )), 1.0))
   * 
    (float((-0.01 <= tmpvar_44)) * float((tmpvar_44 <= 0.09)))
  )));
  float tmpvar_50;
  tmpvar_50 = clamp (((v_texcoord4.x - u_FogTransition.x) / (u_FogTransition.y - u_FogTransition.x)), 0.0, 1.0);
  fragColor_4.xyz = mix (fragColor_4.xyz, u_FogColor.xyz, ((tmpvar_50 * 
    (tmpvar_50 * (3.0 - (2.0 * tmpvar_50)))
  ) * u_FogColor.w));
  bgfx_FragData[0] = fragColor_4;
  float tmpvar_51;
  tmpvar_51 = (((
    (v_texcoord6.z / v_texcoord6.w)
   * 0.5) + 0.5) * 256.0);
  float tmpvar_52;
  tmpvar_52 = floor(tmpvar_51);
  d_2 = ((tmpvar_51 - tmpvar_52) * 256.0);
  float tmpvar_53;
  tmpvar_53 = floor(d_2);
  d_2 = ((d_2 - tmpvar_53) * 256.0);
  mediump vec4 tmpvar_54;
  tmpvar_54.w = 1.0;
  tmpvar_54.x = (tmpvar_52 / 256.0);
  tmpvar_54.y = (tmpvar_53 / 256.0);
  tmpvar_54.z = (floor(d_2) / 256.0);
  bgfx_FragData[1] = tmpvar_54;
  vec3 tmpvar_55;
  tmpvar_55 = normalize(-(v_texcoord7.xyz));
  vec3 tmpvar_56;
  tmpvar_56.x = (tmpvar_55.y * 0.5);
  tmpvar_56.y = (-(tmpvar_55.x) * 0.5);
  tmpvar_56.z = max ((0.7 * (1.0 - 
    max (0.0, tmpvar_55.z)
  )), 0.2);
  vertDim_1 = ((1.0 - max (0.0, normal_5.z)) * 2.0);
  float tmpvar_57;
  tmpvar_57 = pow (min (max (
    dot (normalize(((
      (2.0 * normal_5)
     * 
      dot (normal_5, tmpvar_56)
    ) - tmpvar_56)), tmpvar_55)
  , 0.0), 1.0), u_lightStrengthPow.y);
  bgfx_FragData[0].xyz = (bgfx_FragData[0].xyz + ((
    (tmpvar_57 * u_lightStrengthPow.x)
   * 
    ((vertDim_1 * 0.9) + 0.1)
  ) * min (
    max (((-(v_texcoord7.z) - 5.0) / 100.0), 0.0)
  , 1.0)));
}

