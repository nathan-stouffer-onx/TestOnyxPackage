{
  "name": "GaussBlur",
  "sortOrder": 4,
  "requirements": {
    "uv0": true
  },
  "chunks": [
    {
      "lines": [
        "\tvec4 color = vec4(0.0, 0.0, 0.0, 0.0);",
        "\tvec4 c[7];",
        "\tfloat gaussScale[7];",
        "\tgaussScale[0] = 1.0 / 64.0;",
        "\tgaussScale[1] = 6.0/64.0;",
        "\tgaussScale[2] = 15.0/64.0;",
        "\tgaussScale[3] = 20.0/64.0;",
        "\tgaussScale[4] = 15.0/64.0;",
        "\tgaussScale[5] = 6.0/64.0;",
        "\tgaussScale[6] = 1.0/64.0;",
        "\tfloat count = 0.0;",
        "\tc[0] = texture2D(s_BlurTex, texcoords.xy + (vec2(-3.0, -3.0) * u_GaussBlurScale.xy));",
        "\tc[1] = texture2D(s_BlurTex, texcoords.xy + (vec2(-2.0, -2.0) * u_GaussBlurScale.xy));",
        "\tc[2] = texture2D(s_BlurTex, texcoords.xy + (vec2(-1.0, -1.0) * u_GaussBlurScale.xy));",
        "\tc[3] = texture2D(s_BlurTex, texcoords.xy + (vec2(0.0, 0.0)  * u_GaussBlurScale.xy));",
        "\tc[4] = texture2D(s_BlurTex, texcoords.xy + (vec2(1.0, 1.0)  * u_GaussBlurScale.xy));",
        "\tc[5] = texture2D(s_BlurTex, texcoords.xy + (vec2(2.0, 2.0)  * u_GaussBlurScale.xy));",
        "\tc[6] = texture2D(s_BlurTex, texcoords.xy + (vec2(3.0, 3.0)  * u_GaussBlurScale.xy));",
        "\tfor(int i = 0; i < 7; i++)",
        "\t{",
        "\t\tfloat fakeAlpha = 1.0 - float(c[i].y >= 0.99999);//RG32 so no alpha, but only the clearcolor will have a 1.0 value here",
        "\t\tcolor += c[i] * fakeAlpha * gaussScale[i];",
        "\t\tcount += fakeAlpha * gaussScale[i];",
        "\t}",
        "\tcolor /= count;",
        "\tif(count <= 0.0001) color = vec4(1.0,1.0,1.0,1.0); //todo - find non branching math if this improves things",
        "\tfragColor = color;"
        ],
      "position": "Main",
      "positionOffset": 0,
      "type": "Pixel"
    }
  ],
  "ints": {},
  "shaderParameters": [
    {
      "imguiRate": 0.001,
      "name": "u_GaussBlurScale",
      "realtimeUniform": true,
      "type": "vec3"
    },
    {
      "name": "s_BlurTex",
      "realtimeUniform": true,
      "type": "texture",
      "anisoFilter": true
    }
  ]
}