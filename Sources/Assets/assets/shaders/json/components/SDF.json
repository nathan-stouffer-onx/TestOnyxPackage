{
  "name": "SDF",
  "sortOrder": 9,
  "requirements": {
    "addUV": 0,
    "addColor": 0
  },
  "ints": {},
  "bools": {
    "DropShadow": false,
    "Outline": false
  },
  "inputs" : [
    {
      "alias" : "sdf_tex0",
      "dataType" : "vec4"
    },
    {
      "alias" : "sdf_options",
      "dataType" : "vec4"
    },
    {
      "alias" : "fontColor0",
      "dataType" : "vec4"
    },
    {
      "alias" : "fontColor1",
      "dataType" : "vec4"
    }
  ],
  "outputs" : [
    {
      "alias" : "sdf_tex0",
      "dataType" : "vec4"
    },
    {
      "alias" : "sdf_options",
      "dataType" : "vec4"
    },
    {
      "alias" : "fontColor0",
      "dataType" : "vec4"
    },
    {
      "alias" : "fontColor1",
      "dataType" : "vec4"
    }
  ],  
  "chunks": [
    {
      "lines": [
        "#define u_pixelSize              u_sdfParams.x",
        "#define u_distanceMultiplier     u_sdfParams.y",
        "#define u_dropShadowSoftener     u_sdfParams.z",
        "#define u_outlineWidth           u_sdfParams.w"
      ],
      "position": "Definitions",
      "positionOffset": 0,
      "type": "Pixel"
    },
    {
      "lines": [
        "//fragColor = vec4(1,1,0,1);",
        "//return; //temp for testing",

        "if (sdf_options.w == 1.0f)",
        "{",
          "\tvec4 imageColor = textureCube(s_fontAtlas, sdf_tex0.xyz);",
          "\tgl_FragColor = vec4(imageColor.xyz, imageColor.w * fontColor0.w);",
          "\treturn;",
        "}",
        "if (sdf_options.w == -1.0f)",
        "{",
          "\tvec4 shadowTexCoord = sdf_tex0;",
          "\tvec4 shadowDistanceColor = textureCube(s_fontAtlas, shadowTexCoord.xyz);",
          "\tint index2 = int(shadowTexCoord.w * 4.0 + 0.5);",
          "\tfloat rgba2[4];",
          "\trgba2[0] = shadowDistanceColor.z;",
          "\trgba2[1] = shadowDistanceColor.y;",
          "\trgba2[2] = shadowDistanceColor.x;",
          "\trgba2[3] = shadowDistanceColor.w;",
          "\tfloat shadowDistance = rgba2[index2];",
          "\tfloat shadowSmoothing = 16.0 * length(fwidth(shadowTexCoord.xyz)) / sqrt(2.0) * u_distanceMultiplier;",
          "\tfloat outlineWidth = u_outlineWidth * shadowSmoothing;",
          "\tfloat outerEdgeCenter = 0.5 - outlineWidth;",
          "\tshadowSmoothing = shadowSmoothing * u_dropShadowSoftener;",
          "\tfloat shadowAlpha = smoothstep(outerEdgeCenter - shadowSmoothing, outerEdgeCenter + shadowSmoothing, shadowDistance);",
          "\tvec4 shadowColor = vec4(fontColor0.xyz, shadowAlpha * fontColor0.w);",
          "\tgl_FragColor = shadowColor;",
          "\treturn;",
        "}",
        "vec4 color = textureCube(s_fontAtlas, sdf_tex0.xyz);",
        "int index = int(sdf_tex0.w * 4.0 + 0.5);",
        "float rgba[4];",
        "rgba[0] = color.z;",
        "rgba[1] = color.y;",
        "rgba[2] = color.x;",
        "rgba[3] = color.w;",
        "float sharpeningStrength = max(0.1, min(u_pixelSize / 14.0, 1.0));",
        "float distance = rgba[index] * mix(1.03, 0.98, sharpeningStrength);",
        "float smoothing = 16.0 * length(fwidth(sdf_tex0.xyz)) / sqrt(mix(6.0, 10.0, sharpeningStrength)) * u_distanceMultiplier;",
        "float outlineWidth = u_outlineWidth * smoothing * mix(1.5, 2.5, sharpeningStrength);",
        "float outerEdgeCenter = 0.5 - outlineWidth;",
        "float alpha = smoothstep(outerEdgeCenter - smoothing, outerEdgeCenter + smoothing, distance + mix(0.035, 0.005, sharpeningStrength));",
        "float borderBlendCorrection = 0.47; //not sure why, but at 0.5 our text color was being blended with the border beyond the edges of the border, .47 seems to look a lot better so far",
        "float border = smoothstep(borderBlendCorrection - smoothing, borderBlendCorrection + smoothing, distance);",
        "vec4 sdfColor = vec4(mix(fontColor1.xyz, fontColor0.xyz, border), alpha * fontColor0.w);",
        "fragColor = sdfColor;"
      ],
      "position": "Main",
      "positionOffset": 0,
      "type": "Pixel"
    }
  ],
  "shaderParameters": [
    {
      "name": "s_fontAtlas",
      "imguiRate": 0.01,
      "max": -1.0,
      "min": -1.0,
      "realtimeUniform": true,
      "shaderType": "Pixel",
      "type": "cubeSampler"
    },
    {
      "bool": false,
      "imguiRate": 0.01,
      "max": -1.0,
      "min": -1.0,
      "name": "DropShadow",
      "realtimeUniform": false,
      "type": "bool"
    },
    {
      "bool": false,
      "imguiRate": 0.01,
      "max": -1.0,
      "min": -1.0,
      "name": "Outline",
      "realtimeUniform": false,
      "type": "bool"
    },
    {
      "imguiRate": 0.01,
      "max": 1.0,
      "min": 0.0,
      "name": "u_sdfParams",
      "realtimeUniform": true,
      "type": "vec4",
      "vec4": {
        "x": 0.0,
        "y": 0.0,
        "z": 1.0,
        "w": 0.0
      }
    },
    {
      "imguiRate": 0.01,
      "max": 1.0,
      "min": 0.0,
      "name": "u_dropShadowColor",
      "realtimeUniform": true,
      "type": "vec4",
      "vec4": {
        "x": 0.0,
        "y": 0.0,
        "z": 1.0,
        "w": 0.0
      }
    }
  ]
}