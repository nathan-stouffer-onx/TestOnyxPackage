{
    "TODO": "This shader component should be deprecated once the Icon implementation takes over Trackers/Billboards",
    
    "sortOrder" : 1,
    "requirements":
    {
        "position": true,
        "positionOutput": true
    },
    "bools": {
        "CanonTileCoords": false,
        "Normal" : false,
        "Position" : true,
        "PositionOutput" : true,
        "TransformPosition" : false
    },
    "ints": {
        "ColorCount" : 0,
        "UVCount" :  0
    },
    "inputs" :
    [
        {
            "alias": "position",
            "dataType": "vec3",
            "conditional" : {
                "ifBoolTrue": "Position"
            }
        },
        {
            "alias": "normal",
            "dataType": "vec4",
            "conditional" : {
                "ifBoolTrue": "Normal"
            }
        }
     ],

    "outputs" :
    [
        {
            "alias": "position",
            "dataType": "vec3",
            "conditional" : {
                "ifBoolTrue": "PositionOutput"
            }
        },
        {
            "alias": "normal",
            "dataType": "vec3",
            "conditional" : {
                "ifBoolTrue": "Normal"
            }
        }
    ],

    "chunks": [
    {
        "comment" : "#include \"OnyxFunctions.sc\"",
        "lines":
        [
            "#include <../examples/common/common.sh>"
            , "#include \"OnyxFunctions.sc\""
        ],
        "position": "Includes",
        "type": "Vertex_and_Pixel"
    },
    { 
        "position": "Main",
        "type": "Vertex",
        "lines":[
            "\tvec3 midpoint = vec3_splat(0.0);"
        ]
    },
    { 
        "position": "Main",
        "type": "Vertex",
        "lines":[
            "\t// Using canonical tile coordinates",
            "\tvec2 tileCoord = mix(u_tileMin.xy, u_tileMax.xy, position.xy);",
            "\tfloat baseHeight = u_tileMin.z + (position.z * u_tileMax.z);",
            "\tposition = vec3(tileCoord, baseHeight);"
        ],
        "conditional" : {
            "ifBoolTrue": "CanonTileCoords"
        }
    },
    {
        "type": "Vertex",
        "position": "Main",
        "positionOffset": 5,
        "comment": "Scale then rotate then translate. We assume quaternions are {x, y, z, w}",
        "lines":
        [
            "\t// Scale, rotate, translate position",
            "\tfloat scale = u_scale.x;",
            "\tposition = scale * position;",
            "\tposition = rotate(u_quatRotation, position) + u_translation.xyz;"
        ],
        "conditional":{
            "ifBoolTrue": "TransformPosition"
        }
    },
    {
        "data": "\tgl_Position = vec4(position, 1.0);",
        "position": "Compose",
        "type": "Vertex",
        "conditional" : {
            "ifBoolTrue": "PositionOutput"
        }
    },
    {
        "position": "Compose",
        "positionOffset": 1,
        "type": "Vertex",
        "lines":[
            "\tmat4 viewMat = u_view;",
            "\tgl_Position = mul(u_proj, mul(viewMat, vec4(position.xyz, 1.0)));"
        ],
        "conditional" : {
            "ifBoolTrue": "TransformPosition"
        }
    },
    {
        "data": "\tv_normal = normal.xyz;",
        "position": "Compose",
        "type": "Vertex",
        "conditional" : {
            "ifBoolTrue": "Normal"
        }
    },
    {
        "data": "\tvec4 fragColor = vec4(0,0,0,0);",
        "position": "Main",
        "type": "Pixel"
    },
    {
        "data": "\tgl_FragColor = fragColor;",
        "position": "Compose",
        "positionOffset": 10,
        "type": "Pixel"
    }
],

    "shaderParameters": [
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_tileMin",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
            },
            "conditional": {
                "ifBoolTrue": "CanonTileCoords"
            }
        },
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_tileMax",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 1.0,
                "y": 1.0,
                "z": 1.0
            },
            "conditional": {
                "ifBoolTrue": "CanonTileCoords"
            }
        },
        {
            "componentName" : "ColorOnlyQuatBase",
            "imguiRate" : 0.009999999776482582,
            "max" : 100.0,
            "min" : 0.0,
            "name" : "u_scale",
            "realtimeUniform": true,
            "type" : "float",
            "float" : 1.0,
            "conditional": {
                "ifBoolTrue": "TransformPosition"
            }
        },
        {
            "componentName" : "ColorOnlyQuatBase",
            "imguiRate" : 0.009999999776482582,
            "name" : "u_quatRotation",
            "realtimeUniform": true,
            "type" : "vec4",
            "vec4" :
            {
                "x" : 0,
                "y" : 0,
                "z" : 1,
                "w" : 0
            },
            "conditional": {
                "ifBoolTrue": "TransformPosition"
            }
        },
        {
            "componentName" : "ColorOnlyQuatBase",
            "imguiRate" : 0.009999999776482582,
            "name" : "u_translation",
            "realtimeUniform": true,
            "type" : "vec3",
            "vec3" :
            {
                "x" : 0,
                "y" : 0,
                "z" : 0
            },
            "conditional": {
                "ifBoolTrue": "TransformPosition"
            }
        },
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_nearFarPlane",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
            }
        },
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_eyePos",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
            }
        },
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_camRight",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
            }
        },
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_camForward",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
            }
        },
        {
            "componentName": "ColorOnlyQuatBase",
            "imguiRate": 0.01,
            "max": -1.0,
            "min": -1.0,
            "name": "u_camUp",
            "realtimeUniform": true,
            "type": "vec3",
            "vec3": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
            }
        }
    ]
}
